
'******fdggfcccgh***************************************************
' RUN KEYWORD FUNCTION
'*********************************************************
'*********************************************************
' Purpose:  Run the action linked to a Keyword
' Inputs:   objCurrent:       the data string to analyse (e.g. "Data(Query,Search)", "Env(URL)", "5")
'           strKeyword:       the keyword linked to the function to run
'           strBrowserID:    the id of the Browser in the ObjectRepository
'           strPageID:         the id of the Page in the ObjectRepository
'           strObjectID:       the id of the object in the ObjectRepository
'           strParam1:        first parameter to pass to the function to run (optional)
'           strParam2:        second parameter to pass to the function to run (optional)
'           strParam3:        third parameter to pass to the function to run (optional)
' Returns:  The return code of the keyword function. 
'           If the keyword hasn't been found, returns 1 and raise an error.
'*********************************************************
Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
	On Error Resume Next
	Err.Clear

	Dim arrReturn

	' Call the Keyword run function of the concerned library
	Dim strLibrary
	strLibrary = getLibraryFromKeyword(strKeyword)
	If Err.Number <> 0 Then
		arrReturn = Array (1, Err.Description)
		Exit Function
	End If

	Dim objKeywordLibrary

	Select Case strLibrary
	Case "common"
		Set objKeywordLibrary = New CommonKeyword
	Case "web"
		Set objKeywordLibrary = New WebKeyword
	Case "java"
		Set objKeywordLibrary = New JavaKeyword
	Case "oracle"
		Set objKeywordLibrary = New OracleKeyword
	Case "TE"
		Set objKeywordLibrary = New TEKeyword
	Case "DEVICE"
		Set objKeywordLibrary = New DeviceKeyword
	Case "Window"
		Set objKeywordLibrary = New WindowKeyword
	Case "SWF"
		Set objKeywordLibrary = New SWFKeyword



	'############# Add here other Keyword Libraries ###########
'	Case "<prefix>"
'		Set objKeywordLibrary = New <Prefix>Keyword
	'#####################################################
	Case Else
		'If Library not found
		Err.Raise 1, "Keyword",  "'" & strLibrary & "' keyword library for keyword '" & strKeyword &"' not found"
		arrReturn = Array (1, Err.Description)
		runKeyword = arrReturn
		Exit Function
	End Select

	'Run the Keyword 
	arrReturn = objKeywordLibrary.runKeyword (strKeyword, strBrowserID, strPageID, strObjectID, strParam1, strParam2, strParam3)

	Set objKeywordLibrary = Nothing

	runKeyword = arrReturn
End Function

'*********************************************************
' KEYWORD UTILITY FUNCTIONS
'*********************************************************

'*********************************************************
' Purpose:  Retrieves Object type from the keyword. A Keyword
' Inputs:   strKeyword:      the keyword following the format <library>_<object type>_<action>
' Returns:  The object type or return the found in the Object Repository. 
'           If the object isn't found, returns Nothing and raise an error.
'*********************************************************
Public Function getObjectTypeFromKeyword(ByVal strKeyword) ' As String
	On Error Resume Next
	Err.Clear
	getObjectTypeFromKeyword = ""
	
	Dim arrSplit
	arrSplit = Split (strKeyword, "_")
	If Ubound(arrSplit) > 1 Then
		getObjectTypeFromKeyword = arrSplit(1)
	Else
		Err.Raise 1, "Keyword", "'" & strKeyword & "' keyword doesn't contain an object type"
	End If
End Function

'*********************************************************
' Purpose:  Retrieves Library from the keyword. A Keyword
' Inputs:   strKeyword:      the keyword following the format <library>_><object type>_<action>
' Returns:  The object type or return the found in the Object Repository. 
'           If the object isn't found, returns Nothing and raise an error.
'*********************************************************
Public Function getLibraryFromKeyword(ByVal strKeyword) ' As String
	On Error Resume Next
	Err.Clear
	getLibraryFromKeyword = ""
	
	Dim arrSplit
	arrSplit = Split (strKeyword, "_")
	If Ubound(arrSplit) > 1 Then
		getLibraryFromKeyword = arrSplit(0)
	Else
		Err.Raise 1, "Keyword", "'" & strKeyword & "' keyword doesn't contain a library name"
	End If
End Function

Public Sub saveRunValue(ByVal strValueID, ByVal strValue)
	Environment.Value("temp_" & strValueID) = strValue
End Sub

'*********************************************************
' Generic KEYWORD Implementation
'*********************************************************

Public Function generic_object_activate(ByRef objObject, ByRef blnAbordTest)
	If objObject.Exist(4) = False Then
		Dim strErrorDescription
		strErrorDescription = objObject.GetROPRoperty("micClass") & " not found"
		If blnAbordTest Then
			Err.Raise 1, "Error", strErrorDescription
		End If
		generic_object_activate = Array (1, "", strErrorDescription)
	Else
		objObject.Activate
        generic_object_activate = Array (0, "", "Successfully completed.")
	End If
End Function

Public Function generic_object_click(ByRef objObject)

                Setting.WebPackage("ReplayType") = 2

                                objObject.FireEvent "onMouseOver"
	objObject.Click
	generic_object_click = Array (0, "", "Successfully click on the " & objObject.GetROPRoperty("micClass"))
End Function

Public Function generic_object_exist(ByRef objObject, ByRef blnAbordTest)
	If objObject.Exist(4) = False Then
		Dim strErrorDescription
		strErrorDescription = objObject.GetROPRoperty("micClass") & " not found"
		If blnAbordTest Then
			Err.Raise 1, "Error", strErrorDescription
		End If
		generic_object_exist = Array (1, "", strErrorDescription)
	Else
        generic_object_exist = Array (0, "", "Successfully completed.")
	End If
End Function


Public Function generic_object_get(ByRef objObject, ByVal strValueID, ByVal strPropertyID)
	if objobject.exist(10) then
	Dim strValue
	strValue = objObject.GetROProperty(strPropertyID)
	Call saveRunValue (strValueID, strValue)
	generic_object_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
	end if
End Function
Public Function generic_object_select(ByRef objObject, ByVal strValue)
	objObject.Select strValue
	generic_object_select = Array (0, "", "Value '" & strValue & "' selected in the " & objObject.GetROPRoperty("micClass") & " field")
End Function

Public Function generic_object_set(ByRef objObject, ByVal strValue)
Setting.WebPackage("ReplayType") = 2

	objObject.Set strValue
	generic_object_set = Array (0, "", "Value '" & strValue & "' selected in the " & objObject.GetROPRoperty("micClass") & " field")
End Function
Public Function generic_object_sendkey_enter(ByRef objObject)
   objObject.Click
	Dim objShell
	Set objShell = CreateObject("WScript.Shell")
	objShell.SendKeys "{ENTER}"
	Set objShell = Nothing
	generic_object_sendkey_enter = Array (0, "", "The 'Enter' key has been pressed on the " & objObject.GetROPRoperty("micClass") & " field")
End Function

'*********************************************************
' Common KEYWORDS
'*********************************************************

Class CommonKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a Common Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:    the id of the Browser in the ObjectRepository
	'           strPageID:         the id of the Page in the ObjectRepository
	'           strObjectID:       the id of the object in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
	'*********************************************************
	Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
	
		Dim objCurrent
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword

		Case "common_ASN_Temp1"
			arrReturn = common_ASN_Temp1(strParam1, strParam2,strParam3)

		Case "common_ASN_Temp2"
			arrReturn = common_ASN_Temp2(strParam1, strParam2,strParam3)

		Case "common_ASN_Temp4"
			arrReturn = common_ASN_Temp4(strParam1, strParam2,strParam3)

		Case "common_check_addition"
			arrReturn = common_check_addition(strParam1, strParam2,strParam3)

		Case "common_check_additionRound"
			arrReturn = common_check_additionRound(strParam1, strParam2,strParam3)

		Case "common_check_arrayaddition"
			arrReturn = common_check_arrayaddition(strParam1, strParam2)

		Case "common_check_concatenation"
			arrReturn = common_check_concatenation(strParam1, strParam2,strParam3)

		Case "common_check_concatnospaces"
			arrReturn = common_check_concatnospaces(strParam1, strParam2,strParam3)

        Case "common_check_DateTimeFormat"
			arrReturn = common_check_DateTimeFormat(strParam1, strParam2)

        Case "common_check_equal"
			arrReturn = common_check_equal(strParam1, strParam2)

		Case "common_check_equal_2"
			arrReturn = common_check_equal_2(strParam1, strParam2)

		Case "common_check_equal_trim"
			arrReturn = common_check_equal_trim(strParam1, strParam2)

        	Case "common_check_equaliffail"
			arrReturn = common_check_equaliffail(strParam1, strParam2)
	
        	Case "common_check_greater"
			arrReturn = common_check_greater(strParam1, strParam2)

		Case "common_check_greaterorequal"
			arrReturn = common_check_greaterorequal(strParam1, strParam2)
			
		Case "common_check_greaterthanequalvalue"
			arrReturn = common_check_greaterthanequalvalue(strParam1, strParam2,strParam3)

		Case "common_check_greatervalue"
			arrReturn = common_check_greatervalue(strParam1, strParam2,strParam3)
			
		Case "common_check_ifcondition"
			arrReturn = common_check_ifcondition(strParam1, strParam2)
	
		Case "common_check_ifinstring"
			arrReturn = common_check_ifinstring(strParam1, strParam2)
			
		Case "common_check_insidecheck"
			arrReturn = common_check_insidecheck(strParam1, strParam2,strParam3)

		Case "common_check_midstring"
			arrReturn = common_check_midstring(strParam1, strParam2,strParam3)

		Case "common_check_multiplication"
			arrReturn = common_check_multiplication(strParam1, strParam2,strParam3)

		Case "common_check_multiplication_ReturnString"
			arrReturn = common_check_multiplication_ReturnString(strParam1, strParam2,strParam3)

		Case "common_check_nomore"
			arrReturn = common_check_nomore(strParam1, strParam2, strParam3)
			
		Case "common_check_notequal"
			arrReturn = common_check_notequal(strParam1, strParam2)

		Case "common_check_notequal_trim"
			arrReturn = common_check_notequal_trim(strParam1, strParam2)
		
        	Case "common_check_NotExists"
			arrReturn = common_check_NotExists(strParam1, strParam2)

		Case "common_check_OpenApplication"
			arrReturn = common_check_OpenApplication(strParam1)

		Case "common_check_regexp"
			arrReturn = common_check_regexp(strParam1, strParam2)				

		Case "common_check_rownoOPSTEST"
			arrReturn = common_check_rownoOPSTEST(strParam1, strParam2)
			
		Case "common_check_smallervalue"
			arrReturn = common_check_smallervalue(strParam1, strParam2,strParam3)
		
		Case "common_check_split"
			arrReturn = common_check_split(strParam1, strParam2,strParam3)

		Case "common_check_subtraction"
			arrReturn = common_check_subtraction(strParam1, strParam2,strParam3)
			
		Case "common_check_truncateleft"
			arrReturn = common_check_truncateleft(strParam1, strParam2,strParam3)

		Case "common_check_subtraction_ReturnString"
			arrReturn = common_check_subtraction_ReturnString(strParam1, strParam2,strParam3)
		
		Case "common_check_wait"
			arrReturn = common_check_wait(strParam1)

		Case "common_Data_Extraction"
			arrReturn = common_Data_Extraction(strParam1, strParam2, strParam3)
			
		Case "common_Data_Extraction_PUT"
			arrReturn = common_Data_Extraction_PUT(strParam1, strParam2)

		Case "common_Data_To_Folder"
			arrReturn = common_Data_To_Folder(strParam1,strParam2,strParam3)
					
		Case "common_StartPutty"
			arrReturn = common_StartPutty(strParam1,strParam2,strParam3)

		Case "common_Data_Password"
            		arrReturn = common_Data_Password(strParam1,strParam2)
            		

                Case "common_IR06001_ConvertTextFiletoExcel"
				arrReturn = common_IR06001_ConvertTextFiletoExcel(strParam1, strParam2)

		Case "common_IR06001_CompareExceltoExcel"
				arrReturn = common_IR06001_CompareExceltoExcel(strParam1, strParam2)

            		
        Case "common_Data_To_BOMBFolder"
			arrReturn = common_Data_To_BOMBFolder(strParam1, strParam2,strParam3)
		

		Case "common_Date_Split"
			arrReturn = common_Date_Split(strParam1, strParam2)

                        
        	Case "common_string_addzero"
			arrReturn = common_string_addzero(strParam1, strParam2,strParam3)
		

		
         	Case Else
			Err.Raise 1, "Common Keyword", strKeyword & " keyword not found"
			arrReturn = Array(1, "", Err.Description)
		End Select



		'Set objCurrent = Nothing
	
		runKeyword = arrReturn
	End Function
	
	'*********************************************************
	' Object Repository search
	'*********************************************************
	
	Private Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		Select Case strObjectType
	'	Case "browser"
	'		Set getQTPObject  = Browser(strObjectID)
		End Select
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "Object Repository", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If
	End Function
	
	'*********************************************************
	' Keyword implementations
	'*********************************************************


Public Function common_ASN_Temp1(ByVal varValue1, ByVal varValue2, ByVal varValue3)

	   Dim i , j , Row , Col , rowno, excelobject, excelSheet, datavalue , ponum, asnnum, quant, quant1, suppid, lonum, cmonth, cday , cyear , toid , prodid, sname, PO, Dat, quantity1, quantity2, filename1, filename2
	   Dim arr()

			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(varValue1)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("Query")
			datavalue = varValue3
            Row = excelSheet.UsedRange.Rows.Count

			If datavalue = "TD127" or datavalue = "TD128" Then


				For i = 1 to Row
					If excelSheet.cells(i,1).value = datavalue then
						rowno = i
						Exit for
						end if
				Next
	
				Col = excelSheet.UsedRange.columns.count
	
				For i = 1 to Col
					j = i - 1
	
					If excelSheet.cells(1,i).value ="ASNNumber" then
					asnnum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="ProductId" then
					prodid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="PONumber" then
					ponum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Supplierid" then
					suppid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TESCOSHIPTOID" then
					toid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Day" then
					cday = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Month" then
					cmonth = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Code_Year" then
					cyear = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity" then
					quant = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Sname" then
					sname = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity_w" then
					quant1 = excelSheet.cells(rowno,i).value
					end if 				
					If excelSheet.cells(1,i).value ="Quantity1" then
					quantity1 = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="FileName1" then
					filename1 = excelSheet.cells(rowno,i).value
					end if 
						If excelSheet.cells(1,i).value ="FileName2" then
					filename2 = excelSheet.cells(rowno,i).value
					end if 
					
	
	
	'				If excelSheet.cells(1,i).value ="Quantity2" then
	'				quantity2 = excelSheet.cells(rowno,i).value
	'				end if 
	
	
	
				Next
				
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
	
				Set excelobject = createobject( "Excel.Application")
				excelobject.Workbooks.Open(varValue2)
				Set excelSheet = excelobject.ActiveWorkbook.Worksheets("ASN")
	
	
				excelSheet.cells(03,02).Value = asnnum
				excelSheet.cells(03,05).Value = suppid
				lonum = Right(asnnum, Len(asnnum) - 1)
				excelSheet.cells(04,02).Value = lonum
				excelSheet.cells(04,05).Value = sname
				excelSheet.cells(05,05).Value = "'" + toid
				excelSheet.cells(19,01).Value = "1"
	
				If  trim(quant1) <> "" Then
						  
				
				excelSheet.cells(19,02).Value = quant1
				excelSheet.cells(19,03).Value = quant1
				else
				excelSheet.cells(19,02).Value = quant
				excelSheet.cells(19,03).Value = quant
				
				
				End If
	
				
	
				PO = "LM" + ponum + "001"
				excelSheet.cells(19,07).Value = PO
				Dat = cmonth + "/" + cday  +  "/" + cyear
				excelSheet.cells(19,10).Value = Dat
	
            	
				excelobject.ActiveWorkbook.Save
	
			
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing


'''''''''''''''''''''''''''''''''''''''''''''' SECOND   ASN   SHEET '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

		Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(varValue1)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("Query")
			datavalue = varValue3
	            Row = excelSheet.UsedRange.Rows.Count

	
			For i = 1 to Row
					If excelSheet.cells(i,1).value = datavalue then
						rowno = i
						Exit for
						end if
				Next
	
				Col = excelSheet.UsedRange.columns.count
	
				For i = 1 to Col
					j = i - 1
	
					If excelSheet.cells(1,i).value ="ASNNumber1" then
					asnnum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="ProductId1" then
					prodid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="PONumber1" then
					ponum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Supplierid" then
					suppid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TESCOSHIPTOID" then
					toid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Day" then
					cday = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Month" then
					cmonth = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Code_Year" then
					cyear = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity1" then
					quant = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Sname" then
					sname = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity_w" then
					quant1 = excelSheet.cells(rowno,i).value
					end if 				
					
						
					
	
	
	'				If excelSheet.cells(1,i).value ="Quantity2" then
	'				quantity2 = excelSheet.cells(rowno,i).value
	'				end if 
	
	
	
				Next
				
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
	
				Set excelobject = createobject( "Excel.Application")
				excelobject.Workbooks.Open(filename1)
				Set excelSheet = excelobject.ActiveWorkbook.Worksheets("ASN")
	
	
				excelSheet.cells(03,02).Value = asnnum
				excelSheet.cells(03,05).Value = suppid
				lonum = Right(asnnum, Len(asnnum) - 1)
				excelSheet.cells(04,02).Value = lonum
				excelSheet.cells(04,05).Value = sname
				excelSheet.cells(05,05).Value = "'" + toid
				excelSheet.cells(19,01).Value = "1"
	
				If  trim(quant1) <> "" Then
						  
				
				excelSheet.cells(19,02).Value = quant1
				excelSheet.cells(19,03).Value = quant1
				else
				excelSheet.cells(19,02).Value = quant
				excelSheet.cells(19,03).Value = quant
				
				
				End If
	
				
	
				PO = "LM" + ponum + "001"
				excelSheet.cells(19,07).Value = PO
				Dat = cmonth + "/" + cday  +  "/" + cyear
				excelSheet.cells(19,10).Value = Dat
	
            	
				excelobject.ActiveWorkbook.Save
	
			
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''THIRD   ASN  SHEET   '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

		Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(varValue1)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("Query")
			datavalue = varValue3
            Row = excelSheet.UsedRange.Rows.Count
		For i = 1 to Row
					If excelSheet.cells(i,1).value = datavalue then
						rowno = i
						Exit for
						end if
				Next
	
				Col = excelSheet.UsedRange.columns.count
	
				For i = 1 to Col
					j = i - 1
	
					If excelSheet.cells(1,i).value ="ASNNumber2" then
					asnnum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="ProductId2" then
					prodid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="PONumber2" then
					ponum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Supplierid" then
					suppid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TESCOSHIPTOID" then
					toid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Day" then
					cday = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Month" then
					cmonth = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Code_Year" then
					cyear = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity2" then
					quant = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Sname" then
					sname = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity_w" then
					quant1 = excelSheet.cells(rowno,i).value
					end if 				
				
					
	
	
	'				If excelSheet.cells(1,i).value ="Quantity2" then
	'				quantity2 = excelSheet.cells(rowno,i).value
	'				end if 
	
	
	
				Next
				
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
	
				Set excelobject = createobject( "Excel.Application")
				excelobject.Workbooks.Open(filename2)
				Set excelSheet = excelobject.ActiveWorkbook.Worksheets("ASN")
	
	
				excelSheet.cells(03,02).Value = asnnum	
				excelSheet.cells(03,05).Value = suppid
				lonum = Right(asnnum, Len(asnnum) - 1)
				excelSheet.cells(04,02).Value = lonum
				excelSheet.cells(04,05).Value = sname
				excelSheet.cells(05,05).Value = "'" + toid
				excelSheet.cells(19,01).Value = "1"
	
				If  trim(quant1) <> "" Then
						  
				
				excelSheet.cells(19,02).Value = quant1
				excelSheet.cells(19,03).Value = quant1
				else
				excelSheet.cells(19,02).Value = quant
				excelSheet.cells(19,03).Value = quant
				
				
				End If
	
				
	
				PO = "LM" + ponum + "001"
				excelSheet.cells(19,07).Value = PO
				Dat = cmonth + "/" + cday  +  "/" + cyear
				excelSheet.cells(19,10).Value = Dat
	
            	
				excelobject.ActiveWorkbook.Save
	
			
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
			
			else 
				For i = 1 to Row
					If excelSheet.cells(i,1).value = datavalue then
						rowno = i
						Exit for
						end if
				Next
	
				Col = excelSheet.UsedRange.columns.count
	
				For i = 1 to Col
					j = i - 1
	
					If excelSheet.cells(1,i).value ="ASNNumber" then
					asnnum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="ProductId" then
					prodid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="PONumber" then
					ponum = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Supplierid" then
					suppid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TESCOSHIPTOID" then
					toid = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Day" then
					cday = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Code_Month" then
					cmonth = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Code_Year" then
					cyear = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity" then
					quant = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Sname" then
					sname = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Quantity_w" then
					quant1 = excelSheet.cells(rowno,i).value
					end if 				
					If excelSheet.cells(1,i).value ="Quantity1" then
					quantity1 = excelSheet.cells(rowno,i).value
					end if 
					
	
	
	'				If excelSheet.cells(1,i).value ="Quantity2" then
	'				quantity2 = excelSheet.cells(rowno,i).value
	'				end if 
	
	
	
				Next
				
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
	
				Set excelobject = createobject( "Excel.Application")
				excelobject.Workbooks.Open(varValue2)
				Set excelSheet = excelobject.ActiveWorkbook.Worksheets("ASN")
	
	
				excelSheet.cells(03,02).Value = asnnum
				excelSheet.cells(03,05).Value = suppid
				lonum = Right(asnnum, Len(asnnum) - 1)
				excelSheet.cells(04,02).Value = lonum
				excelSheet.cells(04,05).Value = sname
				excelSheet.cells(05,05).Value = "'" + toid
				excelSheet.cells(19,01).Value = "1"
	
				If  trim(quant1) <> "" Then
						  
				
				excelSheet.cells(19,02).Value = quant1
				excelSheet.cells(19,03).Value = quant1
				else
				excelSheet.cells(19,02).Value = quant
				excelSheet.cells(19,03).Value = quant
				
				
				End If
	
				
	
				PO = "LM" + ponum + "001"
				excelSheet.cells(19,07).Value = PO
				Dat = cmonth + "/" + cday  +  "/" + cyear
				excelSheet.cells(19,10).Value = Dat
	
				If  quantity1 <> "" Then
						  
				excelSheet.cells(20,02).Value = quantity1
				excelSheet.cells(20,03).Value = quantity1
				excelSheet.cells(20,01).Value = "1"
				excelSheet.cells(20,07).Value = PO
				excelSheet.cells(20,10).Value = Dat
				
				
				End If
	
	'				If  quantity2 <> "" Then
	'                      
	'			excelSheet.cells(20,02).Value = quantity2
	'			excelSheet.cells(20,03).Value = quantity2
	'			excelSheet.cells(20,01).Value = "3"
	'			excelSheet.cells(20,07).Value = PO
	'			excelSheet.cells(20,10).Value = Dat
	'			
	'            
	'			End If
	
	
				excelobject.ActiveWorkbook.Save
	
			
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
	
			common_ASN_Temp1 = Array (0, "The ASN template is ready ", varValue1)
			End If
			common_ASN_Temp1 = Array (0, "The ASN template is ready ", varValue1)
End Function

Public Function common_IR06001_ConvertTextFiletoExcel(ByVal varValue1, ByVal varValue2)
	If varValue1 <> "" and varValue2 <> "" Then

		'Option Explicit
		
		Dim objFSO, objFile, textFilePath, excelFilePath
		
		textFilePath = varValue1
		excelFilePath = varValue2

		Dim HeaderValue, SumHeader
		
		HeaderValue = Split("Center, Warehouse, BatchNum, SequenceNum, ProcStat, Custld, orderNum, TotaProducts, TotalUnits, TotalWeight, TotalCube", ",")
		SumHeader = Split("TotalOrders, SumUnits, SumWeight, SumCube", ",")
		
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		
		If objFSO.FileExists(textFilePath) Then
			common_IR06001_ConvertTextFiletoExcel = Array (0, "IR06-01 report text file exist", "Successful")
			else
			common_IR06001_ConvertTextFiletoExcel = Array (1, "IR06-01 report text file doesnot exist", "Unsuccessful")
		End If
		
		Set objFile = objFSO.OpenTextFile(textFilePath)
		objFile.ReadLine
		
		Dim objExcel, objWorkBook
		Dim xl_Row, xl_Col
		
		Set objExcel = CreateObject("Excel.Application")
		objExcel.DisplayAlerts = False
		objExcel.Visible = True
		
		Set objWorkBook = objExcel.Workbooks.Add
	
		xl_Row = 1
		xl_Col = 1
		
		Dim iCounter, jCounter, kCounter, Iterator, txtReadLine, txtWriteLine, txtLastRow, txt
		Dim colCount, rowCount
		
		
		'Loop to export report header
		For iCounter = LBound(HeaderValue) to UBound(HeaderValue)
			If xl_Col = 7 Then
				objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = ""
				xl_Col = xl_Col + 1
			End if
			objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = Trim(HeaderValue(iCounter))
			xl_Col = xl_Col + 1
		Next
		
		xl_Row = xl_Row + 1
		
		txtReadLine = Split(objFile.ReadAll,vbcrlf)
		
		'Loop to export data from Text file to excel File
		For jCounter = 1 to UBound(txtReadLine)-1
			If jCounter = UBound(txtReadLine)-1 Then
				rowCount = objWorkBook.Worksheets(1).UsedRange.Rows.Count - 1
				xl_Col = 1
				objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = "SUMRECORD"
				xl_Row = xl_Row + 1
				
				For Iterator = LBound(SumHeader) to UBound(SumHeader)
					objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = Trim(SumHeader(Iterator))
					xl_Col = xl_Col + 1
				Next
				
				txtLastRow = Split(Trim(txtReadLine(jCounter)), "PROCESSED")
				txtWriteLine = Split(Trim(txtLastRow(1)))
				xl_Col = 1
				xl_Row = xl_Row + 1
				objWorkBook.Worksheets(1).Cells(xl_row,xl_col) = rowCount
				
				For kCounter = LBound(txtWriteLine) to UBound(txtWriteLine)
					If txtWriteLine(kCounter) <> "" Then
						xl_Col = xl_Col + 1
						objWorkBook.Worksheets(1).Cells(xl_row,xl_col) = Trim(txtWriteLine(kCounter))	
					End If	
				Next	
				
				else
				txtWriteLine = Split(txtReadLine(jCounter))
				xl_Col = 1
				
				For kCounter = LBound(txtWriteLine) to UBound(txtWriteLine)
		
					If Len(Trim(txtWriteLine(kCounter))) > 0 Then
					
						If (xl_Col = 7) Then 
							If ((Trim(txtWriteLine(kCounter))) = "F" or (Trim(txtWriteLine(kCounter))) = "S") Then
								else
								objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = ""	
								xl_Col = xl_Col + 1
							End if
						End if
						
						If kCounter = 0 Then
							txt = Split(txtWriteLine(kCounter), "-")
							objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = txt(0)
							xl_Col = xl_Col + 1
							objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = txt(1)
							xl_Col = xl_Col + 1
							else
							objWorkBook.Worksheets(1).Cells(xl_Row, xl_Col) = Trim(txtWriteLine(kCounter))
							xl_Col = xl_Col + 1
						End If
						
					End If		
				Next			
				xl_Row = xl_Row + 1
				
			End If
			
		Next
		
		rowCount = objWorkBook.Worksheets(1).UsedRange.Rows.Count
		colCount = objWorkBook.Worksheets(1).UsedRange.Columns.Count
		
		objWorkBook.Worksheets(1).Cells(rowCount, xl_Col).Delete
		objWorkBook.Worksheets(1).Columns(colCount).Delete

		objWorkBook.Worksheets(1).Range("A:BZ").NumberFormat = "@"
		objExcel.ActiveWorkbook.SaveAs (excelFilePath)
		objExcel.Application.Quit
		
		Set objFile = Nothing
		Set objFSO = Nothing
		Set objWorkBook = Nothing
		Set objEXcel = Nothing
		Systemutil.CloseProcessByName("Excel.exe")
		common_IR06001_ConvertTextFiletoExcel = Array (0, "Successfully Extracted '" & varValue1 & "'", varValue2)
		Else
		common_IR06001_ConvertTextFiletoExcel = Array (1, "Enter File Locations '" & varValue1 & "'", varValue2)
	End if
End Function

Public Function common_IR06001_CompareExceltoExcel(ByVal varValue1, ByVal varValue2)
	
	If varValue1 <> "" and varValue2 <> "" Then

		'Option Explicit
		
		Dim excelFilePath1, excelFilePath2, objFSO
	
		excelFilePath1 = varValue1
		excelFilePath2 = varValue2
	
		
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		
		If objFSO.FileExists(excelFilePath1) and objFSO.FileExists(excelFilePath2) Then
			common_IR06001_CompareExceltoExcel = Array (0, "IR06-01 report UFT/BA file exist for comparision", "Successful")
			else
			common_IR06001_CompareExceltoExcel = Array (1, "IR06-01 report UFT/BA file doesnot exist for comparision", "Unsuccessful")
		End If
		
		Dim objExcel, objWorkBook1, objWorkBook2, objWorkSheet1, objWorkSheet2
		
		'Define excel file 1. UFT datasheet 2. BA datasheet
		Set objExcel = CreateObject("Excel.Application")
		objExcel.DisplayAlerts = False
		objExcel.Visible = True
		
		Set objWorkBook1 = objEXcel.Workbooks.Open(excelFilePath1)
		Set objWorkBook2 = objExcel.Workbooks.Open(excelFilePath2)
		
		Set objWorkSheet1 = objWorkBook1.Worksheets("Query2")
		Set objWorkSheet2 = objWorkBook2.Worksheets(1)
		
		Dim Flag, Mismatch_Counter, txtMismatch, BA_Data, UFT_Data, rowCount, colCount, Header, row1
		Dim BA_Cell, UFT_Cell
		Mismatch_Counter = 0
		
		rowCount = objWorkSheet1.UsedRange.Rows.Count
		colCount = objWorkSheet1.UsedRange.Columns.Count
		
		row1 = rowCount - 3
		
		'Compare both the excel files cell by cell
		For Each cell In objWorksheet1.UsedRange
		
			If IsNumeric(cell.Value) Then
				BA_Cell = FormatNumber(cell.Value)
				UFT_Cell = FormatNumber(objWorksheet2.Range(cell.Address).Value)
				Else
				BA_Cell = cell.Value
				UFT_Cell = objWorksheet2.Range(cell.Address).Value
			End if
			
			If BA_Cell <> UFT_Cell Then
				Mismatch_Counter = Mismatch_Counter + 1
				'If BA_Data <> "" Then
					BA_Data = cell.Value
					'Else
					'BA_Data = "Blank/Empty Cell"
				'End if
				'If UFT_Data <> "" Then
					UFT_Data = objWorksheet2.Range(cell.Address).Value
					'Else
					'UFT_Data = "Blank/Empty Cell"
				'End if
				txtMismatch = Split(cell.Address, "$")
				
				If int(txtMismatch(2)) <= int(row1) Then
					Header = objWorkSheet1.cells(1, txtMismatch(1)).Value
					else
					Header = objWorkSheet1.cells(row1+2, txtMismatch(1)).Value
				End If
				Reporter.ReportEvent micWarning, "BA datasheet: "+Header&" is "&BA_Data&" and UFT datasheet: "+Header&" is "&UFT_Data, "data(s) are Mismatched"
			End If
	   	Next
	   	
	   	If Mismatch_Counter = 1 Then
	   		Reporter.ReportEvent micPass, "Report comparision successful", "All data(s) are matched"
	   		Else
	   		Reporter.ReportEvent micWarning, "Report comparision successful", "Data(s) are not matched"
	   	End If
	   	
	   	objExcel.Application.Quit
	   	
	   	Set objWorkSheet1 = Nothing
	   	Set objWorkSheet2 = Nothing
	   	Set objWorkBook1 = Nothing
		Set objWorkBook2 = Nothing
		Set objEXcel = Nothing
		common_IR06001_CompareExceltoExcel = Array (0, "Comparision Done '" & varValue1 & "'", varValue2)
		Else
		common_IR06001_CompareExceltoExcel = Array (1, "Enter File Locations '" & varValue1 & "'", varValue2)
	End if
	
End Function




Public Function common_ASN_Temp2(ByVal varValue1, ByVal varValue2, ByVal varValue3)
	Dim OCC
	Dim Depot
	Dim xlApp
	Dim xlBook
	Dim xlSheet


	If varValue1 <> "" and varValue2 <> "" and varValue3 <> "" Then

		If Environment.Value("TestIteration") = 1 Then

	Set xlApp = CreateObject("Excel.Application")

	xlApp.Visible=True
	Set xlBook = xlApp.WorkBooks.Open(varValue1)
	xlApp.Visible=True
	Wait(2)
	Set xlSheet = xlBook.WorkSheets("ASN")
	

	OCC= varValue2
	Depot= varValue3
	xlSheet.cells(19,05).Value = OCC

	xlSheet.cells(06,05).Value = Depot

	xlBook.Save
	xlBook.Close
	xlApp.Quit
		End If
		common_ASN_Temp2 = Array (0, "Successfully Extracted '" & varValue1 & "'", varValue2)
	else
		common_ASN_Temp2 = Array (1, "Enter Locations '" & varValue1 & "'", varValue2)
	End If
End Function


Public Function common_ASN_Temp4(ByVal varValue1, ByVal varValue2, ByVal varValue3)
	Dim OCC
	Dim OCC1
	Dim xlApp
	Dim xlBook
	Dim xlSheet,x

	If varValue1 <> "" and varValue2 <> "" Then

	If Environment.Value("TestIteration") = 1 Then

	Set xlApp = CreateObject("Excel.Application")

	OCC=varValue2
	
	
	xlApp.Visible=True
	Set xlBook = xlApp.WorkBooks.Open(varValue1)
	xlApp.Visible=True
	Wait(2)
	Set xlSheet = xlBook.WorkSheets("ASN")
	
	xlSheet.cells(20,05).Value = OCC
	If varValue3 <> "" Then
			OCC1=varValue3
			'xlSheet.cells(21,05).Value = OCC1
	End If



	xlBook.Save
	xlBook.Close
	xlApp.Quit
		End If
		common_ASN_Temp4 = Array (0, "Successfully Extracted '" & varValue1 & "'", varValue2)
	else
		common_ASN_Temp4 = Array (1, "Enter Locations '" & varValue1 & "'", varValue2)
	End If
End Function



Private Function common_check_addition(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
		   'If 	varValue1 >= 0Then
			   Dim sum
                sum = int(varValue1) + int(varValue2)
			sum=abs(sum)

				Call saveRunValue (varReturnValue, sum)
			common_check_addition = Array (0, "The values have been added '" & varValue1 & "'", varValue2)
		   'else
			'common_check_addition = Array (1, "The addition could not be done '" & varValue1 & "'", varValue2)
		'End If
End Function


Private Function common_check_additionRound(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
		   If 	varValue1 >= 0Then
			   Dim sum
                sum = varValue1 + varValue2
			sum=Round(sum)
			'msgbox sum

				Call saveRunValue (varReturnValue, sum)
			common_check_additionRound = Array (0, "The values have been added '" & varValue1 & "'", varValue2)
		   else
			common_check_additionRound = Array (1, "The addition could not be done '" & varValue1 & "'", varValue2)
		End If
End Function



Private Function common_check_arrayaddition(ByVal varExpectedValue, ByVal varActualValue)

		   Dim num , i , sum

		   sum = 0

		'varExpectedValue = array(10,50,40,70)

		num = ubound(varExpectedValue)
		   For i = 0 to num
		sum = sum + varExpectedValue(i)
		'msgbox sum
		

		   Next
		   sum=Cstr(sum)
		Call saveRunValue (varActualValue, sum)
		   	common_check_arrayaddition = Array (0, "The sum of the array values is '" & varActualValue , varActualValue)
		
End Function



Private Function common_check_concatenation(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
	   If 	varValue1 = "" Then
			common_check_concatenation = Array (1, "The concatenation could not be done'" & varValue1 & "'", varValue2)
			else
			Dim conc
			conc = trim(varValue1) + "_" + trim(varValue2)
				Call saveRunValue (varReturnValue, conc)
                				common_check_concatenation = Array (0, "The values have been subtracted '" & varValue1 & "'", varValue2)
	end if 
End Function






Private Function common_check_concatnospaces(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
	   If 	varValue1 = "" Then
			common_check_concatnospaces = Array (1, "The concatenation could not be done'" & varValue1 & "'", varValue2)
			else
			Dim conc
			conc = trim(varValue1) + trim(varValue2)
				Call saveRunValue (varReturnValue, conc)
                				common_check_concatnospaces = Array (0, "The values have been subtracted '" & varValue1 & "'", varValue2)
			end if 
End Function

Private Function common_check_DateTimeFormat(ByVal varValue1,ByVal varValue2)

			Dim A,B,C
			A = split(varValue1,"/")
			B = split(varValue2,":")
			If A(2) <> "" and B(2)<> "" Then
				common_check_DateTimeFormat = Array (0, "Date and Time Format Equal '" & varExpectedValue & "'", varActualValue)
			Else
				common_check_DateTimeFormat = Array (1, "Date and Time Format not Equal '" & varExpectedValue & "'", varActualValue)
			End If
End Function


Private Function common_check_equal(ByVal varExpectedValue, ByVal varActualValue)
                                If varExpectedValue = varActualValue or trim(varExpectedValue) = trim(varActualValue) Then
                                                common_check_equal = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)

                                                elseif int(varExpectedValue) = int(varActualValue) then
                                                common_check_equal = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)
                                Else
                                                common_check_equal = Array (1, "Equal '" & varExpectedValue & "'", varActualValue)
                                End If
End Function

Private Function common_check_equal_2(ByVal varExpectedValue, ByVal varActualValue)
	   Dim arrTo
		arrTo = split (varExpectedValue,"_")
		If arrTo(0) = varActualValue or arrTo(1) = varActualValue Then
			common_check_equal_2 = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_equal_2 = Array (1, "Equal '" & varExpectedValue & "'", varActualValue)
		End If
End Function


Private Function common_check_equal_trim(ByVal varExpectedValue, ByVal varActualValue)
		If Trim(varExpectedValue) = Trim(varActualValue) Then
			common_check_equal_trim = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_equal_trim = Array (1, "Equal '" & varExpectedValue & "'", varActualValue)
		End If
End Function

Private Function common_check_equaliffail(ByVal varExpectedValue, ByVal varActualValue)
		If varExpectedValue = varActualValue Then
			common_check_equaliffail = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)

			elseif int(varExpectedValue) = int(varActualValue) then
			common_check_equaliffail = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_equaliffail = Array (1, "Equal '" & varExpectedValue & "'", varActualValue)
		End If
End Function

Private Function common_check_greater(ByVal varExpectedValue, ByVal varActualValue)
		If varExpectedValue < Trim(varActualValue) Then
			common_check_greater = Array (0, "quantity is fine '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_greater = Array (2, "quantity is greater sorry no move  '" & varExpectedValue & "'", varActualValue)
		End If
End Function


Private Function common_check_greaterorequal(ByVal varExpectedValue, ByVal varActualValue)
		If int(trim(varExpectedValue)) < int(trim(varActualValue)) or int(trim(varExpectedValue)) = int(trim(varActualValue)) Then
			common_check_greaterorequal= Array (0, "quantity is fine '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_greaterorequal= Array (1, "quantity is greater '" & varExpectedValue & "'", varActualValue)
		End If
End Function


Private Function common_check_greaterthanequalvalue(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
		If int(trim(varValue1)) < int(Trim(varValue2)) Then

			Call saveRunValue (varReturnValue, varValue2)
			common_check_greaterthanequalvalue = Array (0, "greater value is '" & varValue2 & "'", varReturnValue )
		
		ElseIf int(trim(varValue2)) < int(Trim(varValue1)) Then

			Call saveRunValue (varReturnValue, varValue1)

			common_check_greaterthanequalvalue = Array (0, "greater value is  '" & varValue1 & "'", varReturnValue)
		Else

            common_check_greaterthanequalvalue = Array (0,  "both are Equal" ,"" & varValue1 & "'" ,  "" & varValue1 & "'" )

		End If
End Function
	





Private Function common_check_greatervalue(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
		If int(trim(varValue1)) < int(Trim(varValue2)) Then

			Call saveRunValue (varReturnValue, varValue2)
			common_check_greatervalue = Array (0, "greater value is '" & varValue2 & "'", varReturnValue )
		
		Else

			Call saveRunValue (varReturnValue, varValue1)

			common_check_greatervalue = Array (0, "greater value is  '" & varValue1 & "'", varReturnValue)
		End If
End Function


Private Function common_check_ifcondition (ByVal varValue1, ByVal varValue2)
	   Dim door
	   door = "DOR044"
	   If varValue1 = "dor044" or varValue1 = "DOR044" Then
		   
		   door = "DOR099"
		   Call saveRunValue (varValue2, door)
		   
		   
		   else
		  Call saveRunValue (varValue2, door)	
	   End If
	   common_check_ifcondition = Array (0, "The door value has been stored '" & varValue1 & "'", varValue2)
End Function


Private Function common_check_ifinstring(ByVal varValue1, ByVal varValue2)
		   If 	instr(1,varValue2,varValue1, 1 ) Then
			   
			
	 	common_check_ifinstring = Array (0, "String exists and is verified ", varValue1 )
		   else
			common_check_ifinstring = Array (1, "String does not exist ", varValue1 )
		End If
End Function


Private Function common_check_insidecheck(ByVal varValue1, ByVal varValue2, ByVal varValue3)
		   If 	int(varValue1) >= int(varValue2) and int(varValue1) <= int(varValue3) Then
			   
			common_check_insidecheck = Array (0, "The values have been checked '" & varValue1 & "'", varValue1)
		   else
			common_check_insidecheck = Array (1, "The values are out of range '" & varValue1 & "'", varValue1)
		End If
End Function

		


Public Function common_check_midstring(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)

		If 	 varValue1 <> "" Then
		 Dim locs , sum
		 locs = split(varValue2, "_")
		 sum = mid(varValue1, locs(0) , locs(1))
				   
		Call saveRunValue (varReturnValue, sum)
	
				
			common_check_midstring = Array (0, "The values have been multiplied '" & varValue1 & "'", varValue2)
		   else
		common_check_midstring = Array (1, "The multiplication could not be done '" & varValue1 & "'", varValue2)
			End If

End Function


Public Function common_check_multiplication(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)

		   If 	varValue1 <> 0  and varValue2 <> 0 Then
                  Dim sum
                sum = int(varValue1) * int(varValue2)
				Call saveRunValue (varReturnValue, sum)
			common_check_multiplication = Array (0, "The values have been multiplied '" & varValue1 & "'", varValue2)
		   else
			common_check_multiplication = Array (1, "The multiplication could not be done '" & varValue1 & "'", varValue2)
		End If
End Function

Public Function common_check_multiplication_ReturnString(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)

		   If 	varValue1 <> 0  and varValue2 <> 0 Then
                  Dim sum
                sum = int(varValue1) *int( varValue2)
				sum=Cstr(abs(sum))
				Call saveRunValue (varReturnValue, sum)

        		common_check_multiplication_ReturnString = Array (0, "The values have been multiplied '" & varValue1 & "'", varValue2)
		   else
			common_check_multiplication_ReturnString = Array (1, "The multiplication could not be done '" & varValue1 & "'", varValue2)
		End If
End Function


Private Function common_check_nomore(ByVal varValue1, ByVal varValue2, ByVal varValue3)
		If varValue1 = varValue3 Then
			common_check_nomore = Array (0, "Equal '" &varValue1 & "'", varValue1)

			elseif varValue2 = varValue3 then
			common_check_nomore = Array (0, "Equal '" & varValue1 & "'",varValue1)
		Else
			common_check_nomore = Array (1, "Equal '" & varValue1 & "'", varValue1)
		End If
End Function
	
Private Function common_check_notequal(ByVal varExpectedValue, ByVal varActualValue)
		If varExpectedValue <> varActualValue Then
			common_check_notequal = Array (0, "Not equal '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_notequal = Array (1, "Not equal '" & varExpectedValue & "'", varActualValue)
		End If
End Function

Private Function common_check_notequal_trim(ByVal varExpectedValue, ByVal varActualValue)
		If varExpectedValue <> Trim(varActualValue) Then
			common_check_notequal_trim = Array (0, "Not equal '" & varExpectedValue & "'", varActualValue)
		Else
			common_check_notequal_trim = Array (1, "Not equal '" & varExpectedValue & "'", varActualValue)
		End If
End Function


Private Function common_check_NotExists(ByVal varExpectedValue, ByVal varActualValue)
                 If trim(varExpectedValue) = trim(varActualValue) Then
                 common_check_NotExists = Array (1, "Equal '" & varExpectedValue & "'", varActualValue)
	        Else
	         common_check_NotExists = Array (0, "Equal '" & varExpectedValue & "'", varActualValue)
        	End If
End Function

Private Function common_check_OpenApplication(ByVal varExpectedValue)
	Dim fso, filepath
	
	Set fso=createobject("Scripting.FileSystemObject")
	'The file to check the existence
	filepath= varExpectedValue

	If fso.FileExists(filepath) then
	
	systemutil.Run filepath
 	 	common_check_OpenApplication = Array (0, "Application exists and is open now ", varExpectedValue )
	Else
		 common_check_OpenApplication = Array (1, "Application does not exist ", varExpectedValue )
	End If

	Set fso=nothing
	
	
		
End Function


Private Function common_check_regexp(ByVal varExpectedPattern, ByVal varActualValue)
		Dim objRegExp
		Set objRegExp = New RegExp
		objRegExp.Pattern = varExpectedPattern
		objRegExp.IgnoreCase = False ' Set case sensitivity.
		If objRegExp.Test(varActualValue) Then
			common_check_regexp = Array (0, "Match the pattern '" & varExpectedPattern & "'", "The Value '" & varActualValue & "' matches the Pattern")
		Else
			common_check_regexp = Array (1, "Match the pattern '" & varExpectedPattern & "'","The Value '" & varActualValue & "' doesn't match the Pattern")
		End If
		Set objRegExp = Nothing
End Function



Private Function common_check_rownoOPSTEST(ByVal varValue1, ByVal varValue2)
	If varValue1 = "SYSTEM" Then
	
	Call saveRunValue (varValue2,"7")
	
	common_check_rownoOPSTEST = Array (0, "Value has been set accordingly", varValue2 )
	Exit function
	ElseIf varValue1 = "OPSTEST" Then
	Call saveRunValue (varValue2,"6")
		common_check_rownoOPSTEST = Array (0, "Value has been set accordingly", varValue2 )
	Exit function

	else
		common_check_rownoOPSTEST = Array (1, "Unexpected Value ", varValue1 )
		
	End If
		   
End Function

Private Function common_check_smallervalue(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
		If int(trim(varValue1)) < int(Trim(varValue2)) Then

			Call saveRunValue (varReturnValue, varValue1)
			common_check_smallervalue = Array (0, "smaller  value is '" & varValue1 & "'" , varReturnValue)
		
		Else

			Call saveRunValue (varReturnValue, varValue2)

			common_check_smallervalue = Array (0, "smaller value is  '" & varValue2 & "'", varReturnValue)
		End If
End Function

Private Function common_check_split(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)


  	 If 	instr(1,varValue1, "_",1) Then

	   Dim locs

	   locs = split(varValue1, "_")
		'varValue2 = locs(0)
		 Call saveRunValue (varValue2,locs(0))

		'varReturnValue = locs(1)

		Call saveRunValue (varReturnValue ,locs(1))

		common_check_split = Array (0, "The values have been split from each other '" & varValue2 & "'", varReturnValue)

		exit function

		elseIf 	instr(1,varValue1, "-",1) Then

	
	
		   locs = split(varValue1, "-")
		'varValue2 = locs(0)
		 Call saveRunValue (varValue2,locs(0))

		'varReturnValue = locs(1)

		Call saveRunValue (varReturnValue ,locs(1))

		common_check_split = Array (0, "The values have been split from each other '" & varValue2 & "'", varReturnValue)

		exit function

		else

			common_check_split = Array (1, "The string cannot contains delimiter hence cannot split '" & varValue1 )
		
			end if 
End Function



'Private Function common_check_subtraction(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
'		   If 	int(varValue1) >= int(varValue2) Then
'			   Dim sum
'                sum = int(varValue1) - int(varValue2)
'				sum=abs(sum)
'				Call saveRunValue (varReturnValue, sum)
'			common_check_subtraction = Array (0, "The values have been subtracted '" & varValue1 & "'", varValue2)
'		   else
'			common_check_subtraction = Array (1, "The subtraction could not be done (irregular values) '" & varValue1 & "'", varValue2)
'		End If
'End Function

Private Function common_check_subtraction(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)
			common_check_subtraction = Array (1, "The subtraction could not be done (irregular values) '" & varValue1 & "'", varValue2)

		'		If varValue1 >= varValue2 Then
			   Dim sum
                sum = int(varValue1) - int(varValue2)
				sum=abs(sum)
				Call saveRunValue (varReturnValue, sum)
			common_check_subtraction = Array (0, "The values have been subtracted '" & varValue1 & "'", varValue2)
		   

'		End If
End Function



Private Function common_check_truncateleft(ByVal varValue1, ByVal varValue2, ByVal varValue3)
	Dim nul, i, newtext

    newtext = varValue1

	nul = len(newtext) 
	For i = 1 to len(newtext)
                
	If left(newtext, 1) =varValue2 Then
                nul = nul -1
                newtext = right(newtext,nul)
                
	End If


	Next


	Call saveRunValue (varValue3, newtext)

	common_check_truncateleft = Array (0, "The value has been trucated for '" & varValue2 & "'", varValue1)
end Function



Private Function common_check_subtraction_ReturnString(ByVal varValue1, ByVal varValue2, ByVal varReturnValue)

                                  ' If         varValue1 >= varValue2 Then

                                                   Dim sum

                sum = int (varValue1) - int (varValue2)

                                                                sum=Cstr(abs(sum))

                                                                Call saveRunValue (varReturnValue, sum)

                                                common_check_subtraction_ReturnString = Array (0, "The values have been subtracted '" & varValue1 & "'", varValue2)

                                   'else

                                                'common_check_subtraction = Array (1, "The subtraction could not be done (irregular values) '" & varValue1 & "'", varValue2)

                                'End If

End Function


Private Function common_check_wait(ByVal varValue1)
	wait (varValue1)
	common_check_wait = Array (0, "Wait was succesful  '" , varValue1)
			
End Function






                                                            

Public Function common_Data_Extraction(ByVal varValue1, ByVal varValue2 , ByVal varValue3)

    Dim x,y,TestString,fso,wfile,obj,wb,ws,i
    Dim TestArray

    If varValue1 <> "" and varValue2 <> "" Then

        set fso=createobject("scripting.filesystemobject")
        set wfile=fso.opentextfile(varValue1)
        set obj=createobject("excel.application")
        obj.displayalerts=false
        obj.visible=true

        Set wb = obj.WorkBooks.Open(varValue2)


        
        Set ws = wb.WorkSheets(varValue3)
        x=1
        ws.Range("A:BZ").NumberFormat = "@"

        Do until wfile.AtEndofstream
            y=1
            TestString = wfile.readline

            TestArray = Split(TestString , ",")

            For i = LBound(TestArray) to UBound(TestArray)

                ws.cells(x,y)= trim(TestArray(i))
                y=y+1
            Next
        x=x+1
        loop
    wb.save
    Wb.close
    obj.Quit


	common_Data_Extraction = Array (0, "Successfully Extracted '" & varValue1 & "'", varValue2)

    'common_Data_Extraction = Array (0, "Successfully Extracted '" & varValue1 & "'", varValue2)
    else
        common_Data_Extraction = Array (1, "Enter Locations '" & varValue1 & "'", varValue2)
    End If

End Function






Public Function common_Data_Extraction_PUT(ByVal varValue1, ByVal varValue2)

Dim x,y,TestString,fso,wfile,obj,wb,ws,i
Dim TestArray

	If varValue1 <> "" and varValue2 <> "" Then

		set fso=createobject("scripting.filesystemobject")
		set wfile=fso.opentextfile(varValue1)
		set obj=createobject("excel.application")
		obj.displayalerts=false
		obj.visible=true
		Set wb = obj.WorkBooks.Open(varValue2)
		Set ws = wb.WorkSheets("Query")
		x=2
		'obj.ws.Range("A:BZ").NumberFormat = "@"
		Do until wfile.AtEndofstream
			TestString =wfile.readline
			TestArray = Split(TestString , ",")
			 
				ws.cells(x,8)= TestArray(0)
				ws.cells(x,9)= TestArray(1)
				ws.cells(x,10)= TestArray(2)
				ws.cells(x,3)= TestArray(3)
				ws.cells(x,5)= TestArray(4)
				ws.cells(x,4)= TestArray(5)
				ws.cells(x,7)= TestArray(6)
			
		x=x+1
		loop
	wb.save
	Wb.close
	obj.Quit
		common_Data_Extraction_PUT = Array (0, "Successfully Extracted '" & varValue1 & "'", varValue2)
	else
		common_Data_Extraction_PUT = Array (1, "Enter Locations '" & varValue1 & "'", varValue2)
	End If

End Function


Private Function common_Data_Password(ByVal varValue1,ByVal varValue2)
	Dim rowno,Col, i , j, excelobject, excelSheet, Row,  username, password, fn_DecryptMe,oIEApp
	
	
	
	Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(varValue1)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("Environment")
			
            Row = excelSheet.UsedRange.Rows.Count

			
						rowno = 2
			
	
				Col = excelSheet.UsedRange.columns.count
	
				For i = 1 to Col
					j = i - 1
	
					If excelSheet.cells(1,i).value ="TpxUserName" then
					username = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TpxPassword" then
					password = excelSheet.cells(rowno,i).value
					end if 
					
	

			Next


		systemutil.CloseProcessByName "iexplore.exe"
			set oIEApp = createobject("InternetExplorer.Application")
    		oIEApp.visible = true
    		oIEApp.navigate "D:\demo.html"
    		
    		'systemutil.CloseProcessByName "iexplore.exe"
    		'	Systemutil.Run "iexplore.exe", "d:\demo.html","","","2"	
		
			'set winHR = oIEApp.
			'window("micclass:= Window",)	
		
			
              Browser("opentitle:=iexplore").Page("title:=iexplore").WebEdit("name:=tname","html tag:=INPUT").SetSecure password

            fn_DecryptMe = Browser("opentitle:=iexplore").Page("title:=iexplore").WebEdit("name:=tname","html tag:=INPUT").GetROProperty("value")
    		 Call saveRunValue (varValue2, fn_DecryptMe)
			 
    		
    		

		'	systemutil.CloseProcessByName "iexplore.exe"
			oIEApp.quit
				
			
			Set excelobject =nothing
			Set excelSheet = nothing

			
		
				
		common_Data_Password = Array (0, "The Batch has run  '" , varValue2)
				
		End Function




Private Function common_Data_To_Folder(ByVal varValue1, ByVal varValue2, ByVal varValue3)
	Dim fso, filepath, cmdtext ,fn_DecryptMe,rowno,Col, i , newtext, j,strlen, oIEApp ,  Objshell , objfso, objfile, excelobject, excelSheet, Row, datavalue,folder, module, username, password, region, textfile, batfile, image, ftpfile, text1 , text2, text3, text4,text5,text6,text7,text8 ,writetext1, writetext2, writetext3, writetext4, writetext5, writetext6, writetext7, writetext8, writetext9	
	
	common_Data_To_Folder = Array (1, "The ftp could not be completed  '" , varValue1)	
	
	
	
	Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(varValue1)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("Environment")
			
            Row = excelSheet.UsedRange.Rows.Count

			
						rowno = 2
			
	
				Col = excelSheet.UsedRange.columns.count
	
				For i = 1 to Col
					j = i - 1
	
					If excelSheet.cells(1,i).value ="TpxUserName" then
					username = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TpxPassword" then
					password = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Region1" then
					region = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Text_File" then
					textfile = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Bat_File" then
					batfile = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Image" then
					image = excelSheet.cells(rowno,i).value
					end if
					If excelSheet.cells(1,i).value = "FTP_file" then
					ftpfile = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Folder" then
					folder = excelSheet.cells(rowno,i).value
					end if
					If excelSheet.cells(1,i).value = "Module" then
					module = excelSheet.cells(rowno,i).value
					end if
					
	


			Next
			
			
			excelobject.ActiveWorkbook.Close
			excelobject.Application.Quit
				
				 
			 systemutil.CloseProcessByName "iexplore.exe"
			set oIEApp = createobject("InternetExplorer.Application")
    		oIEApp.visible = true
    		oIEApp.navigate "D:\demo.html"
    		
    		'systemutil.CloseProcessByName "iexplore.exe"
    		'	Systemutil.Run "iexplore.exe", "d:\demo.html","","","2"	
		
			'set winHR = oIEApp.
			'window("micclass:= Window",)
			
			  Browser("opentitle:=iexplore").Page("title:=iexplore").WebEdit("name:=tname","html tag:=INPUT").SetSecure password

            	fn_DecryptMe = Browser("opentitle:=iexplore").Page("title:=iexplore").WebEdit("name:=tname","html tag:=INPUT").GetROProperty("value")
    		 Call saveRunValue (varValue2, fn_DecryptMe)
    		
    		

		'	systemutil.CloseProcessByName "iexplore.exe"
			oIEApp.quit
				
			
			Set excelobject =nothing
			Set excelSheet = nothing
			
			Set fso=createobject("Scripting.FileSystemObject")
			'The file to check the existence
			filepath= batfile

			If fso.FileExists(filepath) then
			fso.DeleteFile(filepath)
	
			End if
	
			If fso.FileExists(ftpfile) then
			fso.DeleteFile(ftpfile)
	
			End if
				
				
				
	
				'text1 = "ftp " + varValue3
				text2 = "del "
				text3 = "ren "
				text4 = "dir "
				text5 = " Query.txt"
				text6 = "open"
				text7 = right(image,1)
				strlen = len(folder)
				text8 = left(folder, strlen - 1)
				
				newtext = varValue2 + text5
				
				
				writetext1 = text1 + ftpfile
				writetext2 = text2 + textfile
				writetext3 = text3 + folder + newtext
				writetext4 = text4 + textfile
				writetext5 = "timeout /t 5 /nobreak"
				writetext6 = text6 + " TMVS" + text7
				writetext7 = "lcd " + text8
				writetext8 = "cd " + Module
				If varValue3 = "" Then
				text1 = "ftp " + "TMVS" + text7
					
				else
				text1 = "ftp " + varValue3
				End If
				
				
				'[Set fso = CreateObject("Scripting.FileSystemObject")
				'Set objfile = fso.CreateTextFile(batfile)
				
				'Set objfile=fso.OpenTextFile("varValue2",2,True)
				
				
				systemutil.Run "C:\WINDOWS\system32\cmd.exe"	

				Window("Administrator: C:\WINDOWS\syst").Type text1
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 5
				
				'cmdtext = Window("C:\WINDOWS\system32\cmd.exe").GetVisibleText
				cmdtext = Window("Administrator: C:\WINDOWS\syst").GetVisibleText

				If instr(1,cmdtext,"Unknown",1) Then
				Exit function
				End If
				
				Window("Administrator: C:\WINDOWS\syst").Type username
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				
'				cmdtext = Window("C:\WINDOWS\system32\cmd.exe").GetVisibleText
				cmdtext = Window("Administrator: C:\WINDOWS\syst").GetVisibleText

				If instr(1,cmdtext,"Invalid",1) Then
				Exit function
				End If

				Window("Administrator: C:\WINDOWS\syst").Type fn_DecryptMe
				Window("Administrator: C:\WINDOWS\syst").Type micReturn	
				wait 1
				
				cmdtext = Window("Administrator: C:\WINDOWS\syst").GetVisibleText

				If instr(1,cmdtext,"failed",1) Then
				Exit function
				End If
				
				Window("Administrator: C:\WINDOWS\syst").Type writetext7
				Window("Administrator: C:\WINDOWS\syst").Type micReturn	
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type writetext8
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type "pwd"
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type "hash on"
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				writetext9 = "get " + varValue2
				Window("Administrator: C:\WINDOWS\syst").Type writetext9
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type "bye"
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type writetext2
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type writetext3
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type writetext4
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Type writetext5
				
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 1
				Window("Administrator: C:\WINDOWS\syst").Close
				common_Data_To_Folder = Array (0, "The Batch has run  '" , varValue1)	
				
			
		
End Function	

	
	


	

Private Function common_Data_To_BOMBFolder(ByVal varValue1, ByVal varValue2, ByVal varValue3)
	Dim fso, filepath, cmdtext ,fn_DecryptMe,rowno,Col, i , newtext, j,strlen, oIEApp ,  Objshell , objfso, objfile, excelobject, excelSheet, Row, datavalue,folder, module, username, password, region, textfile, batfile, image, ftpfile, text1 , text2, text3, text4,text5,text6,text7,text8 ,writetext1, writetext2, writetext3, writetext4, writetext5, writetext6, writetext7, writetext8, writetext9	, report , bombtext, Conno,qualifier1 , query , query1, query2
	Dim output(5) , outputfile(5)
	
	common_Data_To_BOMBFolder = Array (1, "The ftp could not be completed  '" , varValue1)	
	
	
	
	Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(varValue1)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("Environment")
			
            Row = excelSheet.UsedRange.Rows.Count

			
			For i = 1 To Row
						
				If excelSheet.cells(i,1).value = varValue2  then
					rowno = i
					Exit for
					end if 		
							
			Next
			
			
	
				Col = excelSheet.UsedRange.columns.count
				Conno = 0
			

				For i = 1 to Col
					
					j = i - 1
	
					If excelSheet.cells(1,i).value ="TpxUserName" then
					username = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="TpxPassword" then
					password = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Region1" then
					region = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Text_File" then
					textfile = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value ="Bat_File" then
					batfile = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Image" then
					image = excelSheet.cells(rowno,i).value
					end if
					If excelSheet.cells(1,i).value = "FTP_file" then
					ftpfile = excelSheet.cells(rowno,i).value
					end if 
					If excelSheet.cells(1,i).value = "Folder" then
					folder = excelSheet.cells(rowno,i).value
					end if
					If excelSheet.cells(1,i).value = "Module" then
					module = excelSheet.cells(rowno,i).value
					end if
					If instr(1,excelSheet.cells(1,i).value, "Output", 1)  Then
						
						output(Conno) = excelSheet.cells(rowno,i).value
						outputfile(Conno) = folder + output(Conno) + ".txt"
						Conno = Conno + 1
					End If
					
			Next
			
			excelobject.ActiveWorkbook.Save
    			'close Excel
			excelobject.Application.Quit

			Set excelobject=nothing
			
			
			
			 systemutil.CloseProcessByName "iexplore.exe"
			set oIEApp = createobject("InternetExplorer.Application")
    		oIEApp.visible = true
    		oIEApp.navigate "D:\demo.html"
    		
    				
			
			Browser("iexplore").Page("iexplore").WebEdit("tname").SetSecure password
    		fn_DecryptMe =  Browser("iexplore").Page("iexplore").WebEdit("tname").GetROProperty("value")
    		oIEApp.quit
    		
    		

		'	systemutil.CloseProcessByName "iexplore.exe"
							
			
			Set excelobject =nothing
			Set excelSheet = nothing
			
			Set fso=createobject("Scripting.FileSystemObject")
			'The file to check the existence
			filepath= batfile

			If fso.FileExists(filepath) then
			fso.DeleteFile(filepath)
	
			End if
	
			If fso.FileExists(ftpfile) then
			fso.DeleteFile(ftpfile)
	
			End if
				
				
				
	
				'text1 = "ftp " + varValue3
				text2 = "del "
				text3 = "ren "
				text4 = "dir "
				text5 = " Query.txt"
				text6 = "open"
				text7 = right(image,1)
				strlen = len(folder)
				text8 = left(folder, strlen - 1)
				
				
				'newtext = varValue2 + text5
				
				
				writetext1 = text1 + ftpfile
				writetext2 = text2 + folder
				writetext3 = text3 + folder
				writetext4 = text4 + folder
				writetext5 = "timeout /t 5 /nobreak"
				writetext6 = text6 + " TMVS" + text7
				writetext7 = "lcd " + text8
				writetext8 = "cd " + Module
				'bombtext = "cd " + Module
				If varValue3 = "" Then
				text1 = "ftp " + "TMVS" + text7
					
				else
				text1 = "ftp " + varValue3
				End If
				
				
				'[Set fso = CreateObject("Scripting.FileSystemObject")
				'Set objfile = fso.CreateTextFile(batfile)
				
				'Set objfile=fso.OpenTextFile("varValue2",2,True)
				
				
				systemutil.Run "C:\WINDOWS\system32\cmd.exe"	

				Window("Administrator: C:\WINDOWS\syst").Type text1
				Window("Administrator: C:\WINDOWS\syst").Type micReturn
				wait 5
				
				cmdtext = Window("ftp  172.26.11.107_2").GetVisibleText

				If instr(1,cmdtext,"Unknown",1) Then
				Exit function
				End If
				
				Window("ftp  172.26.11.107_2").Type username
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				cmdtext = Window("C:\WINDOWS\system32\cmd.exe").GetVisibleText

				If instr(1,cmdtext,"Invalid",1) Then
				Exit function
				End If

				Window("ftp  172.26.11.107_2").Type fn_DecryptMe
				Window("ftp  172.26.11.107_2").Type micReturn	
				wait 1
				
				cmdtext = Window("C:\WINDOWS\system32\cmd.exe").GetVisibleText

				If instr(1,cmdtext,"failed",1) Then
				Exit function
				End If
				
				Window("ftp  172.26.11.107_2").Type writetext7
				Window("ftp  172.26.11.107_2").Type micReturn	
				wait 1
				Window("ftp  172.26.11.107_2").Type writetext8
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				'Window("ftp  172.26.11.107_2").Type bombtext
				'Window("ftp  172.26.11.107_2").Type micReturn
				'wait 1
				Window("ftp  172.26.11.107_2").Type "pwd"
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				Window("ftp  172.26.11.107_2").Type "hash on"
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				For i = 0 to ubound(output) - 1
				
				If output(i) <> "" Then
				
				If instr(1,output(i), ".", 1) = 0 Then
				
				writetext9 = "get " + output(i)
				Window("ftp  172.26.11.107_2").Type writetext9
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				End if 
				
				End If
				next
'				
			For i = 0 to ubound(output) - 1
'						
'	
				If output(i) <> "" Then
				
				If instr(1,output(i), ".", 1)  Then
				qualifier1 = split(output(i) , ".")
'				
				qualifier2 = "cd " + qualifier1(0)
'				
				Window("ftp  172.26.11.107_2").Type qualifier2
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
'				
'				
				writetext9 = "get " + qualifier1(1)
				Window("ftp  172.26.11.107_2").Type writetext9
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
'				
'				
'				
				Window("ftp  172.26.11.107_2").Type "cd .."
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
'				
				End if 
				End if 
'				
'				
				next
				
				Window("ftp  172.26.11.107_2").Type "bye"
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				For i = 0 to ubound(output) - 1
				If output(i) <> "" Then
				If instr(1,output(i), ".", 1)  Then
				qualifier1 = split(output(i) , ".")
				
				
				query = writetext2 + qualifier1(1) + ".txt"
				
							
				Window("ftp  172.26.11.107_2").Type query
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				query1 = writetext3 + qualifier1(1) + " " + qualifier1(1) + ".txt"
				
				Window("ftp  172.26.11.107_2").Type query1
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				query2 = writetext4 + output(i) + ".txt"
				Window("ftp  172.26.11.107_2").Type writetext4
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				Else
				
				query = writetext2 + output(i) + ".txt"
				
							
				Window("ftp  172.26.11.107_2").Type query
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				query1 = writetext3 + output(i) + " " + output(i)+ ".txt"
				Window("ftp  172.26.11.107_2").Type query1
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				query2 = writetext4 + output(i) + ".txt"
				Window("ftp  172.26.11.107_2").Type query2
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				
				End if
				End if
				Next
				
				Window("ftp  172.26.11.107_2").Type writetext5
				
				Window("ftp  172.26.11.107_2").Type micReturn
				wait 1
				Window("ftp  172.26.11.107_2").Close
				common_Data_To_BOMBFolder = Array (0, "The Batch has run  '" , varValue1)	
				
			
		
	End Function
	

	
	
	
	

			

Private Function common_Date_Split(ByVal varValue1,ByVal varValue2)
		Dim arr,newarr
		arr = split(varValue1,"/")

		newarr = arr(0) + arr(1) + arr(2)
	
		Call saveRunValue (varValue2, newarr)

		common_Date_Split = Array (0, "The date has been edited" , varValue2)
	End Function
	
	
Private Function common_StartPutty(sServerIP,sPort,bWindowTitle)
    'This function will start the Putty Application.
    'sServerIP is the Server IP to connect too.
    'sPort is the port to be connecting too.
    'bWindowTitle is whether you want to change the name of the window.
    'sWindowName is the name of the window that will be changed too.
    Dim SettingsFile

    On Error Resume Next
    closePutty
    InfoLog "Starting Putty"
    SettingsFile="D:\putty.exe"
    If fso.FileExists(SettingsFile)=False Then 'Verify that Putty is installed.
        ErrorLog  SettingsFile & " does not exist."
        startPutty=False

		common_StartPutty = Array (1, "Open the Putty", "Putty not found")
        Exit Function
    Else
        startPutty=True
    End If
    SystemUtil.Run "D:\Users\shbhatia\Desktop\putty.exe", "", "", ""
    Window("PuttyConfig").WinRadioButton("Telnet").Set
    Window("PuttyConfig").WinEdit("Host Name").Set sServerIP
    Window("PuttyConfig").WinEdit("Port").Set sPort
    If bWindowTitle=True Then
        Window("PuttyConfig").WinTreeView("Category:").Select "Window;Behaviour"
       
    End If
    
    Window("PuttyConfig").WinButton("Open").Click
    Wait(5)
    If bWindowTitle=False Then
        window("PUTTY").Activate
        window("PUTTY").Type micReturn
    End If

    ErrorCatcher Err.Number, Err.Description
    Err.Clear

	common_StartPutty = Array (0, "Open the Putty", "Putty suceesfully opened")

End Function


		


	Public Function common_string_addzero(ByVal varValue1,ByVal varValue2, ByVal varValue3)
		
	Dim size , i , j
	
	size = len(varValue1)
	j = varValue2 - size	
	For i = 1 To j
	
	varValue1 = "0" + varValue1
		
	Next
	
	 Call saveRunValue (varValue3, varValue1)
	 
	 
	 	common_string_addzero = Array (0, "The value of the string is " , varValue3)
		
	End Function
	









End Class





'*********************************************************
' TE KEYWORDS
'*********************************************************
Class TEKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a TE Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:    the id of the TeWindow in the ObjectRepository
	'           strPageID:         the id of the TeScreen in the ObjectRepository
	'           strObjectID:       the id of the TeField in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
	'*********************************************************
	Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
		Dim objCurrent
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword
		
		Case "TE_Window_Close"
				arrReturn = TE_CloseEmulator()
				
		Case "TE_Field_CheckScreen"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Field_CheckScreen(objCurrent,strParam1,strParam2,strParam3)
        
        Case "TE_Field_GetRoProperty"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Field_GetRoProperty(objCurrent,strParam1,strParam2)
				
		Case "TE_Field_ORSet"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				Set objCurrent1 = getQTPObject("Screen", strBrowserID, strPageID, strPageID) 
				arrReturn = TE_Field_ORSet(objCurrent,objCurrent1, strParam1, strParam2, strParam3)
			
		Case "TE_Field_Set"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Field_Set(objCurrent, strParam1)
				
		Case "TE_Field_Setbysize"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Field_Setbysize(objCurrent, strParam1, strParam2)
	
		Case "TE_Field_Setiftext"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				Set objCurrent1 = getQTPObject("Screen", strBrowserID, strPageID, strPageID) 
				arrReturn = TE_Field_Setiftext(objCurrent,objCurrent1, strParam1, strParam2, strParam3)			
	
		Case "TE_Field_SetSecure"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Field_SetSecure(objCurrent, strParam1)
				
		Case "TE_Open_Emulator"
        		arrReturn = TE_OpenEmulator(strParam1)

                 Case "TE_Screen_RMMTValidation"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_Screen_RMMTValidation(objCurrent,strParam1,strParam2)

        Case "TE_Screen_PRQC_Validations"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_Screen_PRQC_Validations(objCurrent,strParam1,strParam2)
			
		Case "TE_PRQA_Validations"
		'Set objCurrent = getQTPObject(strObjectType,strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_PRQA_Validations(StrParam1, StrParam2)
			
		Case "TE_RBFile_Validations"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_RBFile_Validations(objCurrent,strParam1,strParam2,strParam3)
        
        Case "TE_Screen_aisgleconcat"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_aisgleconcat(objCurrent,strParam1,strParam2,strParam3)	
		
		Case "TE_Screen_BackToReport"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_BackToReport(objCurrent)
				
              
		Case "TE_RBFILE_PDS"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_RBFILE_PDS(strParam1,strParam2)
		

		Case "TE_Screen_Bomamsg"
				Set objCurrent = getQTPObject(strObjectType,strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_Bomamsg(objCurrent,strParam1,strParam2)
			
		Case "TE_Screen_Bomb_IR06_Report"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Screen_Bomb_IR06_Report(objCurrent)

             Case "TE_Screen_IR06001_Report_InTextFile"
        	Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            arrReturn = TE_Screen_IR06001_Report_InTextFile(objCurrent,strParam1)

                        
        Case "TE_Screen_Check_P_TPN_LOC"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_Check_P_TPN_LOC(objCurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_checkBombReport"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_checkBombReport(objCurrent,strParam1,strParam2)
		
		Case "TE_Screen_checkjobinspool"
        		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_checkjobinspool(objCurrent)
			
			 
		'Case "TE_Screen_checkandback"
         	'   Set objCurrent = getQTPObject(strObjectType)
			'	arrReturn = TE_Screen_checkandback(objCurrent)
		
		Case "TE_Screen_CheckPOMIMX"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_CheckPOMIMX(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_CheckPOMIMX_row"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_CheckPOMIMX_row(objCurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_CheckStringNotPresent"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            	arrReturn = TE_Screen_CheckStringNotPresent(objCurrent,strParam1)
        
        Case "TE_Screen_CheckStringPresent"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
           		arrReturn = TE_Screen_CheckStringPresent(objCurrent,strParam1)
        	
		Case "TE_Screen_checkTextandPressKey"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_checkTextandPressKey(objCurrent,strParam1, strParam2, strParam3)
				
        Case "TE_Screen_CompareForText"
                Set objCurrent= getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
                arrReturn = TE_Screen_CompareForText(objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_completework"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_completework(objCurrent)
				
		Case "TE_Screen_CONFIRMOVERWRITE_BO"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_CONFIRMOVERWRITE_BO(objCurrent)
		
		Case "TE_Screen_CONFIRMOVERWRITE_CO"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_CONFIRMOVERWRITE_CO(objCurrent)
		
		Case "TE_Screen_countplusset"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_countplusset(objCurrent,strParam1)
				
		Case "TE_Screen_DateSetText"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_DateSetText (objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_DOQTproductvalidation"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
             	arrReturn = TE_Screen_DOQTproductvalidation(objCurrent,strParam1,strParam2,strParam3)
             	
        Case "TE_Screen_DOQUproductstatus"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
             	arrReturn = TE_Screen_DOQUproductstatus(objCurrent,strParam1)

       	Case "TE_Screen_DriverCardIdORUserName"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_DriverCardIdORUserName(objCurrent,strParam1,strParam2)

        Case "TE_Screen_EPOD_N"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_EPOD_N(objCurrent,strParam1,strParam2,strParam3)
             	
        Case "TE_Screen_FutureWineOrderstatus"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Screen_FutureWineOrderstatus(objCurrent,strParam1,strParam2)

		Case "TE_Screen_FindString"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_FindString(objCurrent,strParam1,strParam2)
		
		Case "TE_Screen_getcolbyrow"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_Screen_getcolbyrow(objCurrent,strParam1, strParam2, strParam3)
		
		Case "TE_Screen_GetLatestRow"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetLatestRow(objCurrent,strParam1,strParam2,strParam3)
			
		Case "TE_Screen_GetLatestRowspool"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Screen_GetLatestRowspool(objCurrent,strParam1,strParam2)
			
		Case "TE_Screen_GetLatestRowStart"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetLatestRowStart(objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_GetLatestRowStartfor2"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetLatestRowStartfor2(objCurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_GetLatestRowStartfor2_FZAP"
               	Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
               	arrReturn = TE_Screen_GetLatestRowStartfor2_FZAP(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_getlocationdcmx"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getlocationdcmx(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_getMyRow"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getMyRow(objCurrent,strParam1,strParam2)
				
		Case "TE_Screen_getReport"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getReport(objCurrent,strParam1,strParam2,strParam3)
			
		Case "TE_Screen_GetRow"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRow(objCurrent,strParam1,strParam2,strParam3)
			
		Case "TE_Screen_getRowandcol"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowandcol(objCurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_getRowandcolPrqc"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowandcolPrqc(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_GetRowany"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRowany(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_GetRowany_F5"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRowany_F5(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_getRowanybystring"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowanybystring(objCurrent,strParam1,strParam2)

		Case "TE_Screen_getRowanykey"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Screen_getRowanykey(objCurrent,strParam1,strParam2,strParam3)
			
		Case "TE_Screen_getRowbycol"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycol(objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_getRowbycol2"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycol2(objCurrent,strParam1,strParam2)
			
		Case "TE_Screen_getRowbycolf2"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycolf2(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_getRowbycolf2_Max10"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycolf2_Max10(objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_getRowbycolf2text"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycolf2text(objCurrent,strParam1,strParam2,strParam3)	
			
		Case "TE_Screen_getRowbycolfnEqual"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycolfnEqual(objCurrent,strParam1)
			
		Case "TE_Screen_getRowbycolfor2"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycolfor2(objCurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_getRowbycolfor2col"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycolfor2col(objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_getRowbycolstartrow"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
                arrReturn = TE_Screen_getRowbycolstartrow(objcurrent,strParam1,strParam2,strParam3)
		

		Case "TE_Screen_getRowbycoltwo"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowbycoltwo(objCurrent,strParam1,strParam2)

		Case "TE_Screen_getRowcolprqc"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowcolprqc(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_GetRowField"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRowField(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_GetRowField_NoText"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRowField_NoText(objCurrent,strParam1,strParam2)

		Case "TE_Screen_GetRowField_NoText_F5"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRowField_NoText_F5(objCurrent,strParam1,strParam2)		
				
		Case "TE_Screen_getRowforcol"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getRowforcol(objCurrent,strParam1,strParam2)	
				
		Case "TE_Screen_GetRowForDemand"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetRowForDemand(objCurrent,strParam1,strParam2,strParam3)
				
		Case "TE_Screen_GetText"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetText (objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_GetTextRow"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_GetTextRow (objCurrent,strParam1,strParam2,strParam3)	
				
       	Case "TE_Screen_getuserterm"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_getuserterm(objCurrent,strParam1,strParam2,strParam3)	
				
		Case "TE_Screen_ifkeyF2"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_ifkeyF2(objCurrent,strParam1,strParam2)
				
		Case "TE_Screen_ifkeyF4"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_ifkeyF4(objCurrent,strParam1,strParam2)			
		
		Case "TE_Screen_ifkeyF5"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_ifkeyF5(objCurrent,strParam1,strParam2)
		
		Case "TE_Screen_IR06report"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_IR06report(objCurrent,strParam1,strParam2, strParam3)
			
		Case "TE_Screen_IR10ProductQuantity"
        		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Screen_IR10ProductQuantity(objCurrent,strParam1,strParam2)
	
		Case "TE_Screen_jobstatus"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_jobstatus(objCurrent,strParam1,strParam2, strParam3)

		Case "TE_Screen_msgbox"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            	arrReturn = TE_Screen_msgbox(objCurrent,strParam1)
            	
        Case "TE_Screen_newvaluecompare"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_newvaluecompare(objCurrent,strParam1,strParam2,strParam3)		
				
		Case "TE_Screen_OVERRIDE"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_OVERRIDE(objCurrent,strParam1,strParam2)

		Case "TE_Screen_pressf8untilmsg"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_Screen_pressf8untilmsg(objCurrent,strParam1)

				
		Case "TE_Screen_presskeycompare"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_presskeycompare(objCurrent,strParam1,strParam2)
		
		Case "TE_Screen_PromptMessage"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_PromptMessage(objCurrent,strParam1,strParam2)
					
		Case "TE_Screen_PRQCSCREEN"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_PRQCSCREEN(objCurrent,strParam1)			
								
		Case "TE_Screen_putocccheck"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_putocccheck(objCurrent,strParam1)
		
		Case "TE_Screen_recordThePo"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_recordThePo(objCurrent,strParam1,strParam2,strParam3)		

		Case "TE_Screen_REQAstatuscheck"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_REQAstatuscheck(objCurrent,strParam1,strParam2)

		Case "TE_Screen_ResolveReplen"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_ResolveReplen(objCurrent,strParam1,strParam2,strParam3)		
						
		Case "TE_Screen_rlogocccheck3"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_rlogocccheck3(objCurrent,strParam1,strParam2,strParam3)					
				
		Case "TE_Screen_RM61report"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_RM61report(objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_RM61reportcoordinates"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_RM61reportcoordinates(objCurrent,strParam1,strParam2,strParam3)
			
		Case "TE_Screen_RMMTCOUNT"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_RMMTCOUNT(objCurrent,strParam1)
				
		Case "TE_Screen_rmmtlinecheck"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_rmmtlinecheck (objCurrent,strParam1)

			
		Case "TE_Screen_RowForLatestJob_NoText"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_RowForLatestJob_NoText(objCurrent,strParam1,strParam2)		
				
		Case "TE_Screen_Searchbysplit"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_Searchbysplit(objCurrent,strParam1, strParam2)
		
		Case "TE_Screen_searchfieldandset"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_searchfieldandset(objCurrent, strParam1, strParam2, strParam3)
		
		Case "TE_Screen_SendKey_SSCC"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SendKey_SSCC(objCurrent)
							
		Case "TE_Screen_SendKeyonscreen"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SendKeyonscreen(objCurrent,strParam1, strParam2)
		
		Case "TE_Screen_SetACMGScreen"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SetACMGScreen (objCurrent,strParam1,strParam2,strParam3)
	
		Case "TE_Screen_setBSMA"
                Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
                arrReturn = TE_Screen_setBSMA(objCurrent,strParam1)

		Case "TE_Screen_setBSMB"
              	Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
              	arrReturn = TE_Screen_setBSMB(objCurrent,strParam1)	
				
		Case "TE_Screen_Setbyfieldname"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_Setbyfieldname(objCurrent, strParam1, strParam2)			
				
		Case "TE_Screen_setcursor"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_setcursor(objCurrent,strParam1,strParam2)
		
		Case "TE_Screen_setprdriver"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_setprdriver(objCurrent,strParam1,strParam2)
			
		Case "TE_Screen_SetText"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 	
				arrReturn = TE_Screen_SetText (objCurrent,strParam1,strParam2,strParam3)
			
		Case "TE_Screen_SetTextint"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SetTextint (objCurrent,strParam1,strParam2,strParam3)

		Case "TE_Screen_SetTextnotrim"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SetTextnotrim (objCurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_SetTextnotrimtext"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SetTextnotrimtext (objCurrent,strParam1,strParam2,strParam3)	

		Case "TE_Screen_SetTextrandom"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SetTextrandom(objCurrent,strParam1,strParam2)
			
		Case "TE_Screen_SetTextrandomF5"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_SetTextrandomF5(objCurrent,strParam1,strParam2)		
				
		Case "TE_Screen_setTimefromScreen"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_setTimefromScreen (objCurrent,strParam1,strParam2,strParam3)	

		Case "TE_Screen_WaitForAvail"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_WaitForAvail(objCurrent, strParam1)
	
		Case "TE_Screen_WaitForComplete"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Screen_WaitForComplete(objCurrent, strParam1)
		
		Case "TE_Screen_WaitForText"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
				arrReturn = TE_Screen_WaitForText(objcurrent,strParam1,strParam2,strParam3)
		
		Case "TE_Screen_WaitForTextonscreen"
				Set objCurrent= getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
				arrReturn = TE_Screen_WaitForTextonscreen(objCurrent,strParam1,strParam2,strParam3)
	
		Case "TE_Screen_SendKey"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_SendKey(objCurrent, strParam1)
				
		Case "TE_Window_activate"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
				arrReturn = TE_Window_activate(objCurrent)
		
		Case "TE_Window_gettodayname"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = TE_Window_gettodayname(objCurrent,strParam1)
							
		Case "TE_Window_ifinstring"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            	arrReturn = TE_Window_ifinstring(objCurrent,strParam1,strParam2)
			
		Case Else
			Err.Raise 1, "Keyword", strKeyword & "  keyword not found"
			arrReturn = Array(1, "", Err.Description)
		End Select
		Set objCurrent = Nothing
	
		runKeyword = arrReturn

		Call captureshot (strBrowserID)


	End Function
	
	'*********************************************************
	' Object Repository search
	'*********************************************************
	
	Private Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		If strObjectType = "Window" Then
			Set getQTPObject  = TEWindow(strBrowserID)
		ElseIf strObjectType = "Screen" Then
			Set getQTPObject  = TEWindow(strBrowserID).TEScreen(strObjectID)
		Elseif strObjectType = "Field" Then
			Set getQTPObject  = TEWindow(strBrowserID).TEScreen(strPageID).TEField(strObjectID)
		End If
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "WebKeyword", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If

		'TEWindow(strBrowserID).CaptureBitmap "ScreenShot.png", True
	End Function



	Public Function captureshot (strBrowserID)
		TEWindow(strBrowserID).CaptureBitmap "ScreenShot.png", True

		
	End Function
	
	


Public Function TESync()
		Dim e_status
		Dim counter
		e_status = "No"
		counter = 0
'		Wait(1)
			On Error resume next
			Do Until e_status = "Ready"
				e_status = TeWindow("short name:=A" ).GetROProperty("emulator status")
			'e_status = TeWindow("short name:=*" ).GetROProperty("emulator status")
			If e_status = "Ready" Then
				Exit Do
			End If
			counter = counter + 1
			If counter = 100000 Then
				Reporter.ReportEvent micFail,"Call Sync failed", "Counter=" & counter & vbcr & "Status=" & e_status
				Exit Do
			End If
'			Wait(2)
			Loop
		If counter > 100 Then
			Reporter.ReportEvent 4, "Waiting Time : " & counter, ""
		End If
	'''On error goto 0
End Function

	
	
	'*********************************************************
	' Keyword implementations
	'*********************************************************

'****** Browser, Page, Dialog and Frame


Private Function TE_CloseEmulator()
		Killprocess = "EXTRA.exe"
		Set ProcessList = GetObject("winmgmts://.").InstancesOf("win32_process")
		For Each Process In ProcessList 
			If Process.Name = KillProcess Then 
				Process.Terminate
				TE_CloseEmulator = Array (0, "", "Successfully completed.")
			End If
		Next
End Function





Public function TE_Field_CheckScreen(ByRef objField, ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	Dim row, obj1,strText,strText1,strText2,strText3,strText4,strText5,strText6,strText7,strText8,Counter1,Counter2
	set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
    obj1.sync
	strText = Trim(obj1.GetText (3,21,3,39))
	strText2 = Trim(obj1.GetText (2,02,2,07)) 
	strText4 = Trim(obj1.GetText (2,12,2,24))
	strText5 = Trim(obj1.GetText (24,06,24,09))
	strText6 = obj1.GetROProperty ("label")
	strText8 = Trim(obj1.GetText (01,01,01,40))
    Counter1 = 1
	Counter2 = 1
   	If strText2 = "OPTION"  or strText4 = "SESSION ENDED" or strText5 = "DENV" or strText = "ENTER FUNCTION CODE" Then
			TE_Field_CheckScreen = Array (0, "Start Screen found",  "press PGDN")
	Else
	Do Until strText2 = "OPTION" or Counter1 = 10 or strText4 = "SESSION ENDED" or strText5 = "DENV" or strText = "ENTER FUNCTION CODE"
                strText2 = Trim(obj1.GetText (2,02,2,07))
				strText = Trim(obj1.GetText (3,21,3,39))
				strText4 = Trim(obj1.GetText (2,12,2,24))
				strText5 = Trim(obj1.GetText (24,06,24,09))
				strText7 = Trim(obj1.GetText (23,01,24,80))
				strText8 = Trim(obj1.GetText (01,01,01,40))
        IF strText2 = "OPTION" or strText5 = "DENV" or instr(1,strText7,"abend",1) or strText = "ENTER FUNCTION CODE"Then
				Exit Do
            else 
            end if
			strText1 = Trim(obj1.GetText (23,02,23,08))
			strText3 = Trim(obj1.GetText (5,10,5,15))
			strText6 = obj1.GetROProperty("label")
           If  strText1 = "Command" Then
				set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "PGDN"
                    obj1.sync
			ElseIf  instr(1,strText8,"CHECKING",1) Then
				set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "F3"
				set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "PGDN"
                    obj1.sync
					Exit Do
			ElseIf strText3 = "Option" Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
                    obj1.SetText 05,25,"2"
					TE_SendKey obj1, "ENTER"
                    obj1.sync
			Elseif strText4 =  "SESSION ENDED" Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
                    obj1.SetText 01,02,"DENV"
					TE_SendKey obj1, "ENTER"
                    obj1.sync
			Elseif trim(strText6) =  "screen5096" Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
                    obj1.SetText 01,02,"DENV"
					TE_SendKey obj1, "ENTER"
                    obj1.sync
			Else
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "F3"
                    obj1.sync
                    wait(1)
			end if
			Counter1 = Counter1 + 1
	Loop

 	End if    
		strText2 = Trim(obj1.GetText (2,02,2,07))
        strText5 = Trim(obj1.GetText (24,06,24,09))
		strText4 = Trim(obj1.GetText (2,12,2,24))
		strText = Trim(obj1.GetText (3,21,3,39))
		strText6 = obj1.GetROProperty ("label")
		strText1 = Trim(obj1.GetText (23,02,23,08))
		If strText2 = "OPTION" Then
            Do Until strText3 = "Option" or strText1 = "Command" 
				strText3 = Trim(obj1.GetText (5,10,5,15))
				strText1 = Trim(obj1.GetText (23,02,23,08))
				If strText3 = "Option" or strText1 = "Command" Then
					Exit Do
				else
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "F3"
					obj1.sync
                    wait(1)	
				end if
			Loop
			strText3 = Trim(obj1.GetText (5,10,5,15))
			If strText3 = "Option" Then
				obj1.SetText 05,25,"2"
				TE_SendKey obj1, "ENTER"
				obj1.sync
			end if
		elseif strText4 = "SESSION ENDED" Then
				 obj1.SetText 01,02,"DENV"
				 TE_SendKey obj1, "ENTER"
				 obj1.sync
				 obj1.SetText 20, 40, strValueID1
				TE_SendKey obj1, "ENTER"
				obj1.sync
		elseif strText5 = "DENV" Then 
			obj1.SetText 20, 40, strValueID1
			TE_SendKey obj1, "ENTER"
			obj1.sync
		elseif strText = "ENTER FUNCTION CODE" Then

		elseif trim(strText6) =  "screen5096" Then
				obj1.SetText 01,02,"DENV"
				 TE_SendKey obj1, "ENTER"
				 obj1.sync
				strText5 = Trim(obj1.GetText (24,06,24,09))
				strText = Trim(obj1.GetText (3,21,3,39))
				If strText5 = "DENV" Then 
                 obj1.SetText 20, 40, strValueID1
				TE_SendKey obj1, "ENTER"
				obj1.sync
				elseif strText = "ENTER FUNCTION CODE" Then

				end if
		else

		End If
  		wait(5)
		strText1 = Trim(obj1.GetText (23,02,23,08))
		strText = Trim(obj1.GetText (3,21,3,39))
		if strText1 = "Command"	or strText = "ENTER FUNCTION CODE" Then
			set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
			TE_SendKey obj1, "PGDN" 
			wait(2)
			obj1.sync
        end if
		strText1 = Trim(obj1.GetText (23,02,23,08))
		if strText1 = "Command"	Then
		TE_Field_CheckScreen = Array (0, "no second session available",  "function performed.")				
		else 
		strText = Trim(obj1.GetText (3,21,3,39))	
		strText2 = Trim(obj1.GetText (2,02,2,07))
		strText = Trim(obj1.GetText (3,21,3,39)) 
		strText4 = Trim(obj1.GetText (2,12,2,24))
		strText5 = Trim(obj1.GetText (24,06,24,09))
		If strText2 = "OPTION" or strText = "ENTER FUNCTION CODE"Then

			TE_Field_CheckScreen = Array (0, "second session main screen available",  "press F3")
		Else
		Do Until strText2 = "OPTION" or Counter2 = 10 or strText4 = "SESSION ENDED" or strText5 = "DENV" or strText = "ENTER FUNCTION CODE"
        		strText4 = Trim(obj1.GetText (2,12,2,24))
				strText5 = Trim(obj1.GetText (24,06,24,09))
				strText2 = Trim(obj1.GetText (2,02,2,07))
				strText = Trim(obj1.GetText (3,21,3,39))    
				strText6 = obj1.GetROProperty ("label")
				strText8 = Trim(obj1.GetText (01,01,01,40))
				IF strText2 = "OPTION" or strText5 = "DENV" or instr(1,strText7,"abend",1) or strText = "ENTER FUNCTION CODE" Then 
					Exit Do
                else 
                end if	
				strText1 = Trim(obj1.GetText (23,02,23,08))
				strText3 = Trim(obj1.GetText (5,10,5,15))
				If  strText1 = "Command" Then
				set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "PGDN"
					obj1.sync
				ElseIf  instr(1,strText8,"CHECKING",1) Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "F3"
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "PGDN"
                    obj1.sync
					Exit Do
				ElseIf strText3 = "Option" Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
                    obj1.SetText 05,25,"2"
					TE_SendKey obj1, "ENTER"
					obj1.sync
				Elseif strText4 =  "SESSION ENDED" Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
                    obj1.SetText 01,02,"DENV"
					TE_SendKey obj1, "ENTER"
					obj1.sync
				Elseif strText6 =  "screen5096" Then
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
                    obj1.SetText 01,02,"DENV"
					TE_SendKey obj1, "ENTER"
					obj1.sync
				Else
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "F3"
					obj1.sync
					wait(1)
			end if
			Counter2 = Counter2 + 1
		Loop

    	End if    
		strText2 = Trim(obj1.GetText (2,02,2,07))
		strText5 = Trim(obj1.GetText (24,06,24,09))
		strText4 = Trim(obj1.GetText (2,12,2,24))
		strText1 = Trim(obj1.GetText (23,02,23,08))
		strText = Trim(obj1.GetText (3,21,3,39))
		strText6 = obj1.GetROProperty ("label")
        IF strText2 = "OPTION" Then
            Do Until strText3 = "Option" or strText1 = "Command" 
				strText3 = Trim(obj1.GetText (5,10,5,15))
				strText1 = Trim(obj1.GetText (23,02,23,08))
				If strText3 = "Option" or strText1 = "Command" Then
					Exit Do
				else
					set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
					TE_SendKey obj1, "F3"
					obj1.sync
				end if
			Loop		
				strText3 = Trim(obj1.GetText (5,10,5,15))	
				If strText3 = "Option" Then
                    obj1.SetText 05,25,"2"
					TE_SendKey obj1, "ENTER"
					obj1.sync
				end if
		elseif strText4 = "SESSION ENDED" Then
				 obj1.SetText 01,02,"DENV"
				 TE_SendKey obj1, "ENTER"
				 obj1.sync
				 obj1.SetText 20, 40, strValueID1
				TE_SendKey obj1, "ENTER"
				obj1.sync
		elseif strText5 = "DENV" Then 
			obj1.SetText 20, 40, strValueID1
			TE_SendKey obj1, "ENTER"
			obj1.sync
		elseif strText = "ENTER FUNCTION CODE" Then

		elseif trim(strText6) =  "screen5096" Then
				obj1.SetText 01,02,"DENV"
				 TE_SendKey obj1, "ENTER"
				 obj1.sync
				strText5 = Trim(obj1.GetText (24,06,24,09))
				strText = Trim(obj1.GetText (3,21,3,39))
				If strText5 = "DENV" Then 
                 obj1.SetText 20, 40, strValueID1
				TE_SendKey obj1, "ENTER"
				obj1.sync
				elseif strText = "ENTER FUNCTION CODE" Then

				end if
		else

       	End If
		End if
		wait(5)
		strText1 = Trim(obj1.GetText (23,02,23,08))
		strText = Trim(obj1.GetText (3,21,3,39))
        if strText1 = "Command"	Then
			set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
			TE_SendKey obj1, "PGDN" 
        	obj1.sync
			wait(2)
			TE_Field_CheckScreen = Array (0, "Killed all available Sessions",  "function performed")
		end if
		strText = Trim(obj1.GetText (3,21,3,39))
		if strText <> "ENTER FUNCTION CODE" or  instr(1,strText7,"abend",1) Then
	        set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
			TE_SendKey obj1, "PGDN" 
			wait(2)
			strText1 = Trim(obj1.GetText (23,02,23,08))
			If strText1 =  "Command"	Then
				TE_Screen_getRowbycol obj1 ,"ACT","65_67", "row"
				row = Environment.Value("temp_row")
				obj1.SetText row,04,"i"
				TE_SendKey obj1, "ENTER" 
				obj1.sync
				wait(1)
				obj1.SetText row,04,"a"
				TE_SendKey obj1, "ENTER" 
				obj1.sync
				wait(1)
				obj1.SetText 02,10,strValueID2
				wait 3

				obj1.SetText 03,10,strValueID3
				TE_SendKey obj1, "ENTER" 
				obj1.sync
                obj1.SetText 01,02,"DENV"
				TE_SendKey obj1, "ENTER" 
				obj1.sync
				strText5 = Trim(obj1.GetText (24,06,24,09))
				strText = Trim(obj1.GetText (3,21,3,39))
				If strText5 = "DENV" Then 
                 obj1.SetText 20, 40, strValueID1
				TE_SendKey obj1, "ENTER"
				obj1.sync
				elseif strText = "ENTER FUNCTION CODE" Then
					TE_Field_CheckScreen = Array (0, "Came to Main Screen",  "function performed")
				end if
			
				else

            end if
		elseif strText = "ENTER FUNCTION CODE" Then
			TE_Field_CheckScreen = Array (0, "Main Screen found ",  "function performed")
		else
			TE_Field_CheckScreen = Array (1, "Main Screennot found ",  "function performed")
		end if

End Function

Private Function TE_Field_GetRoProperty(ByRef objEdit, ByVal strValueID1, ByVal strValueID2)
		If objEdit.Exist(4) Then
			Dim prop
           prop = objEdit.GetROProperty(strValueID1)
			Call saveRunValue (strValueID2, prop)
            TE_Field_GetRoProperty = Array (0, "Get Ro property of the field  from screen",  "Successfully completed.")
		Else
			TE_Field_GetRoProperty = Array (1, "Get Ro property of the field  from screen",  "Page Object Not Found")
		End If
End Function

	
	
Private Function TE_Field_ORSet (ByRef objEdit,ByRef objEdit1,ByVal strValue,ByVal strValue1, ByVal strValue2)
		If objEdit.Exist(4) Then
		Dim arrTo, strText
		arrTo = split(strValue1, "_")
		strText = objEdit1.gettext (arrTo(0),arrTo(1), arrTo(0), arrTo(2))
			If instr(1,strtext ,strValue2 , 1 ) Then
			
			 If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
				objEdit.Set trim(strValue)
				objEdit1.SendKey TE_ENTER
				Call TESync()
				TE_Field_ORSet = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' set in the WebEdit field.")
			Else
				TE_Field_ORSet = Array (1,  "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' not set in the WebEdit field, Field is Protected.")
				'TE_Screen_logout()
			End If
			Else
			TE_Field_ORSet = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", " No need to set Value '" & strValue & "' in the WebEdit field.")
			
			
			End If
		Else
			TE_Field_ORSet = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Field '" & objEdit.GetROProperty("attached text") & "' doesnot Exists.")
			
		End If
		
End Function



Private Function TE_Field_Set (ByRef objEdit,ByVal strValue)
		If objEdit.Exist(4) Then
			If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
				objEdit.Set trim(strValue)
				TE_Field_Set = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' set in the WebEdit field.")
			Else
				TE_Field_Set = Array (1,  "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' not set in the WebEdit field, Field is Protected.")
				TE_Screen_logout()
			End If
		Else
			TE_Field_Set = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Field '" & objEdit.GetROProperty("attached text") & "' doesnot Exists.")
			
		End If
		
End Function

Private Function TE_Field_Setbysize (ByRef objEdit,ByVal strValue, ByVal strValue1)
		If objEdit.Exist(4) Then
			If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
				Dim i , tesize , duesize
			
				tesize = len(strValue)						
				duesize = strValue1 - tesize
				
				For i = 1 To duesize
				strValue = "0" + strValue
					
				Next
				
				objEdit.Set trim(strValue)
				TE_Field_Setbysize = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' set in the WebEdit field.")
			Else
				TE_Field_Setbysize = Array (1,  "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' not set in the WebEdit field, Field is Protected.")
							End If
		Else
			TE_Field_Setbysize = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Field '" & objEdit.GetROProperty("attached text") & "' doesnot Exists.")
			
		End If
		
End Function

Private Function TE_Field_Setiftext (ByRef objEdit,ByRef objEdit1,ByVal strValue,ByVal strValue1, ByVal strValue2)
		If objEdit.Exist(4) Then
		Dim arrTo, strText
		arrTo = split(strValue1, "_")
		strText = objEdit1.gettext (arrTo(0),arrTo(1), arrTo(0), arrTo(2))
			If instr(1,strtext ,arrTo(3) , 1 ) Then
			
			 If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
				objEdit.Set trim(strValue2)
			'	objEdit1.SendKey TE_ENTER
				TE_Field_Setiftext = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' set in the WebEdit field.")
				
			
				
			Else
				TE_Field_Setiftext = Array (1,  "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' not set in the WebEdit field, Field is Protected.")
				'TE_Screen_logout()
			End If
			Else
			
			
			objEdit.Set trim(strValue)
			
			
			TE_Field_Setiftext = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", " No need to set Value '" & strValue & "' in the WebEdit field.")
			
			
			End If
		Else
			TE_Field_Setiftext = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Field '" & objEdit.GetROProperty("attached text") & "' doesnot Exists.")
			
		End If
		
End Function


Private Function TE_Field_SetSecure (ByRef objEdit,ByVal strValue)
			If objEdit.Exist(4) Then
				If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
				objEdit.SetSecure strValue
				TE_Field_SetSecure = Array (0,  "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' set in the WebEdit field.")
			Else
				TE_Field_SetSecure = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' not set in the WebEdit field, Field is Protected.")
			End If
			Else
			TE_Field_SetSecure = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Field '" & objEdit.GetROProperty("attached text") & "' doesnot Exists.")
			End If
End Function

Private Function TE_OpenEmulator(ByVal strVal)
			SystemUtil.Run strVal,"","",""
			Call TESync()
			TE_OpenEmulator = Array (0, "", "Successfully completed.")

End Function

Private Function TE_Screen_PRQC_Validations (ByRef objScreen,byVal DataExl_Path,byVal Data_ExlTab_Series)

temp = 1
fl_flag = 0

ar_strData_ExlTab_Series = split(Data_ExlTab_Series,"|")

expectedProdArray = read_ExpectedData01_fromExcel(DataExl_Path,ar_strData_ExlTab_Series(0),ar_strData_ExlTab_Series(1))


'expectedProdArray = 'read_ExpectedData01_fromExcel("D:\Automation_Suite_ST\W_Rel\NonASN\GI_TEST_DATA_NON_ASN.xls","BOMB_ExpValues","TD100_A_MR001")

		req_asgnmt = "REP_FRE_SDK"

		if isarray(expectedProdArray) = true then 
			ar_assignment_expData = specific_assignment_expData(expectedProdArray, req_asgnmt )
		Else
			dataFlag = 1
		End if 
		
		if isarray(ar_assignment_expData) = False or dataFlag = 1 then 
			Reporter.ReportEvent micWarning,"PRQC Expected data","REP_FRE_SDK is not available in excelsheet, hence exit from PRQC validations!"  
			TE_Screen_PRQC_Validations = Array (1, "PRQC Validations", "Validations failed")
			
			set objdummyScreen = TeWindow("TeWindow").TeScreen("DummyScreen")
			call TE_ReturnToMain(objdummyScreen)
			
			Exit Function 
		End if 




x = ubound(ar_assignment_expData) - 1

for k = 0 to x

do
	v = 1 ' flag for maintaining the exit of program after first failure of a product
	strValueID1 = split (ar_assignment_expData(k),"|")
	
	if strValueID1(7) <> "FRE" then
		Set objCurrent = getQTPObject("Field","TeWindow","LIVINGSTON AMBIENT- TEST","ENTER FUNCTION CODE")
			TE_Field_Set objCurrent, "LOMA"
			
		
		Set objCurrent = getQTPObject("Screen","TeWindow","LIVINGSTON AMBIENT- TEST","LIVINGSTON AMBIENT- TEST")
		TE_SendKey objCurrent,"ENTER"
		
		
		
		Set objCurrent = getQTPObject("Field","TeWindow","LOMA Screen","LOCATION")
			TE_Field_Set objCurrent, strValueID1(3)
		
		Set objCurrent = getQTPObject("Screen","TeWindow","LOMA Screen","LOMA Screen")
			TE_SendKey objCurrent,"ENTER"
			
			'Desktop.CaptureBitmap "ScreenShot.png",True
			'Reporter.ReportEvent micDone,"LOMA Screen", "To check the desposition of LOC  " & strValueID1(3) & "  of Product" & strValueID1(2),"ScreenShot.png"	
		
		
		disposition = TeWindow("TeWindow").TeScreen("LOMA Screen").TeField("DISPOSITION").GetROProperty("attached text")
			Desktop.CaptureBitmap "ScreenShot.png",True
			 Reporter.ReportEvent micDone,"LOC DISPOSITION", "Location " & strValueID1(3) & "Disposition is" & disposition,"ScreenShot.png"
			 TE_SendKey objCurrent,"F3"
	end if
	
	Set objCurrent = getQTPObject("Field","TeWindow","LIVINGSTON AMBIENT- TEST","ENTER FUNCTION CODE")
		TE_Field_Set objCurrent, "PRQC"
		
	Set objCurrent = getQTPObject("Screen","TeWindow","LIVINGSTON AMBIENT- TEST","LIVINGSTON AMBIENT- TEST")
		TE_SendKey objCurrent,"ENTER"
		

	Set objCurrent = getQTPObject("Field","TeWindow","PRQC Screen01","PRODUCT")
	call TE_Field_Set(objCurrent, strValueID1(2))
	
	Set objCurrent = getQTPObject("Screen","TeWindow","PRQC Screen01","PRQC Screen01")
		TE_SendKey objCurrent,"ENTER"
		Desktop.CaptureBitmap "ScreenShot.png",True		
		Reporter.ReportEvent micDone,"PRQC filter", "Entered Product : " & strValueID1(2),"ScreenShot.png"
	
		Condition = trim (objScreen.GetText(24,40,24,61))
		if Condition = "02:PRODUCT NOT ON FILE" then
		'msgbox "prod invalid"
			Desktop.CaptureBitmap "ScreenShot.png",True	
			Reporter.ReportEvent micWarning, "Invalid Product ", "Product " & strValueID1(2) & " not on file " ,"ScreenShot.png"
			fl_flag = fl_flag + 1
			'TE_SendKey objScreen,"F3"
			call TE_ReturnToMain(objCurrent)
		exit do
		end if


		'if invalid product
		REM Condition = trim (objScreen.GetText(24,40,24,58))
		REM if Condition <> "08:INQUIRY COMPLETE" then
			REM 'msgbox "prod invalid"
			REM 'TE_SendKey objScreen,"F3"
			REM Desktop.CaptureBitmap "ScreenShot.png",True	
			REM Reporter.ReportEvent micWarning,"PRQC Product","Invalid product!","ScreenShot.png" 
			REM 'TE_Screen_PRQC_Validations = Array (1, "PRQC Validations", "Validations failed")
			
			REM set objdummyScreen = TeWindow("TeWindow").TeScreen("DummyScreen")
			REM call TE_ReturnToMain(objdummyScreen)
			
			REM exit do
		REM end if
		

		ReserveBOH = TeWindow("TeWindow").TeScreen("PRQC Screen02").TeField("RSV BOH").GetROProperty("attached text")
	
		if instr(1,ReserveBOH,"(protected)") <> 0 then 
			ReserveBOH = mid(ReserveBOH, 1,Len(ReserveBOH)-11)
			Temp_ReserveBOH = ReserveBOH
			ReserveBOH = PreZeros_Format(ReserveBOH,"000000") 
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micDone,"PRQC Actual value", "Product" & strValueID1(2) & " and Its RSV BOH is  :" & ReserveBOH,"ScreenShot.png"
		End if
		
		strValueID1(13) = PreZeros_Format(strValueID1(13),"000000") 

		if strValueID1(7) <> "FRE" then
			
			if ReserveBOH = strValueID1(13) then
		
				Desktop.CaptureBitmap "ScreenShot.png",True
				Reporter.ReportEvent micPass, "Expected & Actual Values", "RSV BOH  " & strValueID1(13) & "| " & ReserveBOH  & " are equal","ScreenShot.png"
				'Reporter.ReportEvent micPass,"Passed001 - for product" & strValueID1(2) & " Reserve BOH Expected = " & strValueID1(13) ," and Actual = " &ReserveBOH
			else

				Desktop.CaptureBitmap "ScreenShot.png",True
				Reporter.ReportEvent micWarning, "Expected & Actual Values", "RSV BOH  " & strValueID1(13) & "| " & ReserveBOH  & " are not equal","ScreenShot.png"
				'Reporter.ReportEvent micFail,"Failed001 - for product " & strValueID1(2) & "Reserve BOH not Matched Expected = "& strValueID1(13)," Actual = " &ReserveBOH
				fl_flag = fl_flag + 1
				'Exit for
				v = 0
				TE_SendKey objScreen,"F3"
				exit do
			end if
		end if
		
	SELBOH = TeWindow("TeWindow").TeScreen("PRQC Screen02").TeField("SEL BOH").GetROProperty("attached text")
		if instr(1,SELBOH,"(protected)") <> 0 then 
	
		SELBOH = mid(SELBOH, 1,Len(SELBOH)-11)
		Temp_SELBOH = SELBOH
		SELBOH = PreZeros_Format(SELBOH,"000000") 
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micDone,"PRQC Actual value", "Product" & strValueID1(2) & " and Its SEL BOH is  :" & SELBOH,"ScreenShot.png"
		End if
		strValueID1(12) = PreZeros_Format(strValueID1(12),"000000") 
		
		if strValueID1(7) <> "FRE" then
			
			if SELBOH = strValueID1(12) then
		
				Desktop.CaptureBitmap "ScreenShot.png",True
				Reporter.ReportEvent micPass, "Expected & Actual Values", "SEL BOH  " & strValueID1(12) & "| " & SELBOH  & " are equal","ScreenShot.png"
				'Reporter.ReportEvent micPass,"Passed002 - for product " & strValueID1(2) & "SEL BOH Matched Expected = "& strValueID1(12)," Actual = " &SELBOH
			else

				Desktop.CaptureBitmap "ScreenShot.png",True
				Reporter.ReportEvent micWarning, "Expected & Actual Values", "SEL BOH  " & strValueID1(12) & "| " & SELBOH  & " are not equal","ScreenShot.png"
				'Reporter.ReportEvent micFail,"Failed002 - for product " & strValueID1(2) & "SEL BOH not Matched Expected = " &StrValueID1(12)," Actual = " &SELBOH 
				fl_flag = fl_flag + 1
				'Exit For 
				V = 0
				TE_SendKey objScreen,"F3"
				exit do
			end if
		end if


	TOTBOH = TeWindow("TeWindow").TeScreen("PRQC Screen02").TeField("TOT BOH").GetROProperty("attached text")
		if instr(1,TOTBOH,"(protected)") <> 0 then 
			TOTBOH = mid(TOTBOH, 1,Len(TOTBOH)-11)
			Temp_TOTBOH = TOTBOH
			TOTBOH= PreZeros_Format(TOTBOH,"000000") 
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micDone,"PRQC Actual value", "Product" & strValueID1(2) & " and Its TOT BOH is  :" & TOTBOH,"ScreenShot.png"
		End if
strValueID1(11) = PreZeros_Format(strValueID1(11),"000000") 
		if TOTBOH = strValueID1(11) then
	
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micPass, "Expected & Actual Values", "TOT BOH  " & strValueID1(11) & "| " & TOTBOH  & " are equal","ScreenShot.png"
			'Reporter.ReportEvent micPass,"Passed003 - for product " & strValueID1(2) & "Total BOH Matched Expected = " &strValueID1(11)," Actual = " &TOTBOH
		else
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micWarning, "Expected & Actual Values", "TOT BOH  " & strValueID1(11) & "| " & TOTBOH  & " are not equal","ScreenShot.png"
			'Reporter.ReportEvent micFail,"Failed003 - for product " & strValueID1(2) & "Total BOH not Matched Expected = " &strValueID1(11), " Actual = " &TOTBOH
			fl_flag = fl_flag + 1
			'Exit for 
			V = 0
			TE_SendKey objScreen,"F3"
			exit do
		end if
		
	'Need to compare TOTBOH to SEL BOH + RESBOH
		if strValueID1(7) = "FRE" then
			frv_eqlTo_TOTBOH = onScreen_SEL_RSV_eqlTo_TOTBOH (SELBOH, ReserveBOH,TOTBOH)
			if frv_eqlTo_TOTBOH = 0 then 
				REM Desktop.CaptureBitmap "ScreenShot.png",True
				REM Reporter.ReportEvent micPass, "On Screen Expected & Actual Values", "FREP TOT BOH  " & TOTBOH & "| " & BOH  & " are equal","ScreenShot.png"
			Else
				REM Desktop.CaptureBitmap "ScreenShot.png",True
				REM Reporter.ReportEvent micWarning, "On Screen Expected & Actual Values", "FREP TOT BOH  " & TOTBOH & "| " & BOH  & " are not equal","ScreenShot.png"
				'Reporter.ReportEvent micFail,"Failed003 - for product " & strValueID1(2) & "Total BOH not Matched Expected = " &strValueID1(11), " Actual = " &TOTBOH
				fl_flag = fl_flag + 1
				V = 0
				TE_SendKey objScreen,"F3"
				exit do
			End if 
			REM BOH = cint(ReserveBOH) + cint(SELBOH)
			REM msgbox "Total sum = " &BOH
			REM if TOTBOH = BOH then
				REM Desktop.CaptureBitmap "ScreenShot.png",True
				REM Reporter.ReportEvent micPass, "On Screen Expected & Actual Values", "FREP TOT BOH  " & TOTBOH & "| " & BOH  & " are equal","ScreenShot.png"
			REM else
				REM Desktop.CaptureBitmap "ScreenShot.png",True
				REM Reporter.ReportEvent micWarning, "On Screen Expected & Actual Values", "FREP TOT BOH  " & TOTBOH & "| " & BOH  & " are not equal","ScreenShot.png"
				REM 'Reporter.ReportEvent micFail,"Failed003 - for product " & strValueID1(2) & "Total BOH not Matched Expected = " &strValueID1(11), " Actual = " &TOTBOH
				REM fl_flag = fl_flag + 1
				REM V = 0
				REM TE_SendKey objScreen,"F3"
				REM exit do
			REM end if
		end if
	' Ended comparison

	if strValueID1(7) <> "FRE" then
		
		do
				for i = 8 to 23
				
					strValue = trim (objScreen.GetText(i,02,i,07))
					if strValueID1(3) = strValue then
						
						temp = 1
						Qty = trim (objScreen.GetText(i,31,i,34))
						Desktop.CaptureBitmap "ScreenShot.png",True
						Reporter.ReportEvent micDone,"PRQC RES LOC", "Reserve Location record from PRQC(found left side) :" & strValue ,"ScreenShot.png"
						
					'TE_Screen_PRQC_Validations = Array (0, "GetText from screen",  "Successfully completed.")
						exit do
						exit for
					else
						temp = 0

					end if
					
				next

				if temp = 0  then
					for i = 8 to 23
				
						strValue = trim (objScreen.GetText(i,44,i,49))
						if strValueID1(3) = strValue then
							temp = 1
							Qty = trim (objScreen.GetText(i,73,i,76))
							Desktop.CaptureBitmap "ScreenShot.png",True
							Reporter.ReportEvent micDone,"PRQC RES LOC", "Reserve Location record from PRQC(found Rightside) :" & strValue ,"ScreenShot.png"
							'TE_Screen_PRQC_Validations = Array (0, "GetText from screen",  "Successfully completed.")
							exit do
							exit for
						else
							temp = 0
							
						end if	
				
					next
			end if	
			TE_SendKey objScreen,"F2" 'Checking next page irrespective of no of pages (even for single page)
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micDone,"PRQC", "Checking for next page existance for this product in PRQC "  & strValueID1(2),"ScreenShot.png"
			'call TE_SendKey(objCurrent, F3)
			str1 = trim (objScreen.GetText(24,40,24,77))
			str2 = trim (objScreen.GetText(24,40,24,74))
			str3 = trim (objScreen.GetText(24,40,24,78))
			loop while str1 = "06:FOR ADDITIONAL LOCATIONS ENTER PF 2" or str2 = "08:INQUIRY COMPLETE - ENTER PRODUCT" or str3 = "08:FIX LOCS UNHIGHLIGHTED-ENTER PRODUCT"
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micDone,"PRQC", "Checking nomore pages for this product in PRQC "  & strValueID1(2),"ScreenShot.png"
		
			if trim(disposition) = "KEEP(protected)" then

				if temp = 1 then
					if Qty = 0 then
						
						'TE_Screen_PRQC_Validations = Array (0, "GetText from screen",  "Successfully completed.")
						Desktop.CaptureBitmap "ScreenShot.png",True
						Reporter.ReportEvent micPass,"PRQC RES LOC", "Product :"  &  strValueID1(2) & "LOC :" & strValueID1(3) & ",  Disposition : KEEP, is present in PRQC as expected with Quantity  = 0","ScreenShot.png"
						
					else
						
						fl_flag = fl_flag + 1
						Desktop.CaptureBitmap "ScreenShot.png",True
						Reporter.ReportEvent micWarning,"PRQC RES LOC", "Product :"  &  strValueID1(2) & "LOC :" & strValueID1(3) &",  Disposition : KEEP, is present in PRQC, Quantity should be Zero but Actual Quantity = " & Qty,"ScreenShot.png"
						'Reporter.ReportEvent micFail,"Failed004 - for product " & strValueID1(2) & " with KEEP location " & StrValue & " present in PRQC with Expected Quantity = 0" , " Actual = " & Qty
						'TE_Screen_PRQC_Validations = Array (1, "GetText from screen",  "Replen quantity is not zero")
					end if
				else
					
					fl_flag = fl_flag + 1
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micWarning,"PRQC", "Product :"  &  strValueID1(2) & ",  Disposition : KEEP though the LOC " & strValueID1(3) & " is not present!","ScreenShot.png"
					'Reporter.ReportEvent micFail,"Failed005 - for product " & strValueID1(2) & " with KEEP location " &strValueID1(3) & " not present in PRQC ",""
					
					'TE_Screen_PRQC_Validations = Array (1, "GetText from screen",  "Product is not present in PRQC")
				end if
			REM if temp = 1 and Qty = 25 then
				REM TE_Screen_PRQC_Validations = Array (0, "GetText from screen",  "Successfully completed.")
			REM else
				REM TE_Screen_PRQC_Validations = Array (1, "GetText from screen",  "Page Object Not Found")
			REM end if

			elseif trim(disposition) = "FREE(protected)" then

				if temp = 0 then
					
					TE_SendKey objScreen,"F3"
					'call TE_SendKey(objCurrent, F3)
					Set objCurrent = getQTPObject("Field","TeWindow","LIVINGSTON AMBIENT- TEST","ENTER FUNCTION CODE")
					TE_Field_Set objCurrent, "PCQA"
					Set objCurrent = getQTPObject("Screen","TeWindow","LIVINGSTON AMBIENT- TEST","LIVINGSTON AMBIENT- TEST")
					TE_SendKey objCurrent,"ENTER"
				
					Set objCurrent = getQTPObject("Field","TeWindow","P U T - A W A Y   C O","LOCATION")
					call TE_Field_Set(objCurrent, strValueID1(3))
					Set objCurrent = getQTPObject("Screen","TeWindow","P U T - A W A Y   C O","P U T - A W A Y   C O")
					TE_SendKey objCurrent,"ENTER" 
					Loc = trim (objScreen.GetText(08,08,08,13))
					
						if Loc = strValueID1(3) then
							Desktop.CaptureBitmap "ScreenShot.png",True
							Reporter.ReportEvent micPass,"PCQA RES LOC", "Product :"  &  strValueID1(2) & "LOC :" & strValueID1(3) & ",  Disposition : FREE, is present in PCQA and not in PRQC as expected.","ScreenShot.png"
							'Reporter.ReportEvent micPass,"Passed005 - for product " & strValueID1(2) & " with FREE location " &strValueID1(3) & " not present in PRQC and its reserve location present in PCQA ", ""
							'TE_Screen_PRQC_Validations = Array (0, "GetText from screen",  "Successfully completed.")
						else
							fl_flag = fl_flag + 1
							Desktop.CaptureBitmap "ScreenShot.png",True
							Reporter.ReportEvent micWarning,"PCQA RES LOC", "Product :"  &  strValueID1(2) & "LOC :" & strValueID1(3) & ",  Disposition : FREE, is not present in PCQA and PRQC  which is not expected.","ScreenShot.png"
							'Reporter.ReportEvent micFail,"Failed006 - for product " & strValueID1(2) & " with FREE location " &strValueID1(3) & "not present in PRQC and its reserve location not present in PCQA  ",  " "
							'TE_Screen_PRQC_Validations = Array (1, "GetText from screen",  "Page Object Not Found")
						end if
						'TE_Screen_PRQC_Validations = Array (0, "GetText from screen",  "Successfully completed.")
				else
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micWarning,"PRQC RES LOC", "Product :"  &  strValueID1(2) & "LOC :" & strValueID1(3) & ",  Disposition : FREE, though it is present in PRQC which not expected." ,"ScreenShot.png"
					'Reporter.ReportEvent micFail,"Failed007 " & strValueID1(2) & " FREE product  present in PRQC ",  " "
					fl_flag = fl_flag + 1
					'TE_Screen_PRQC_Validations = Array (1, "GetText from screen",  "Page Object Not Found")
				end if
			end if
	end if
	TE_SendKey objScreen,"F3"

loop while v = 0
	
next


if fl_flag = 0 then
	TE_Screen_PRQC_Validations = Array (0, "PRQC validation",  "Successfully completed.")
	
else
	TE_Screen_PRQC_Validations = Array (1, "PRQC validation",  "UnSuccessfully completed. and refer the all " & fl_flag & "  Warning logs" )
	
end if

call TE_ReturnToMain(objScreen)

End Function

Public Function TE_Screen_IR06001_Report_InTextFile(ByRef objScreen, ByVal strValueID1)

	If objScreen.Exist(4) Then
		TE_Screen_IR06001_Report_InTextFile = Array (0, "IR06-01 Report exist" , "Successful")
		'Option Explicit
		
		'Create a new text file with ".txt" format
		Dim objFSO, objFile, qFile, textFilePath, FileData
		
		textFilePath = strValueID1
		
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.CreateTextFile(textFilePath, True)
			
		If strValueID1 <> "" Then
		
			Dim LeftScreen_txt(), RightScreen_txt, StartRow_txt, LastRow_txt, Head_txt, Region, Flag1, Flag2
			Dim RowST, RowED, Space_Line(1), PageCount
			RowED = 24
			PageCount = 0
			
			Dim spaceCounter, iCounter, jCounter, kCounter, Iterator
			
			'Loop to create a line filled with full of spaces (without any text)
			For spaceCounter = 1 To 130
				Space_Line(1) = " "&Space_Line(1)
			Next
			
			Head_txt = objScreen.GetText(1, 19, 1, 22)
			Region = Right(Head_txt, 2)
			
			Do
				'To get Total Page count of the report
				PageCount = PageCount + 1
				
				If Region = "T4" Then
					RowST = 5
					else
					If PageCount = 1 Then
						RowST = 7
						else
						RowST = 3
					End If
				End If
				
				'Loop to Get all text from Letfside of the Mainframe screen
				For iCounter = RowST To RowED
					ReDim Preserve LeftScreen_txt(iCounter)
					LeftScreen_txt(iCounter) = objScreen.GetText(iCounter, 1, iCounter, 80)
				Next
				
				Dim wsh, objWin
				
				Set wsh = CreateObject("WScript.Shell")
				Set objWin = TeWindow("TeWindow")
				objWin.Activate
				wsh.SendKeys "{F11}"
				Wait(2)
				Call TESync()
				
				'Loop to Get all text from Rightside of the Mainframe screen and concatenate with the Leftside screen
				For jCounter = RowST To RowED
					RightScreen_txt = objScreen.GetText(jCounter, 31, jCounter, 80)
					LeftScreen_txt(jCounter) = LeftScreen_txt(jCounter)&RightScreen_txt
				Next
				
				TeWindow("TeWindow").Activate
				wsh.SendKeys "{F10}"
				Call TESync()
					
				wsh.SendKeys "{F8}"
				Call TESync()
				
				'Loop to print all the text captured from the Mainframe screen to Text file
				For kCounter = RowST To UBound(LeftScreen_txt)
					If Instr(1, LeftScreen_txt(kCounter), "ORDERS PROCESSED", vbBinaryCompare)>0 Then
						Set objFile = objFSO.OpenTextFile(textFilePath, 1, True)
						Set qFile = objFSO.OpenTextFile(textFilePath, 8, True)
						LastRow_txt = LeftScreen_txt(kCounter)
						qFile.WriteLine LastRow_txt
						qFile.Close
						Exit do
						Flag1 = True	
						else
						If (LeftScreen_txt(kCounter) = Space_Line(1)) or (Instr(1, LeftScreen_txt(KCounter), "Top of Data", vbBinaryCompare)>0)Then
							Else
							If PageCount = 1 Then
								objFile.WriteLine LeftScreen_txt(kCounter)
								Else
								Set objFile = objFSO.OpenTextFile(textFilePath, 1, True)
								Set qFile = objFSO.OpenTextFile(textFilePath, 8, True)
								
								Do While objFile.AtEndOfStream <> True
									FileData = objFile.ReadLine
									If Instr(1, FileData, LeftScreen_txt(kCounter), vbBinaryCompare)>0 Then
										Flag2 = True
										Exit do
										else
										Flag2 = False
									End If
								Loop
								
								If Flag2 = False Then
									qFile.WriteLine LeftScreen_txt(kCounter)
								End If
								
								qFile.Close
								objFile.Close
								
							End If
						End If
					End If
				Next
				objFile.Close
			
			Loop Until Flag1=True
			TE_Screen_IR06001_Report_InTextFile = Array (0, "Successfully Extracted '", strValueID1)
			Else
			TE_Screen_IR06001_Report_InTextFile = Array (1, "Enter File Location '", strValueID1)
		End If
			
		Set objFSO = Nothing
		TE_Screen_IR06001_Report_InTextFile = Array (0, "Check for existance of IR06-01 report screen",  "Page Object Found")
		Else
		TE_Screen_IR06001_Report_InTextFile = Array (1, "Check for existance of IR06-01 report screen",  "Page Object Not Found")
	End If
	
End Function



Public function TE_Screen_aisgleconcat(ByRef objScreen, ByVal strValueID1, ByVal strValueID2 ,ByVal strValueID3)
   If objScreen.Exist(4)  Then
	
	   Dim ans
	
	If len(strValueID1) = 6 Then
		ans = strValueID1 + " - " + strValueID2
		else 
		ans = strValueID1 + "  - " + strValueID2
	End If
	Call saveRunValue (strValueID3, ans)
			TE_Screen_aisgleconcat = Array (0, "The aisle locations have been concatenated",  "Successfully done")
		else
			TE_Screen_aisgleconcat = Array (1, "The aisle locations have been concatenated",  "Failed to concatenate")	
   End If

End function


Public function TE_Screen_BackToReport(ByRef objScreen)

     If  objScreen.Exist(4) Then
		 Dim presskey
				presskey = "F3"
				Call TE_SendKey (objScreen,presskey)
				TeWindow("TeWindow").TeScreen("REPRO 3.2.1 -----------------").TeField("SELECT AN AVAILABLE PRINTER").Set "VIEW"
				presskey = "ENTER"
				call TE_SendKey (objScreen,presskey)
				TE_Screen_BackToReport = Array (0, "The report has been reached"  ,  "Successfully done.")
	else
				TE_Screen_BackToReport = Array (1, "The report has been reached",  "Page object not found.")
	end if 
end Function




	Private Function TE_RBFILE_PDS (ByVal strValue1,ByVal strValue2)
		msgbox "Richa"
		'If objScreen.Exist Then
		'msgbox "hi"
			'If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
				Region_Mnemonic = MID(strValue1,5,2)
				msgbox Region_Mnemonic
				if instr(1,UCASE(strValue1), "CICL") then 
					PDS = "CICDL." & Region_Mnemonic & ".RBFILE"
 					Call saveRunValue (strValue2, PDS)
					strValue2 = PDS
					msgbox "strValue2: " & strValue2
					msgbox "PDS: " & PDS
					Reporter.ReportEvent micPass,"NF_Region","Validation is carried out in PDS--> " &  PDS
				Elseif instr(1,UCASE(strValue1), "CICT") THEN
					PDS = "CICST." & Region_Mnemonic & ".RBFILE"
					'Call saveRunValue (strValue2, PDS)
					strValue2 = PDS
					msgbox strValue2
					Reporter.ReportEvent micPass,"D8_Region","Validation is carried out in PDS--> " &  PDS
				'End IF
				End if
				
			'End if
			'TE_RBFILE_PDS = Array (0, "Set Dsname level field on screen",  "Successfully completed.")
		'Else
			'msgbox "Gone case"
			REM TE_RBFILE_PDS = Array (1, "Set Dsname level field on screen",  "Page Object Not Found")
		'End If
		Msgbox "PDS  --> " & PDS
		TE_RBFILE_PDS  = PDS
End Function
	
	Private Function TE_RBFile_Validations (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, Byval strValueID3)
	Dim ChWH
	ChWH = strValueID1 & strValueID2	'ChWH - Centre ID followed by Warehouse ID 
	Reporter.ReportEvent micPass,"ChWH","DC followed by Warehouse" &  ChWH
	
	dim crnt_Row : crnt_Row =""
    dim Flag1 : Flag1 = 0	'Flag for Top of Data
    dim Flag2 : Flag2 = 0	'Flag for End of Data
    dim Flag3 : Flag3 = 0	'Flag for data between Top and End in RBFile
	dim RBBrowse_flag : RBBrowse_flag = 0
	SC = 1		'SC - Start Count
    EC = 79		'EC - End Count
	expected_top_of_data = "****  Top of data  ****"
    expected_end_of_data = "****  End of data  ****"
	
	' --------- For respective regions(Browse PDS)  -----------------
	
	Regn_Mnemonic=MID(strValueID3,5,2)
	'R1=MID("CICTD8",5,2)
	
	if instr(1,UCASE(strValueID3), "CICL") then 
		PDS = Ucase("CICDL." & Regn_Mnemonic & ".RBFILE")	
		Reporter.ReportEvent micPass, Regn_Mnemonic & "_Region","Validation is carried out in PDS--> " &  PDS
	Elseif instr(1,UCASE(strValueID3), "CICT") THEN
		PDS = Ucase("CICST." & Regn_Mnemonic & ".RBFILE")
		Reporter.ReportEvent micPass, Regn_Mnemonic & "_Region","Validation is carried out in PDS--> " &  PDS
	'End IF
	End if 
	'Msgbox  "RBFILE PDS " & PDS
	For SR = 1 to 15  'Looping through the rows in RBFile 
		Set Obj= getQTPObject("Screen","TeWindow","RBFile","RBFile") 	'Defining a QTP object named "Obj" in order to access RBFile data
        crnt_Row = trim (Obj.GetText(SR,SC,SR, EC))		'crnt_Row - Extracting the text from screen corresponding to respective 
														'row(SR as cuurent row) and column(SC - Start Column and EC - End Column)
		'-------- Validation of region in RBFile ---------------
		Reporter.ReportEvent micPass,"ROW",crnt_Row
		
        if instr(1,crnt_Row ,PDS) <> 0 and instr(1,crnt_Row ,"Browse") and RBBrowse_flag = 0 then 
			RBBrowse_flag = 1
			Reporter.ReportEvent micPass,"Browse","Verified for Browse with respective PDS as--> " &  PDS
			crnt_Row =""
        End if 
		'-------- Top of Data Validation in RBFile ---------------
        if instr(1,crnt_Row ,expected_top_of_data) <> 0 and flag1 = 0  and RBBrowse_flag = 1 then 
			Flag1 = 1
			Reporter.ReportEvent micPass,"TOP_RBFile","Verified top line of RBFILE" &  expected_top_of_data 
			crnt_Row =""
        End if 
		
		'------- End of Data Validation in RBFile ----------
		if instr(1,crnt_Row ,expected_end_of_data) <> 0 and flag2 = 0 and Flag1 = 1 then 
			Flag2 = 1
			Reporter.ReportEvent micPass,"END_RBFile","Verified end line of RBFILE" &  expected_end_of_data 
			crnt_Row =""
            Exit For
        End if
		
		'--------- Validation of Data between Top and End in RBFile -----------------
		if Flag1 = 1 and Flag2 = 0 then 
			RB_Data = RB_Data & crnt_Row & "|" 		'Appending the data/rows present between Top and End of RBFile using a delimiter "|"
			
			'------ Validating Center and Warehouse IDs with RB file data ----------
			if instr(1,RB_Data,ChWH) = 0 then 
				rbStatus = 0   'ChWH not found in RBFile
				Reporter.ReportEvent micPass,"Pass","Verified string ChWH = " & ChWH & " existance in current row of RBfile and it's not present, current line is  " &  crnt_Row 
			Else
				rbStatus = 1	'ChWH found in RBFile
				'msgbox "@Fail rbStatus= " & rbStatus
				Reporter.ReportEvent micFail,"Fail","Verified string ChWH = " & ChWH & " existance in current row of RBfile and it's present, current line is  " &  crnt_Row 
				Exit for 
			End if 
		End if 
		'-----
        crnt_Row =""	'Nullifying the current row of RBFile
    Next
	
	'Reporting the final validation status 
	if RBBrowse_flag = 1 then 
		if rbStatus = 0 then				
			TE_RBFile_Validations = Array (0, "RBfile Validation after BOMB",  "RBFILE validation completed successfully .")
		Else
			TE_RBFile_Validations = Array (1, "RBfile Validation after BOMB",  "Error encountered during RBFile validation")
		End If
	Else
		TE_RBFile_Validations = Array (1, "Check for browse region",  "Unable to open RBFile")
	End if 
	
		set objdummyScreen = TeWindow("TeWindow").TeScreen("DummyScreen") 
		
		TE_SendKey objdummyScreen, "PGDN"
        objdummyScreen.sync
		
End Function

	REM Private Function common_equalCheck(compareValues)
		REM dim arr
		REM arr = split (compareValues,"|")
		REM If arr(0) = arr(1) Then
			REM common_equalCheck = 0    
		REM else
			REM common_equalCheck = 1
		REM end if
	REM End Function
	

		
		
		Private Function TE_ReturnToMain(ByRef objCurrent)		
		
		
			if objCurrent.exist then 
				
				last_row =TE_GetText_FromScreen(objCurrent,"24_02_80")
			   
				 if instr(1,last_row,"MENU") <> 0 then
					 
				
			    Else	
			
				 TE_SendKey objCurrent,"F3"	
				    Set objCurrent = getQTPObject("Screen","TeWindow","LIVINGSTON AMBIENT- TEST","LIVINGSTON AMBIENT- TEST") 
					   if objCurrent.exist then  
					        last_row =TE_GetText_FromScreen(objCurrent,"24_02_80")
			                      
								if instr(1,last_row,"MENU") <> 0 then
								   
								   TE_ReturnToMain = Array (0, "Return to Main Menu" ,  "Successfull, return to main menu.")
								   else
								   TE_ReturnToMain  = Array (1, "return to some other menu" ,  "Unsuccessful,return to some other menu")
								
								end if 
                       	end if			 
			
                 End if 			
			else
			TE_ReturnToMain = Array (1, "return to some other menu" ,  "Unsuccessful,return to some other menu")
			'TE_ReturnToMain Array =(1, "PRQA Valiation unsuccessfully Completed" ,  "Unsuccessful,PRQA validation is Failed")
		
		
		   end if 
		
		End Function

Private Function TE_Screen_RMMTValidation (ByRef objScreen,byVal DataExl_Path,byVal Data_ExlTab_Series)
				
		'type = strValueID1
		flag = 0
		dim arr_Exp_ActlValues()
		cnt = 0
		
		tosecStartPos=5
		tosecLen=3
		tolocStartPos=9
		tolocLen=6
		qtyStartPos=16
		qtyLen=4
		fromsecStartPos=28
		fromsecLen=3
		fromlocStartPos=32
		fromlocLen=6
		typeStartPos=45
		typeLen=6
		priStratPos=53
		priLen=1
		prodStartPos=55
		prodLen=7
		createdDateStartPos=72
		createdDateLen=8
		Dim dataFlag : dataFlag = 0
		ar_strData_ExlTab_Series =  split(Data_ExlTab_Series,"|")
		expectedProdArray = read_ExpectedData01_fromExcel(DataExl_Path,ar_strData_ExlTab_Series(0),ar_strData_ExlTab_Series(1))
		
		if isarray(expectedProdArray) = true then 
			expectedProdArr = specific_assignment_expData(expectedProdArray,"REP_FRE_SDK")  
		Else
			dataFlag = 1
		End if 
		if isarray(expectedProdArr) = False or dataFlag = 1 then 
			Reporter.ReportEvent micWarning,"RMMT Expected data","REP_FRE_SDK is not available in excelsheet, hence exit from RMMT validations!"  
			TE_Screen_RMMTValidation = Array (1, "RMMT Validations", "Validations failed")
			set objdummyScreen = TeWindow("TeWindow").TeScreen("DummyScreen")
			call TE_ReturnToMain(objdummyScreen)
			Exit Function 
		End if 
		 
		'expd_DataCols = "DATAID|EXT_PRODUCT|EXT_FRMLOC|EXT_FRMSEC|EXT_TOLOC|EXT_TOSEC|EXT_TYPE|EXT_MOVQTY|EXT_PRIORITY|EXT_CREATEDDT|EXT_TOTALBOH|EXT_SELBOH|EXT_RESBOH"
		
		For i = 0 to ubound(expectedProdArr)-1
			Redim arr_Exp_ActlValues(8)
			
			expextedEachProdDtlsArr = split(expectedProdArr(i),"|")
			
			expextedEachProdDtlsArr(2) = PreZeros_Format(expextedEachProdDtlsArr(2),"0000000") 
			Set objCurrent = getQTPObject("Field","TeWindow","VIEW/UPDATE WORK","PROD") 
			call TE_Field_Set(objCurrent,expextedEachProdDtlsArr(2))

			Set objCurrent = getQTPObject("Field","TeWindow","VIEW/UPDATE WORK","TYPE") 
			call TE_Field_Set(objCurrent, expextedEachProdDtlsArr(7))	
					
			Set objCurrent = getQTPObject("Field","TeWindow","VIEW/UPDATE WORK","STATUS") 
			call TE_Field_Set(objCurrent, "AVAIL")
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micPass,"RMMT FilterData","PRD STS TYP: " & expextedEachProdDtlsArr(2)& ",  Type : " & expextedEachProdDtlsArr(7) & " and Status as AVAIL","ScreenShot.png"
			
			TE_SendKey objScreen,"ENTER"
			Desktop.CaptureBitmap "ScreenShot.png",True
			Reporter.ReportEvent micPass,"RMMT FilterData","Submitted ENTER key" & expextedEachProdDtlsArr(2) & ",  Type : " & expextedEachProdDtlsArr(7) & " and Status as AVAIL","ScreenShot.png"
			dim screenData
			screenData = trim(TE_GetText_FromScreen(objScreen ,"08_01_80"))
			
			if screenData = "" then
				screenData = TE_GetText_FromScreen(objScreen ,"07_01_79")
				Reporter.ReportEvent micDone,"RMMT Row data", "Captured RMMT actual data : " &  screenData
				
				if trim(screenData)	= "" then
					'TE_Screen_RMMTValidation = Array (1, "Check RMMT Details", "Assignment details not available for product :" & expextedEachProdDtlsArr(2))
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micWarning,"Check RMMT Details","Product : " & expextedEachProdDtlsArr(2) & " :Assignment details not available for product  ","ScreenShot.png"
					cnt = cnt+1
				else
					tosec = mid(screenData,tosecStartPos,tosecLen)
					toloc = trim(mid(screenData,tolocStartPos,tolocLen))
					qty = mid(screenData,qtyStartPos,qtyLen)
					fromsec = mid(screenData,fromsecStartPos,fromsecLen)
					fromloc = mid(screenData,fromlocStartPos,fromlocLen)
					type1 = mid(screenData,typeStartPos,typeLen)
					prod1 = mid(screenData,prodStartPos,prodLen)
					pri = mid(screenData,priStratPos,priLen)
					createdDate = mid(screenData,createdDateStartPos,createdDateLen)
					
					expextedEachProdDtlsArr(6) = PreZeros_Format(expextedEachProdDtlsArr(6),"000") 
					expextedEachProdDtlsArr(8) = PreZeros_Format(expextedEachProdDtlsArr(8),"0000") 
					expextedEachProdDtlsArr(4) = PreZeros_Format(expextedEachProdDtlsArr(4),"000")
					
					if expextedEachProdDtlsArr(7) = "REP" then
						expextedEachProdDtlsArr(7) = "REPLEN"
					elseif expextedEachProdDtlsArr(7) = "FRE" then
						expextedEachProdDtlsArr(7) = "FREPLN"
					elseif expextedEachProdDtlsArr(7) = "SDK" then
						expextedEachProdDtlsArr(7) = "SELPAL"	
					end if
			
					arr_Exp_ActlValues(0) = expextedEachProdDtlsArr(2) & "|" & prod1  & "|Product Values"
					arr_Exp_ActlValues(1) = expextedEachProdDtlsArr(3) & "|" & fromloc & "|From location Values"
					arr_Exp_ActlValues(2) = expextedEachProdDtlsArr(4) & "|" & fromsec & "|From Section Values"
					arr_Exp_ActlValues(3) = expextedEachProdDtlsArr(5) & "|" & toloc & "|To location Values"
					arr_Exp_ActlValues(4) = expextedEachProdDtlsArr(6) & "|" & tosec & "|To section Values"
					arr_Exp_ActlValues(5) = expextedEachProdDtlsArr(7) & "|" & type1 & "|Type Values"
					arr_Exp_ActlValues(6) = expextedEachProdDtlsArr(8) & "|" & qty & "|Quantity Values"
					arr_Exp_ActlValues(7) = expextedEachProdDtlsArr(9) & "|" & pri & "|Priority Values"
					arr_Exp_ActlValues(8) = expextedEachProdDtlsArr(10) & "|" & createdDate & "|CreatedDate Values"
					
					'------------
					dim n
                                                                                arr_Exp_ActlValues(0) = expextedEachProdDtlsArr(2) & "|" & prod1  & "|Product Values"
                                                                                arr_Exp_ActlValues(1) = expextedEachProdDtlsArr(3) & "|" & fromloc & "|From location Values"
                                                                                arr_Exp_ActlValues(2) = expextedEachProdDtlsArr(4) & "|" & fromsec & "|From Section Values"
                                                                                arr_Exp_ActlValues(3) = expextedEachProdDtlsArr(5) & "|" & toloc & "|To location Values"
                                                                                arr_Exp_ActlValues(4) = expextedEachProdDtlsArr(6) & "|" & tosec & "|To section Values"
                                                                                arr_Exp_ActlValues(5) = expextedEachProdDtlsArr(7) & "|" & type1 & "|Type Values"
                                                                                arr_Exp_ActlValues(6) = expextedEachProdDtlsArr(9) & "|" & pri & "|Priority Values"
                                                                                arr_Exp_ActlValues(7) = expextedEachProdDtlsArr(10) & "|" & createdDate & "|CreatedDate Values"
                                                                                
                                                                                n= 7  
                                                                                if expextedEachProdDtlsArr(7) = "SELPAL" or expextedEachProdDtlsArr(7) = "REPLEN" then
                                                                                                Redim preserve arr_Exp_ActlValues(8)
                                                                                                arr_Exp_ActlValues(8) = expextedEachProdDtlsArr(8) & "|" & qty & "|Quantity Values"
                                                                                                n = 8
                                                                                end if 
                                                                                
					for j=0 to n

					'------------
					
					
					
					
					
					'for j=0 to 8
						flag = common_equalCheck(arr_Exp_ActlValues(j))
						if flag = 1 then
							Desktop.CaptureBitmap "ScreenShot.png",True
							Reporter.ReportEvent micWarning,"Check Expected & Actual data","Product : " & expextedEachProdDtlsArr(2) & ",  Expected value | Actual Value : " & arr_Exp_ActlValues(j)& " are not equal" ,"ScreenShot.png"
							'TE_Screen_RMMTValidation = Array (1, "Check Expected & Actual Values","Product : "& expextedEachProdDtlsArr(2)& ",  Expected value | Actual Value : " & arr_Exp_ActlValues(j) & " are not equal")
							cnt = cnt+1
						else
							Desktop.CaptureBitmap "ScreenShot.png",True
							Reporter.ReportEvent micPass,"Check Expected & Actual data","Product : " & expextedEachProdDtlsArr(2) & ",  Expected value | Actual Value : " & arr_Exp_ActlValues(j)& " are equal" ,"ScreenShot.png"
						end if 
					next
				
				end if
			else
		
					'TE_Screen_RMMTValidation = Array (1, "Check for multiple records", "Has multiple records for same product : Not valid")
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micWarning,"Check For multiple records","Product : " & expextedEachProdDtlsArr(2) & " : Has multiple records","ScreenShot.png"
					cnt = cnt+1
			end if
		Next
		
		
		if  cnt = 0 then
			TE_Screen_RMMTValidation = Array (0, "RMMT Validations", "Successfuly completed validation for all products")
	
		
		elseif cnt > 0 then
			TE_Screen_RMMTValidation = Array (1, "RMMT Validations", "Validations failed")
		end if
		
		'returning back to Mainmenu.
		call TE_ReturnToMain(objScreen)
		
	End Function

Public Function TE_Screen_Bomamsg (ByRef objScreen,ByVal strValueID1,ByVal strValueID2)

	Dim strText,strText2,strText3,strText4,i,coun,m,presskey,strText5

	If  objScreen.Exist(4) Then

		strText = trim(objScreen.GetText(24,40,24,75))
		strText2 = "26:NO NEW SEGMENT CREATED, ENTRIES"
		strText3 ="15:UPDATE COMPLETE, ENTER CUST/ORDER"
		strText4 = "48:CANNOT SPLIT THE ORDER."
        coun = trim(objScreen.GetText(13,77,13,79))
  		i = 1
		m=1
	'If  strcomp(trim(strText),strText2,1) or strcomp(trim(strText),strText4,1) Then
		'If Trim(strText) = strText4 or Trim(strText) = strText2 Then
		If instr(1,trim(strText),strText2,1) or  instr(1,trim(strText),strText4,1) Then
				Do until ((i = coun) or instr(1,trim(strText),strText3,1))
				m=m+1
				presskey = "ENTER"
				call TE_SendKey (objScreen,presskey)
				strText = trim(objScreen.GetText(24,40,24,75))
				objScreen.settext 20, 52 , strValueID1
				objScreen.settext 20, 63 ,m
				objScreen.settext 20, 71 , strValueID2
				presskey = "ENTER"
				call TE_SendKey (objScreen,presskey)
				strText = trim(objScreen.GetText(24,40,24,75))
				i=i+1
				If instr(1,trim(strText),strText3,1) Then
					Exit Do
				End If
			loop
		End If
			strText = trim(objScreen.GetText(24,40,24,75))
			if instr(1,trim(strText),strText3,1)Then
				TE_Screen_Bomamsg = Array (0, "Split Happend Successfully",  "new segment created")
            else 
			TE_Screen_Bomamsg = Array (1, "Split not happend",  "New segment not created")
			end if
	Else
		TE_Screen_Bomamsg = Array (1, "Split screen not found",  "Page Object Not Found")
	End If

End Function




	'-----------------------------------------------------------------------------------------------------
'Name: Function read_ExpectedData01_fromExcel
' Parameters :  ( Expected_dataExl_file,Data_expSheet, ext_DataSeries_Start)
'	Expected_dataExl_file : absolute path of the data sheet.
'	Data_expSheet: Sheet name from Data sheet.
'	ext_DataSeries_Start: Ex: TD100_A_MR001, needs to pass only multi record data i.e. having similar searis of data.
' ReturnValue: on data availability:  array with all relavent sequece data  (or) on no data : 1
'-----------------------------------------------------------------------------------------------------
	Private Function read_ExpectedData01_fromExcel( Expected_dataExl_file,Data_expSheet, ext_DataSeries_Start)
		'==> set the excel object for Open and for readh.
		'Expected_dataExl_file = "D:\Automation_Suite_ST\W_Rel\NonASN\GI_TEST_DATA_NON_ASN.xls"   ' Input Parameter for this function.
		'Data_expSheet = "BOMB_ExpValues" 
		'msgbox "inside read_ExpectedData01_fromExcel function"
		Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(Expected_dataExl_file)
	
			Set excelSheet_expValues = excelobject.ActiveWorkbook.Worksheets(Data_expSheet)
			datavalue = varValue3
            Row = excelSheet_expValues.UsedRange.Rows.Count
			'msgbox row
			Col = excelSheet_expValues.UsedRange.columns.count
			'msgbox col
		
		'==> Getting the column IDs for all requied coloumn headers.	
			'expd_DataCols = "DATAID|ext_Product|ext_ToLOC|ext_ToSEC|ext_FRMLOC|ext_FRMSEC|ext_AsgnType|ext_asgnQTY|ext_Priority|ext_CreatedDt|ext_TotalBOH|ext_SELBOH|ext_RESBOH"
			expd_DataCols = "DATAID|EXT_PRODUCT|EXT_FRMLOC|EXT_FRMSEC|EXT_TOLOC|EXT_TOSEC|EXT_TYPE|EXT_MOVQTY|EXT_PRIORITY|EXT_CREATEDDT|EXT_TOTALBOH|EXT_SELBOH|EXT_RESBOH"
			'expd_DataCols = "DATAID|EXT_PRODUCT|EXT_TOLOC|EXT_FRMSEC|EXT_FRMLOC|EXT_TOSEC|EXT_TYPE|EXT_MOVQTY|EXT_PRIORITY|EXT_CREATEDDT|EXT_TOTALBOH|EXT_SELBOH|EXT_RESBOH"
			
			ar_expd_DataCols  = split(expd_DataCols,"|")
			Dim ar_expd_DataColsID () ' (ubound(ar_expd_DataCols))
			dim rq
			rq = 0
	
	For e = 0 to ubound(ar_expd_DataCols)
		For c = 1 to col		
			'msgbox Lcase(Trim(excelSheet_expValues.cells(1,c).value)) & chr(13) & C
			if Lcase(Trim(excelSheet_expValues.cells(1,c).value)) =  Lcase(Trim(ar_expd_DataCols(e))) then 
				rq = rq+1
				'msgbox "Column ID number is :" & c
				Redim Preserve ar_expd_DataColsID(rq)
				ar_expd_DataColsID(rq-1) =  c
				'msgbox ar_expd_DataCols(e) & "---" & c & chr(13)& rq-1
				Exit For 
			End if 
			'msgbox excelSheet_expValues.cells(i,1).value
		Next
	Next
	
	REM 'temp
		REM for x= 0 to ubound(ar_expd_DataColsID)
			REM msgbox ar_expd_DataCols(x) & "<Colomn>" & ar_expd_DataColsID(x)
		REM Next
		REM Exit function 
	REM '/temp

'==> Collecting the data based on series ID	
'Dim ext_DataSeries_Start
'Dim ext_DataSeries 
Dim ar_extData()
j= 0 
	'ext_DataSeries_Start = "TD100_A_MR001"   'Input paramete for this function "TD100_A_MR001"   
	ext_DataSeries =  mid(ext_DataSeries_Start, 1, Instr(1,ext_DataSeries_Start, "_MR")+2) ' = TD100_A_MR
	for ri = 1 to row
		if instr((excelSheet_expValues.cells(ri,1).value), ext_DataSeries) <> 0  then 
			'msgbox ri & "@@-->" & Trim(excelSheet_expValues.cells(ri,1).value)
			for i = 0 to Ubound(ar_expd_DataColsID)-1
				'msgbox "Cell valie :" & Trim(excelSheet_expValues.cells(ri,ar_expd_DataColsID(i)).value)
				tempRow_data = tempRow_data & "|" & Trim(excelSheet_expValues.cells(ri,ar_expd_DataColsID(i)).value)
			next
				j = j+1
				ReDim preserve ar_extData(j)
				ar_extData(j-1) = tempRow_data
				'msgbox "-->" & ar_extData(j-1)
				tempRow_data = ""
		End if

	Next
		'==> Close and Kill the objects of excel after use  
		excelobject.ActiveWorkbook.Close
		excelobject.Application.Quit
	 
		Set excelSheet_expValues =nothing
		Set excelSheet_expValues = nothing
		
		'==> Function return values
		
		if j>0 then 
				read_ExpectedData01_fromExcel = ar_extData
		Else
				read_ExpectedData01_fromExcel = 1  'no data available hence returning 1 as failure .
		End if 		


End Function 
'=========================

 '----------------------------------------------------------------------------------------------------------------
 'Name: Function specific_assignment_expData
 'Parameters : (ar_expectedData, req_asgnmt)
 ' ar_expectedData : Type array , this contains all records (REPLENS,FREPLENS,SDOCKS,OTHERS) from Data sheet.
 'req_asgnmt : Type string, you can pass the below values...
 '		REPLENS, SDOCK, FREPLNES ....for individuals: "REP" , "FRE", "SDK"...
 ' 		For all replenas and Freplens and sdocks  ... : "REP_FRE_SDK"
 '		Other than replens, freplens and sdocks  ...: "OTHERS"
 'Output Returns Value: on data availability --> array with relavent data (or) on no data --> 1
 '----------------------------------------------------------------------------------------------------------------
 Private Function specific_assignment_expData(ar_expectedData, req_asgnmt)
 'msgbox "inside specific_assignment_expData"
 	'All posible types are  : REP, FRE,SDK,OOS,DIS,AWL,SUB,MIN
	' moving 
'if req_asgnmt = "OOS" or req_asgnmt = "DIS" or req_asgnmt = "AWL" or req_asgnmt = "SUB" or req_asgnmt = "MIN" then 
'	if req_asgnmt <> "REP" or req_asgnmt <> "FRE" or req_asgnmt <> "SDK" then 
'		req_asgnmt =  "OTHERS"
'	End if
Dim actual_req_asgnmt  : actual_req_asgnmt = ""

 if req_asgnmt <> "REP_FRE_SDK"  and req_asgnmt <> "OTHERS" then 
	actual_req_asgnmt = trim(req_asgnmt)
	req_asgnmt = "INDIVIDUALS"
 End if 
	
	Dim ar_req_asgnmt()
	j = 0
	
	for i =0 to ubound(ar_expectedData)-1

	'msgbox ar_expectedData(i)
		ar_datafields = split(ar_expectedData(i),"|")
			'msgbox "****" & ar_datafields(7)
	Select Case req_asgnmt
		Case "REP_FRE_SDK"
			if ar_datafields(7) = "REP" or ar_datafields(7) = "FRE" or ar_datafields(7) = "SDK" then 
					j = j+1
					ReDim preserve ar_req_asgnmt(j)
					ar_req_asgnmt(j-1) = ar_expectedData(i)
			End if
			
		Case	"INDIVIDUALS"	
			if trim(ar_datafields(7)) = actual_req_asgnmt then 
					j = j+1
					ReDim preserve ar_req_asgnmt(j)
					ar_req_asgnmt(j-1) = ar_expectedData(i)
					
			End if
		REM Case	"FRE"	
			REM if req_asgnmt = "FRE"  and ar_datafields(7) = "FRE" then 
					REM j = j+1
					REM ReDim preserve ar_req_asgnmt(j)
					REM ar_req_asgnmt(j-1) = ar_expectedData(i)
			REM End if 
		REM Case "SDK"
			REM if req_asgnmt = "SDK" and ar_datafields(7) = "SDK" then 
					REM j = j+1
					REM ReDim preserve ar_req_asgnmt(j)
					REM ar_req_asgnmt(j-1) = ar_expectedData(i)
			REM End if
		Case "OTHERS"
			if ar_datafields(7) <> "REP" and ar_datafields(7) <> "FRE" and ar_datafields(7) <> "SDK" then 
					j = j+1
					ReDim preserve ar_req_asgnmt(j)
					ar_req_asgnmt(j-1) = ar_expectedData(i)
			End if
			
		End Select
		
	Next

	
		'for u= 0 to ubound(ar_req_asgnmt)-1
		'	msgbox "##"& ar_req_asgnmt(u)
		'next
		if j>0 then 
			specific_assignment_expData =  ar_req_asgnmt	' data available and stored in this array 
		Else
			specific_assignment_expData = 1   ' no data available with search criteria... hence returning 1 as failure .
		End if 
		
End Function 



		
		
	Private Function common_equalCheck(compareValues)
		dim arr
		arr = split (compareValues,"|")
		If arr(0) = arr(1) Then
			common_equalCheck = 0    
		else
			common_equalCheck = 1
		end if
	End Function
	
	private Function TE_GetText_FromScreen(ByRef objScreen,ByVal strValueID1)
        if objScreen.exist then 
            arrTBOH = split(strValueID1,"_")
            
            TE_GetText_FromScreen = objScreen.GetText(arrTBOH(0),arrTBOH(1),arrTBOH(0),arrTBOH(2))
        Else
		
            TE_GetText_FromScreen = ""  
        End if 
    End Function
		
	
	Private Function PreZeros_Format(strNumber, strZeros)
	
	
		len_strNumber = len(strNumber)
		len_strZeros = len(strZeros)
		

		if len_strNumber < len_strZeros then
			lenDiff = len_strZeros - len_strNumber  
			
			remZeros = String(lenDiff,"0")
			retValFormat = remZeros & strNumber
			'Msgbox retValFormat
			PreZeros_Format =  retValFormat		
		Else
			PreZeros_Format = strNumber
		End if 
	End Function
	


'===============================
Function onScreen_SEL_RSV_eqlTo_TOTBOH(onScr_SEL, onScr_RSV,onScr_TOTBOH)
                '= Trim(onScr_RSV)
                onScr_SEL = Trim(onScr_SEL)
                onScr_RSV =  Trim(onScr_RSV)
                onScr_TOTBOH =  Trim(onScr_TOTBOH)
                               
                if len(onScr_SEL) =  0 or onScr_RSV = 0 or len(onScr_TOTBOH)  = 0 then 
                                'msgbox "few are empty string variables"
                                Reporter.ReportEvent micWarning, "On Screen Expected & Actual Values", "Non numericvalues captured from screen "
								onScreen_SEL_RSV_eqlTo_TOTBOH =  -1
								
                                
                Else
                                
                                total_ofSEL_RSV = cint(onScr_SEL) + Cint(onScr_RSV) 
                                if total_ofSEL_RSV  = Cint(onScr_TOTBOH) then
                                                REM msgbox "Equal" &  total_ofSEL_RSV & chr(13) & onScr_TOTBOH
												Desktop.CaptureBitmap "ScreenShot.png",True
												REM Reporter.ReportEvent micPass, "On Screen Expected & Actual Values", "FREP TOT BOH  " & total_ofSEL_RSV & "| " & onScr_TOTBOH  &  " are equal","ScreenShot.png"
												Reporter.ReportEvent micPass, "On Screen Expected & Actual Values", "SEL BOH " & onScr_SEL & " + RES BOH " & onScr_RSV  & " equal to TOT BOH" & onScr_TOTBOH,"ScreenShot.png"
                                                onScreen_SEL_RSV_eqlTo_TOTBOH  = 0
                                Else
                                                msgbox "Not Equal" &  total_ofSEL_RSV & chr(13) & onScr_TOTBOH
												Desktop.CaptureBitmap "ScreenShot.png",True
												REM Reporter.ReportEvent micWarning, "On Screen Expected & Actual Values", "FREP TOT BOH  " & total_ofSEL_RSV & "| " & onScr_TOTBOH  & " are not equal","ScreenShot.png"
												Reporter.ReportEvent micWarning, "On Screen Expected & Actual Values", "SEL BOH " & onScr_SEL & " + RES BOH " & onScr_RSV  & " NOT equal to TOT BOH" & onScr_TOTBOH,"ScreenShot.png"
                                                onScreen_SEL_RSV_eqlTo_TOTBOH =  1
                                End if 
                End if 
                
End Function

'==================================

Public Function TE_PRQA_Validations(byVal DataExl_Path,byVal Data_ExlTab_Series)
		Dim flag  : flag = 0
		
		dim f_cnt  : f_cnt = 0
		
		dim  Actual_value_array()
		
		'DataExl_Path = "D:\Automation_Suite_ST\W_Rel\NonASN\GI_TEST_DATA_NON_ASN.xls"
		'Data_ExlTab_Series= "BOMB_ExpValues1|TD100_A_MR001"
		ar_strData_ExlTab_Series =  split(Data_ExlTab_Series,"|")
		
		Expectedvalue = read_ExpectedData01_fromExcel(DataExl_Path,ar_strData_ExlTab_Series(0),ar_strData_ExlTab_Series(1))
		

		if isarray(Expectedvalue) = False  then 
			Reporter.ReportEvent micWarning,"PRQA Expected data"," is not available in excelsheet, hence exit from PRQA validations!"  
			TE_PRQA_Validations = Array (1, "RMMT Validations", "Validations failed")
			set objdummyScreen = TeWindow("TeWindow").TeScreen("DummyScreen")
			call TE_ReturnToMain(objdummyScreen)
			Exit Function 
		End if 
			
		For i = 0 to ubound(Expectedvalue)-1
			
			redim  Actual_value_array(2) 
			
			
			expextedEachProdDtlsArr = split(Expectedvalue(i),"|")
			
			
			Set objCurrent = getQTPObject("Field","TeWindow","PRQA screen","PRODUCT") 
			call TE_Field_Set(objCurrent,expextedEachProdDtlsArr(2))
			
			Set objCurrent = getQTPObject("Screen","TeWindow","PRQA screen","PRQA screen") 
			TE_SendKey objCurrent,"ENTER" 
			
			'Set objCurrent = getQTPObject("Screen","TeWindow","PRQA screen","PRQA screen") 
			last_row =TE_GetText_FromScreen(objCurrent,"24_02_80")
			' add log
			
			Desktop.CaptureBitmap "ScreenShot.png",True
					   Reporter.ReportEvent micPass,"Expected Product", expextedEachProdDtlsArr(2) & " " & "entered succesfully" ,"ScreenShot.png"
			
			if instr(1,last_row,"INQUIRY") <> 0 then
			   
			   
			
				Actual_centreBOH = TeWindow("TeWindow").TeScreen("PRQA screen").TeField("CENTRE TOTAL BOH").GetROProperty("attached text")
			      
				 if instr(1,Actual_centreBOH,"(protected)") <> 0 then 
					Actual_centreBOH = mid(Actual_centreBOH,1,Len(Actual_centreBOH)-11)
					Actual_centreBOH = PreZeros_Format(Actual_centreBOH, "000000")
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micPass,"Actual Data ", expextedEachProdDtlsArr(2)& " Product's CENTRE TOTAL BOH = "	& Actual_centreBOH & " from PRQA","ScreenShot.png" 
				 End if
				 
			  
				Actual_selBOH = TeWindow("TeWindow").TeScreen("PRQA screen").TeField("SELECTION BOH").GetROProperty("attached text")
			  
			     if instr(1,Actual_selBOH,"(protected)") <> 0  and expextedEachProdDtlsArr(7) <> "FRE" then  
					Actual_selBOH = mid(Actual_selBOH,1,Len(Actual_selBOH)-11)
					Actual_selBOH = PreZeros_Format(Actual_selBOH, "000000")
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micPass,"Actual Data ", expextedEachProdDtlsArr(2)& " Product's SELECTION BOH = "	& Actual_selBOH & " from PRQA","ScreenShot.png" 
			     End if 
				 
				Actual_resBOH = TeWindow("TeWindow").TeScreen("PRQA screen").TeField("RESERVE BOH").GetROProperty("attached text") 
			 
			    if instr(1,Actual_resBOH,"(protected)") <> 0 and expextedEachProdDtlsArr(7) <> "FRE" then 
					Actual_resBOH = mid(Actual_resBOH,1,Len(Actual_resBOH)-11)
					Actual_resBOH = PreZeros_Format(Actual_resBOH, "000000")					
					Desktop.CaptureBitmap "ScreenShot.png",True
					Reporter.ReportEvent micPass,"Actual Data ", expextedEachProdDtlsArr(2)& " Product's RESERVE BOH = "	& Actual_resBOH & " from PRQA","ScreenShot.png" 
	
			    End if 
				
				if expextedEachProdDtlsArr(7) = "FRE" then
					'msgbox "yes its FRE"
					REM Actual_centreBOH = mid(Actual_centreBOH,1,Len(Actual_centreBOH)-11)
					REM Actual_centreBOH = PreZeros_Format(Actual_centreBOH, "000000")
					
					Actual_selBOH = mid(Actual_selBOH,1,Len(Actual_selBOH)-11)
					Actual_selBOH = PreZeros_Format(Actual_selBOH, "000000")
					
					Actual_resBOH = mid(Actual_resBOH,1,Len(Actual_resBOH)-11)
					Actual_resBOH = PreZeros_Format(Actual_resBOH, "000000")
					
					'msgbox Actual_selBOH & "-----" & Actual_resBOH
				end if	
				'msgbox Trim(expextedEachProdDtlsArr(7)) 
				expextedEachProdDtlsArr(11) = PreZeros_Format(expextedEachProdDtlsArr(11), "000000")
				expextedEachProdDtlsArr(12) = PreZeros_Format(expextedEachProdDtlsArr(12), "000000")
				expextedEachProdDtlsArr(13) = PreZeros_Format(expextedEachProdDtlsArr(13), "000000")
				 REM Actual_value_array(0) = Actual_centreBOH & "|" & expextedEachProdDtlsArr(11) & "|" & " " & "|Central BOH values"
				 REM Actual_value_array(1) = Actual_selBOH & "|" & expextedEachProdDtlsArr(12) & "|" & " " & "|Selection BOH values"
				 REM Actual_value_array(2) = Actual_resBOH & "|" & expextedEachProdDtlsArr(13)  & "|" & " " &  "|Reserve BOH values"
				 
				 Actual_value_array(0) = expextedEachProdDtlsArr(11) & "|" & Actual_centreBOH  & "|" & " " & "|Central BOH values"
				 Actual_value_array(1) = expextedEachProdDtlsArr(12) & "|" & Actual_selBOH  & "|" & " " & "|Selection BOH values"
				 Actual_value_array(2) = expextedEachProdDtlsArr(13) & "|" & Actual_resBOH  & "|" & " " &  "|Reserve BOH values"
						
				For j = 0 to ubound(Actual_value_array)
	                var = common_equalCheck(Actual_value_array(j))	
					
			          
					If var = 0 then
						 if expextedEachProdDtlsArr(7) = "FRE" then
					   
							dim total 
							total = onScreen_SEL_RSV_eqlTo_TOTBOH(Actual_selBOH,Actual_resBOH,Actual_centreBOH)
							'msgbox "total-->" & total
					        if total = 0 then 
							      Desktop.CaptureBitmap "ScreenShot.png",True
								  Reporter.ReportEvent micPass,"Validation of OnScreen TOT,SEL,RSV BOHs", expextedEachProdDtlsArr(2)& " Product's RSV " & Actual_resBOH & " + SEL " & Actual_selBOH &  " equals to  " & Actual_centreBOH,"ScreenShot.png"
								  
							   ' msgbox "done"
								flag = 1
								exit for
							else 
							Desktop.CaptureBitmap "ScreenShot.png",True
								  Reporter.ReportEvent micFail,"Validation of OnScreen TOT,SEL,RSV BOHs", expextedEachProdDtlsArr(2)& " Product's RSV " & Actual_resBOH & " + SEL " & Actual_selBOH &  " equals to  " & Actual_centreBOH,"ScreenShot.png"
								flag = 0
								exit for
					        end if
						'end if	
						else
							flag = 1
						end if
						
					   Desktop.CaptureBitmap "ScreenShot.png",True
					   Reporter.ReportEvent micPass,"Expected & Actual equal",  Actual_value_array(j) & " " &  "are equal" ,"ScreenShot.png" 

					   
					else
						flag = 0
						f_cnt = 1
						Desktop.CaptureBitmap "ScreenShot.png",True
						Reporter.ReportEvent micWarning,"Expected & Actual not equal", Actual_value_array(j) & " " & "not equal","ScreenShot.png"
						'TE_PRQA_Validations = Array (1,"actual and expected are not equal  ",Actual_value_array(j) & "unsuccessful,all products PRQA validation is not completed.")		
						'exit for      ' BOH level
					end if  				 
				next	
		
			else 
				
				flag = 0
				f_cnt = 1
				Desktop.CaptureBitmap "ScreenShot.png",True
				Reporter.ReportEvent micWarning,"Product Not available"  , expextedEachProdDtlsArr(2) & " product not find ","ScreenShot.png"
				
			end if
			
			'if flag = 0 then 
			'	Exit for  ' for any failure
			'End if 
			Call captureshot ("TeWindow") 	
		next	
		
		if flag = 1 then 
		      if f_cnt = 0 then
		       
				TE_PRQA_Validations = Array (0, "PRQA Valiation Successfully Completed" ,  "Successfull,  PRQA validation  for all the product is completed.")
			  else
			  TE_PRQA_Validations = Array (1, "PRQA Valiation unsuccessfully Completed" ,  "Unsuccessful,PRQA validation is Failed")
			  
			  
			  end if
		else
		       TE_PRQA_Validations = Array (1, "PRQA Valiation unsuccessfully Completed" ,  "Unsuccessful,PRQA validation is Failed")
		       
					
		      end if
			   Set objCurrent = getQTPObject("Screen","TeWindow","PRQA screen","PRQA screen") 
			   
               call TE_ReturnToMain(objCurrent)

		End Function


Public function TE_Screen_Bomb_IR06_Report (ByRef objScreen)
If  objScreen.Exist(4) Then
    Dim strText, i,  arrTo, strText1, n,strText3, j,k,dol1,pal1,hal1,cag1,d1,p1,h1,c1,lastUOD,lastValue,obj1
	set obj1 = TeWindow("emulator status:=Ready.*").TeScreen("label:=.*")
    obj1.sync
    TE_SendKey obj1, "PGDN"
	obj1.sync
	strpart1 = Trim(obj1.GetText (8,02,8,06))
	strval1 = Trim(obj1.GetText (8,71,8,71))
	strpart2 = Trim(obj1.GetText (9,02,9,06))
	strval2 = Trim(obj1.GetText (9,71,9,71))
	strpart3 = Trim(obj1.GetText (10,02,10,06))
	strval3 = Trim(obj1.GetText (10,71,10,71))
	strpart4 = Trim(obj1.GetText (11,02,11,06))
	strval4 = Trim(obj1.GetText (11,71,11,71))
		If strpart1 = "HALF" Then
			hal1 = strval1
		elseIf strpart1 = "PALLE" Then
			pal1 = strval1
		elseif strpart1 = "CAGE" Then
			cag1 = strval1
		else
			dol1 = strval1
		End If
		If strpart2 = "HALF" Then
			hal1 = strval2
		elseIf strpart2 = "PALLE" Then
			pal1 = strval2
		elseif strpart2 = "CAGE" Then
			cag1 = strval2
		else
			dol1 = strval2
		End If
		If strpart3 = "HALF" Then
			hal1 = strval3
		elseIf strpart3 = "PALLE" Then
			pal3 = strval3
		elseif strpart3 = "CAGE" Then
			cag1 = strval3
		else
			dol1 = strval3
		End If
		If strpart4 = "HALF" Then
			hal1 = strval4
		elseIf strpart4 = "PALLE" Then
			pal1 = strval4
		elseif strpart4 = "CAGE" Then
			cag1 = strval4
		else
			dol1 = strval4
		End If
	k = 3
	TE_SendKey obj1, "PGDN"
	obj1.sync
	strText = objScreen.GetText(1,1,24,80)
	If instr(1,strText,"IR06-02",1) Then
	Do
			strText = objScreen.GetText(1,1,24,80)
				For i = k to 24
					j = 1
					strText1 = objScreen.GetText(i,1,i,80)
					If instr(1,strText1,"DOLLIE",1) Then
						  d1 = 0
						  strText2 = objScreen.GetText(i,25,i,32)
							Do					
    								If i < 24 Then
										d1 = d1 +1
										strText2 = objScreen.GetText(i,25,i,32)
										m = i + 1
										strText7 = objScreen.GetText(m,25,m,32)
										If trim(strText7) = "" Then
											i = i + 1
										End If
									elseif i = 24 Then
										strText8 = objScreen.GetText(i,25,i,32)
										If trim(strText8) = "" or trim(strText8) <> ""  Then
											d1 = d1 +1
											i = i + 1
                                        End If
									else
										lastUOD = "DOLLIE"
										lastValue = d1
										Exit for
									End If
							Loop until trim(strText7) <> ""
							lastUOD = "DOLLIE"
							lastValue = d1
							If d1 > int(dol1) Then
    							TE_Screen_Bomb_IR06_Report = Array (1, "IR06" ,  "Report is not in sync with settings.")
    						Exit function
							End If
					end if
					If instr(1,strText1,"HALF",1) Then
						  h1 = 0
						  strText2 = objScreen.GetText(i,25,i,32)
							Do 							
                                    If i < 24 Then
										h1 = h1 +1
										strText2 = objScreen.GetText(i,25,i,32)
										m = i + 1
										strText7 = objScreen.GetText(m,25,m,32)
										If trim(strText7) = "" Then
											i = i + 1
										end if
									elseif i = 24 Then
										strText8 = objScreen.GetText(i,25,i,32)
										If trim(strText8) = "" or trim(strText8) <> ""  Then
											h1 = h1 +1
											i = i + 1
                                        End If
									else
										lastUOD = "HALF"
										lastValue = h1
										Exit for
									End If
							Loop until trim(strText7) <> ""
							lastUOD = "HALF"
							lastValue = h1
							If h1 > int(hal1) Then
    							TE_Screen_Bomb_IR06_Report = Array (1,  "IR06"  ,  "Report is not in sync with settings.")
    						Exit function
							End If
					end if
					If instr(1,strText1,"PALLET",1) Then
						  p1 = 0
						  strText2 = objScreen.GetText(i,25,i,32)
							Do 					
    								If i < 24 Then
										p1 = p1 +1
										strText2 = objScreen.GetText(i,25,i,32)
										m = i + 1
										strText7 = objScreen.GetText(m,25,m,32)
										If trim(strText7) = "" Then
											i = i + 1
										end if
									elseif i = 24 Then
										strText8 = objScreen.GetText(i,25,i,32)
										If trim(strText8) = "" or trim(strText8) <> ""  Then
											p1 = p1 +1
											i = i + 1
                                        End If
									else
										lastUOD = "PALLET"
										lastValue = p1
										Exit for
									End If
							Loop until trim(strText7) <> ""
							lastUOD = "PALLET"
							lastValue = p1
							If p1 > int(pal1) Then
    							TE_Screen_Bomb_IR06_Report = Array (1,  "IR06"  ,  "Report is not in sync with settings.")
    						Exit function
							End If
					end if
					If instr(1,strText1,"CAGE",1) Then
						  c1 = 0
						  strText2 = objScreen.GetText(i,25,i,32)
							Do 
    								If i < 24 Then
										c1 = c1 +1
										strText2 = objScreen.GetText(i,25,i,32)
										m = i + 1
										strText7 = objScreen.GetText(m,25,m,32)
										If trim(strText7) = "" Then
											i = i + 1
										End If
									elseif i = 24 Then
										strText8 = objScreen.GetText(i,25,i,32)
										If trim(strText8) = "" or trim(strText8) <> "" Then
											c1 = c1 +1
											i = i + 1
                                        End If
									else
										lastUOD = "CAGE"
										lastValue = c1
										Exit for
									End If
							Loop until trim(strText7) <> ""
							lastUOD = "CAGE"
							lastValue = c1
							If c1 > int(cag1) Then
    							TE_Screen_Bomb_IR06_Report = Array (1,  "IR06"  ,  "Report is not in sync with settings.")
    						Exit function
							End If
					end if
			next
			i = 3
			TE_SendKey objScreen,"F8" 
			strText4 = objScreen.GetText(i,03,i,08)
			strText5 = objScreen.GetText(i,25,i,32)
			If (trim(strText4) = "CAGE" or trim(strText4) = "DOLLIE" or trim(strText4) = "PALLET" or trim(strText4) = "HALF") and trim(strText5) = "" Then
				strText6 = objScreen.GetText(i,25,i,32)
				If trim(strText6) = "" Then
					Do 
						lastValue = lastValue + 1
                        If trim(strText6) = "" Then
							i = i + 1
						End If
						strText6 = objScreen.GetText(i,25,i,32)
					 Loop until trim(strText6) <> ""
				End If
				If lastUOD = "DOLLIE" Then
					If lastValue > int(dol1) Then
						TE_Screen_Bomb_IR06_Report = Array (1, "IR06"  ,  "Report is not in sync with settings.")
						Exit function
					else
						TE_Screen_Bomb_IR06_Report = Array (0, "IR06"  ,  "Report is in sync with settings.")
					End If
					k = i
				End If
				If lastUOD = "HALF" Then
					If lastValue > int(hal1) Then
    					TE_Screen_Bomb_IR06_Report = Array (1,  "IR06"  ,  "Report is not in sync with settings.")
    					Exit function
					else
						TE_Screen_Bomb_IR06_Report = Array (0,  "IR06"  ,  "Report is in sync with settings.")
					End If
					k = i
				End If
				If lastUOD = "PALLET" Then
					If lastValue > int(pal1) Then
    					TE_Screen_Bomb_IR06_Report = Array (1, "IR06"  ,  "Report is not in sync with settings.")
    					Exit function
					else
						TE_Screen_Bomb_IR06_Report = Array (0,  "IR06"  ,  "Report is in sync with settings.")
					End If
					k = i
				End If
				If lastUOD = "CAGE" Then
					If lastValue > int(cag1) Then
    					TE_Screen_Bomb_IR06_Report = Array (1, "IR06"  ,  "Report is not in sync with settings.")
    					Exit function
					else
						TE_Screen_Bomb_IR06_Report = Array (0, "IR06"  ,  "Report is in sync with settings.")
					End If
					k = i
				End If
			else
				k = i
				TE_Screen_Bomb_IR06_Report = Array (0,  "IR06"  ,  "Report is in sync with settings.")
			End If
	loop until instr(1,strText,"BOTTOM OF DATA",1)
	else
		TE_Screen_Bomb_IR06_Report = Array (1,  "IR06" ,  "Page object not correct.")
	End If
End if
End function



Public function TE_Screen_Check_P_TPN_LOC(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
		If  objScreen.Exist(4) Then
           Dim i, presskey
            i =3
            Do While i<21
              If strcomp (cstr(trim(objScreen.GetText(i,44,i,52))),cstr (strValueID1),1) = 0 Then
                If trim(objScreen.GetText(i,53,i,53)) = "P" and trim(objScreen.GetText(i,61,i,63)) = "TPN" and trim(objScreen.GetText(i,73,i,75)) = "LOC" Then
               TE_Screen_Check_P_TPN_LOC = Array (0, "Check for existance of P, TPN and LOC",  "Successfully verified.")
                  Else
                TE_Screen_Check_P_TPN_LOC = Array (1, "Check for existance of P, TPN and LOC",  "Not Found")
              End if 

                Exit Do
                  End If
                 i=i+1
                    If i =20 Then
                    'Exit DO
                      presskey = "F5"
                    call TE_SendKey (objScreen,presskey)
                 i=3
              End If
           Loop
		Else
		TE_Screen_Check_P_TPN_LOC = Array (1, "Check for existance of P, TPN and LOC",  "Page Object Not Found")
		End If

End Function





Public function TE_Screen_checkBombReport (ByRef objScreen, ByVal strValueID1,ByVal strValueID2)
If  objScreen.Exist(4) Then
    Dim strText, i,  arrTo, strText1, n,strText3, j,k,lastUOD,lastValue
	arrTo = split (strValueID1,"_")
	k = 3
	strText = objScreen.GetText(1,1,24,80)
	If instr(1,strText,"IR06-02",1) Then
	Do
				strText = objScreen.GetText(1,1,24,80)
				For i = k to 24
					n = 0
					strText2 = objScreen.GetText(i,1,i,80)
					If instr(1,strText2,strValueID1,1) Then
					Do
                            If i < 24 Then
								n = n +1
								strText2 = objScreen.GetText(i,25,i,32)
								m = i + 1
								strText7 = objScreen.GetText(m,25,m,32)
								If trim(strText7) = "" Then
									i = i + 1
								End If
							elseif i = 24 Then
								strText8 = objScreen.GetText(i,25,i,32)
								If trim(strText8) = "" or trim(strText8) <> "" Then
									n = n +1
									i = i + 1
                                 End If
							else
								lastUOD = strValueID1
								lastValue = n
								Exit for
							End If
                        Loop until trim(strText7) <> ""
                        lastUOD = strValueID1
						lastValue = n
						If n > int(strValueID2) Then
							TE_Screen_checkBombReport = Array (1, "Check for value of " &strValueID1 ,  "Report is not in sync with settings.")
							Exit function
						End If
					End if
				next
				i = 3
				TE_SendKey objScreen,"F8"
				strText4 = objScreen.GetText(i,03,i,08)
				strText5 = objScreen.GetText(i,25,i,32)
				If trim(strText4) = strValueID1 and trim(strText5) = "" Then
					strText6 = objScreen.GetText(i,25,i,32)
					If trim(strText6) = "" Then
						Do 
							lastValue = lastValue + 1
							If trim(strText6) = "" Then
								i = i + 1
							End If
							strText6 = objScreen.GetText(i,25,i,32)
						Loop until trim(strText6) <> ""
					End If
					If lastUOD = strValueID1 Then
						If lastValue > strValueID2 Then
							TE_Screen_checkBombReport = Array (1, "IR06"  ,  "Report is not in sync with settings.")
							Exit function
						else
							TE_Screen_checkBombReport = Array (0, "IR06"  ,  "Report is in sync with settings.")
						End If
						k = i
					End If 
				else
					k = i
					TE_Screen_checkBombReport = Array (0,  "IR06"  ,  "Report is in sync with settings.")
				End If
	loop until instr(1,strText,"BOTTOM OF DATA",1)
	else
		TE_Screen_checkBombReport = Array (1, "Check for value of " &strValueID1,  "Page object not correct.")
	End If
End if
End function



Public function TE_Screen_checkjobinspool(ByRef objScreen)
	If  objScreen.Exist(4) Then

		
	Do
	'wait 3
	objScreen.SendKey TE_ENTER
	wait 3
	strtext = trim(objscreen.GetText(7,39,7,47))
	Loop While strtext = "EXECUTION"

	TE_Screen_checkjobinspool = Array (0, "job has run",  "complete")
	else
	TE_Screen_checkjobinspool = Array (1, "page object not found",  "unsuccesful")
	End if 
End Function


Public function TE_Screen_CheckPOMIMX(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then
           Dim i, presskey
            i =3
            Do While i<21
              If strcomp (cstr(trim(objScreen.GetText(i,60,i,67))),cstr (strValueID1),1) = 0 Then
                
               TE_Screen_CheckPOMIMX = Array (0, "Check for existance of PO MIMX screen for report",  "Successfully verified.")
			    Exit Do
                  Else
                TE_Screen_CheckPOMIMX = Array (1, "Check for existance of PO MIMX screen for report",  "Not Found")
              End if 

      
                   i=i+1
                    If i =20 Then
                    'Exit DO
                      presskey = "F5"
                    call TE_SendKey (objScreen,presskey)
                 i=3
              End If
           Loop
		Else
	TE_Screen_CheckPOMIMX = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
	End If

End Function


Public function TE_Screen_CheckPOMIMX_row(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then
	Dim arrTo, arrFrom, i, presskey
	 i =3
			arrTo = split (strValueID2,"_")
'			arrFrom = split (strValueID2,"_")
                 Do While i<21
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               TE_Screen_CheckPOMIMX_row = Array (0, "Check for existance of PO MIMX screen for report",  "Successfully verified.")
			    Exit Do
                  Else
                TE_Screen_CheckPOMIMX_row = Array (1, "Check for existance of PO MIMX screen for report",  "Not Found")
              End if 
			i=i+1
                    If i =20 Then
						If (objScreen.GetText(22,76,22,80) = "/MORE") Then
						'Exit DO
						  presskey = "F5"
						  call TE_SendKey (objScreen,presskey)
						  else 

						  TE_Screen_CheckPOMIMX_row = Array (1, "Check for existance of MIMX screen for report",  "Job report Not Found")

						  Exit function
						
						End If
				 i=3
              End If
           Loop
	Else
	TE_Screen_CheckPOMIMX_row = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
	End If

End Function

Private Function TE_Screen_CheckStringNotPresent (ByRef objScreen, ByVal strValueID1)
		If  objScreen.Exist(4) Then
			Dim a			
			a=objScreen.GetText(1,1,24,80)
			If instr(1, a , strValueID1 , 1) Then
				TE_Screen_CheckStringNotPresent = Array (1, "Search from screen",  " '"&strValueID1 &"' Found")
			Else
				 TE_Screen_CheckStringNotPresent = Array (0, "Search from screen",  " '"&strValueID1 &"' Not Found.")
			End If

			
            		
		Else
			TE_Screen_CheckStringNotPresent = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function


Private Function TE_Screen_CheckStringPresent (ByRef objScreen, ByVal strValueID1)
		If  objScreen.Exist(4) Then
			Dim a, b
			b= trim(strValueID1)			
			a=objScreen.GetText(1,1,24,80)
			If instr(1, a , b , 1) Then
				TE_Screen_CheckStringPresent = Array (0, "GetText from screen",  " '"&strValueID1 &"'  Sring Found")
			Else
				 TE_Screen_CheckStringPresent = Array (1, "GetText from screen",  " '"&strValueID1 &"'  String Not Found.")
			End If

			
            	
		Else
			TE_Screen_CheckStringPresent = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function



Public function TE_Screen_checkTextandPressKey(ByRef objScreen, ByVal strValue1, ByVal strValue2, ByVal strValue3)
                
                Dim strtext
                
                If objScreen.Exist(5) Then
                
                                strtext = objScreen.GetText (strValue2,1,strValue2,80)
                                If instr(1,strtext,strValue1,1) > 0 Then
                                                
                                                TE_SendKey objScreen,strValue3
                                                TE_Screen_checkTextandPressKey = Array (0, "Text found and key pressed",  "complete")
                                                
                                                else
                                                TE_Screen_checkTextandPressKey = Array (0, "Text not found",  "complete")
                                                
                            
                                End If
                                
                Else
                
                              TE_Screen_checkTextandPressKey = Array (1, "Page Object not found",  "unsuccesful")
                                
                End If

End Function

Private Function TE_Screen_CompareForText (ByRef objScreen , ByVal strValue1, ByVal strValue2, ByVal strValue3)
If objScreen.exist(4) Then
TE_Screen_CompareForText = Array (1, "Field not found ",  strValue3)
Dim strtext1

                arrTo = split(strValue2 , "_")
                
                If strValue1 = arrTo(0) Then
                strtext1 = arrTo(1)
                Else
                strtext1 = arrTo(0)
                End if
                
                Call saveRunValue (strValue3,strtext1)

TE_Screen_CompareForText = Array (0, "Field Changed to ",  strValue3)               
                End If
End function



Public function TE_Screen_completework(ByRef objScreen)
   	If  objScreen.Exist(4) Then
	   Dim i, j, k, num, presskey
	   i = 0 
	   Do while (trim(objScreen.GetText (24,42,24,75)) = "PRESS PF 2 FOR NEXT SCREEN OF WORK")

	   				i= i +1
				For j = 7 to 21
					If  trim(objScreen.GetText (j,5,j,7)) <> "" Then
					
  				objScreen.SetText j, 2, "c"

				End If

				Next
						TE_SendKey objScreen,"ENTER"
					
						wait(2)

				if trim(objScreen.GetText (24,43,24,52)) = "PRESS PF 4" then
						TE_SendKey objScreen,"F4"
					else

						TE_SendKey objScreen,"ENTER"
				end if
                		 presskey = "F2"
                    call TE_SendKey (objScreen,presskey)
                					  Loop 

									  For j = 7 to 21
					If  trim(objScreen.GetText (j,5,j,7)) <> "" Then
					
  				objScreen.SetText j, 2, "c"

				End If

				Next


									  
					TE_Screen_completework = Array (0, "The number of the specified object have been counted",  "Successfully verified.")

				
				Else
						TE_Screen_completework = Array (2, "Check for existance of value",  "Page Object Not Found")
	end if


End Function




Public function TE_Screen_CONFIRMOVERWRITE_BO(ByRef objScreen) 
     If  objScreen.Exist(4) Then
		 

			If (trim(objScreen.GetText (1,37,1,53)) = "CONFIRM OVERWRITE") then
				
				
				'TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"F3"
				TE_SendKey objScreen,"F3"
				
				TE_Screen_CONFIRMOVERWRITE_BO = Array (0, "File extracted sec time is complete",  "Successfully")
				
				else 

				'TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"F3"
				TE_SendKey objScreen,"F3"
				TE_Screen_CONFIRMOVERWRITE_BO = Array (0, "File extracted first time is complete",  "Successfully")
			end if 
	else
	
	TE_Screen_CONFIRMOVERWRITE_BO = Array (1, "Page not found",  "Page not found")
	end if 


End Function


Public function TE_Screen_CONFIRMOVERWRITE_CO(ByRef objScreen) 
     If  objScreen.Exist(4) Then
		 

			If (trim(objScreen.GetText (1,37,1,53)) = "CONFIRM OVERWRITE") then
				
				
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"F3"
				TE_SendKey objScreen,"F3"
				
				TE_Screen_CONFIRMOVERWRITE_CO = Array (0, "File extracted sec time is complete",  "Successfully")
				
				else 

				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"ENTER"
				TE_SendKey objScreen,"F3"
				TE_SendKey objScreen,"F3"
				TE_Screen_CONFIRMOVERWRITE_CO = Array (0, "File extracted first time is complete",  "Successfully")
			end if 
	else
	
	TE_Screen_CONFIRMOVERWRITE_CO = Array (1, "Page not found",  "Page not found")
	end if 


End function



Public function TE_Screen_countplusset(ByRef objScreen,ByVal strValueID1) 
'   ,ByVal strValueID2,ByVal strValueID3)
   	If  objScreen.Exist(4) Then
	   Dim i, j, k, num, presskey
	   i = 0 
	   Do while (trim(objScreen.GetText (24,42,24,75)) = "PRESS PF 2 FOR NEXT SCREEN OF WORK")

	   				i= i +1
				For j = 7 to 21
'					objScreen.SetText j,53, "i"

				Next
                		 presskey = "F2"
                    call TE_SendKey (objScreen,presskey)
                					  Loop 
									  For j = 7 to 21
			 If strcomp (cstr(trim(objScreen.GetText(j,32,j,37))),cstr(trim(objScreen.GetText(4,74,4,79))),1) = 0 Then
					 K = k + 1

'					objScreen.SetText j,53, "i"

                    		end if

				Next
				num	 = i * 15 + k
				
				Call saveRunValue (strValueID1, num)
				
				If num > 0 Then
					TE_Screen_countplusset = Array (0, "The number of the specified object have been counted",  "Successfully verified.")

				End If
				Else
						TE_Screen_countplusset = Array (1, "Check for existance of value",  "Page Object Not Found")
	End if


End Function



	
Private Function TE_Screen_DateSetText (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)

                   If  objScreen.Exist(4) Then

                                Dim x, y ,z, p , q , r

                                                x = day(now())
                                                If len(x) =1 Then
                                                                x ="0" & x
                                                End If
                                                y = month(now())
                                                If len(y) =1 Then
                                                y ="0" & y
                                                                End If
                                                z = year(now())
                                                z = right(z,2)

                                                p = hour(now())
                                                If len(p) =1 Then
                                                                p ="0" & p
                                                End If

                                                                q = minute(now())
                                                If len(q) =1 Then
                                                                q ="0" & q
                                                End If






'                                                               Dim dd , Todate , Today , Totime
'                                               dd = now()
'                                                               Todate = split(dd," ")
'                                                               Today = split(Todate(0),"/")
'                                                               Totime = split(Todate(1),":")

            If                 strValueID3 = "date" Then
                                                objScreen.SetText trim(strValueID1),trim(strValueID2),x

                                                                TE_Screen_DateSetText = Array (0, "SetText from screen",  "Successfully completed.")

                                                elseif strValueID3 = "month" Then

                                                objScreen.SetText trim(strValueID1),trim(strValueID2),y
                                                TE_Screen_DateSetText = Array (0, "SetText from screen",  "Successfully completed.")

                                                elseif strValueID3 = "year" Then                                                               
                                                objScreen.SetText trim(strValueID1),trim(strValueID2),z

                                                TE_Screen_DateSetText = Array (0, "SetText from screen",  "Successfully completed.")

                                                elseif strValueID3 = "hour" Then
                                                                
                                                objScreen.SetText trim(strValueID1),trim(strValueID2),p
                                                TE_Screen_DateSetText = Array (0, "SetText from screen",  "Successfully completed.")

                                                elseif strValueID3 = "minutes" Then                                                        
                                                objScreen.SetText trim(strValueID1),trim(strValueID2),q
                                                TE_Screen_DateSetText = Array (0, "SetText from screen",  "Successfully completed.")

						elseif strValueID3 = "todate" Then 

						r = x & y & z 
    
                                                  
                                                objScreen.SetText trim(strValueID1),trim(strValueID2), r
                                                TE_Screen_DateSetText = Array (0, "SetText from screen",  "Successfully completed.")

                                                                else          
                                                                TE_Screen_DateSetText = Array (1, "SetText from screen",  "Successfully completed.")

                                                                end if 

       
                else 

                TE_Screen_DateSetText = Array (1, "SetText from screen",  "Page Object Not Found")

                end if



End Function

Public Function TE_Screen_DOQTproductvalidation (ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)

	If  objScreen.Exist(4) Then
		
		If int(trim(strValueID1)) = int(trim(strValueID2))Then
				TE_Screen_DOQTproductvalidation = Array (0, "The Product '" & strValueID1 & "'"  , "and '" & strValueID2 & " are equal"  )
        	elseIf int(trim(strValueID1)) = int(trim(strValueID3))Then
				TE_Screen_DOQTproductvalidation = Array (0, "The Product '" & strValueID1 & "'"  , "and '" & strValueID3 & " are equal"  )
		else	
				TE_Screen_DOQTproductvalidation = Array (1, "the product '" &strValueID1 & "'"  , "is not found" )
		End If
	else
		TE_Screen_DOQTproductvalidation = Array (1, "the Screen object not found","" )
	End if
End Function


Public Function TE_Screen_DOQUproductstatus (ByRef objScreen,ByVal strValueID1)

	If  objScreen.Exist(4) Then
		
		If strValueID1 = "READY TO BOMB" Then
				TE_Screen_DOQUproductstatus = Array (0, "The Product is in", "READY TO BOMB STATUS ")
		elseif strValueID1 = "BOMBED" then
				TE_Screen_DOQUproductstatus = Array (0, "The Product is in ", "BOMBED STATUS")
		else
				TE_Screen_DOQUproductstatus = Array (0, "the product is in " , "STOCK RESERVED STATUS" )
		End If
	End if
End Function



private function TE_Screen_DriverCardIdORUserName (ByRef objScreen,ByVal strValue1,ByVal strValue2)

'If objScreen.Exist(4) Then

'TE_Screen_DriverCardIdORUserName = Array (1, "Object not found",  "Object not found")
    Dim StrText,driver

                StrText = objScreen.GetText(24,1,24,80)
                                If instr(1,StrText, strValue1, 1) Then
                                                
                                                driver=trim(objScreen.GetText(24,68,24,80))
                                                
                                                objScreen.SetText 01,72,driver
                                                objScreen.SetText 02,72,"UPDATE"
                                                TE_SendKey objScreen,"ENTER"
                                                objScreen.SetText 04,46,"1234"
                                                Call saveRunValue (strValue2, driver)
                                                TE_Screen_DriverCardIdORUserName = Array (0, "Set Details",  "Successfully completed")

				Else
					
					driver=trim(objScreen.GetText(01,72,01,80))
					Call saveRunValue (strValue2, driver)
					TE_Screen_DriverCardIdORUserName = Array (0, "message not found",  "message not found")
                                                                                                                                
                                End If
'Else

                                                'TE_Screen_DriverCardIdORUserName = Array (0, "message not found",  "message not found")
'End if     
End function 

Public function TE_Screen_EPOD_N(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
If  objScreen.Exist(4) Then
                Dim arrTo, arrFrom, i, presskey
                i =3
                                                arrTo = split (strValueID2,"_")
'                                               arrFrom = split (strValueID2,"_")
                 Do While i<21
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               	TE_Screen_EPOD_N = Array (1, "Check for existance of MIMX screen for report",  "Job Found.")
                                                    Exit Do
                  Else
                TE_Screen_EPOD_N = Array (0, "Check for existance of  MIMX screen for report",  "Job Not Found")
              End if 
                                                i=i+1
              If i =20 Then
				If (objScreen.GetText(22,76,22,80) = "/MORE") Then
            		'Exit DO
                    presskey = "F5"
                    Call TE_SendKey (objScreen,presskey)
                    Else 

					TE_Screen_EPOD_N = Array (0, "Check for existance of MIMX screen for report",  "Job Not Found")
                 	Exit function
				End If
                                                                i=3
              End If
           Loop
Else
TE_Screen_EPOD_N = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
End If


End Function

Public function TE_Screen_FindString (ByRef objScreen, ByVal strValueID1,ByVal strValueID2)
	If  objScreen.Exist(4) Then
		  Dim strText, i,  arrTo
		  arrTo = split (strValueID1,"_")
		  For i =1 to 24
					strText = objScreen.GetText(i,1,i,80)
					If instr(1,strText,arrTo(0),1) Then

						If instr(1,strText,arrTo(1),1) then


						Call saveRunValue (strValueID2,i )
								TE_Screen_FindString = Array (0, "Check for value of " &strValueID1 ,  "Successfully found.")

								Exit function
								end if 
					end if
		next
		TE_Screen_FindString = Array (1, "Check for value of " &strValueID1 ,  "Value not found.")
	else 
TE_Screen_FindString = Array (1, "Check for value of " &strValueID1,  "Page object not found.")
end if
end function



Public Function TE_Screen_FutureWineOrderstatus (ByRef objScreen,ByVal strValueID1,ByVal strValueID2)

	If  objScreen.Exist(4) Then
		
		If trim(strValueID1) =  trim(strValueID2)Then
				TE_Screen_FutureWineOrderstatus = Array (0, "The TWO ORDERS are of SAME DAY" , "")
		else
				TE_Screen_FutureWineOrderstatus = Array (0, "The TWO ORDERS are of DIFFERENT DAY ", "" )
		End If

		else 
		TE_Screen_FutureWineOrderstatus = Array (1, "The Screen Object not found ", "" )

	End if
End Function


Private Function TE_Screen_getcolbyrow (ByRef objScreen , ByVal strValue1, ByVal strValue2,  ByVal strValue3)
	
	If objScreen.exist(4) Then
	
	Dim text, text2 , pos
	
	text = objScreen.GetText (cint(strValue1), 1 , cint(strValue1), 80)
	
	If instr(1, text , strValue2 , 1 ) Then
		
		pos = instr(1, text , strValue2, 1)
		Call saveRunValue (strValue3,pos)
		TE_Screen_getcolbyrow = Array (0, "Found in column no ",  pos)
		Else
		TE_Screen_getcolbyrow = Array (1, "Text not found ",  text2)
		
		
		
		
		End If
	
		else
	
	TE_Screen_getcolbyrow = Array (1, "Page object not found ",  text2)
	
		
	End If
		
End Function

Private Function TE_Screen_GetLatestRow (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		Dim strRow, intRow, i, k , strtext

		If  objScreen.Exist(4) Then
		strtext = objScreen.GetText (24,1,24,80)
        Do while (trim(objScreen.GetText (22,76,22,80)) = strValueID2) or instr(1,strtext, strValueID2,1)
							TE_SendKey objScreen,"F5"
							'objScreen.SendKey TE_PF5
                            'wait (1)
         Loop 

			For i = 1 to 24
					k = 24 - i
					strRow = objScreen.GetText (k,1,k,80)
						If instr(k,strRow,strValueID1,1) Then
							Call saveRunValue (strValueID3, k)
								
								TE_Screen_GetLatestRow = Array (0, "Get the latest row no",  "Successfully completed.")
								Exit function
							End If
				Next

		TE_Screen_GetLatestRow = Array (1, "Get the latest row no",  "Text Not Found")
        Else
			TE_Screen_GetLatestRow = Array (1, "Get the latest row no",  "Page Object Not Found")
		End If
End Function





Private Function TE_Screen_GetLatestRowspool (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
                                Dim strRow, intRow, i, k, strText, ftext, stext , ttext         

                                If  objScreen.Exist(4) Then
                                                strText = objScreen.GetText (3,62,3,76)
                                                ftext = split(strText , "-")
                                                stext = split(ftext(1) , "(" )
                                                ttext = split(stext(1), ")")



        Do while (trim(stext(0)) <> trim(ttext(0)))
                                                                                                                TE_SendKey objScreen,"F8"
                                                                                                                'objScreen.SendKey TE_PF5
                            'wait (1)
                                                                strText = objScreen.GetText (3,62,3,76)
                                                                ftext = split(strText , "-")
                                                                stext = split(ftext(1) , "(" )
                                                                ttext = split(stext(1), ")")
         Loop 

                                                For i = 1 to 24
                                                                                k = 24 - i
                                                                                strRow = objScreen.GetText (k,1,k,80)
                                                                                                If instr(1,strRow,strValueID1,1) Then
                                                                                                                Call saveRunValue (strValueID2, k)
                                                                                                                                
                                                                                                                                TE_Screen_GetLatestRowspool = Array (0, "Get the latest row no for the report",  "Successfully completed.")
                                                                                                                                Exit function
                                                                                                                End If
                                                                Next

                                                                TE_SendKey objScreen,"F8"

                                                                                For i = 1 to 24
                                                                                k = 24 - i
                                                                                strRow = objScreen.GetText (k,1,k,80)
                                                                                                If instr(1,strRow,strValueID1,1) Then
                                                                                                                Call saveRunValue (strValueID2, k)
                                                                                                                                
                                                                                                                                TE_Screen_GetLatestRowspool = Array (0, "Get the latest row no for the report",  "Successfully completed.")
                                                                                                                                Exit function
                                                                                                                End If
                                                                Next


                                TE_Screen_GetLatestRowspool = Array (1, "Get the latest row no for the report",  "Text Not Found")
        Else
                                                TE_Screen_GetLatestRowspool = Array (1, "Get the latest row no for the report",  "Page Object Not Found")
        End If
End Function




Private Function TE_Screen_GetLatestRowStart (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		Dim strRow, intRow, i, k,strtext , num
		num =0
		

			If  objScreen.Exist(4) Then
			strtext = objScreen.GetText (24,1,24,80)
		        Do while (instr(1,strtext, strValueID2,1))
							TE_SendKey objScreen,"F2"

							strtext = objScreen.GetText (24,1,24,80)
							'objScreen.SendKey TE_PF5
                            'wait (1)

							num = num +1
         Loop 

			For i = 1 to 24
					
					strRow = objScreen.GetText (i,1,i,80)
						If instr(i,strRow,strValueID1,1) Then
							Call saveRunValue (strValueID3, i)
								
								TE_Screen_GetLatestRowStart = Array (0, "Get the latest row no for the report",  "Successfully completed.")
								Exit function
							End If
				Next

				Do while num > 0




                                                                For i =1 to num
                                                                                                TE_SendKey objScreen,"F2"

                                                                Next

                                                                For i = 1 to 24
                                                                                k = 24 - i
                                                                                strRow = objScreen.GetText (k,1,k,80)
                                                                                                If instr(1,strRow,strValueID1,1) Then
                                                                                                                Call saveRunValue (strValueID3, k)
                                                                                                                                
                                                                                                                                TE_Screen_GetLatestRowStart = Array (0, "Get the latest row no for the report",  "Successfully completed.")
                                                                                                                                Exit function
                                                                                                                End If
                                                                Next

                                                                num = num - 1

                                                                Loop




		TE_Screen_GetLatestRowStart = Array (1, "Get the latest row no for the report",  "Text Not Found")
        Else
			TE_Screen_GetLatestRowStart = Array (1, "Get the latest row no for the report",  "Page Object Not Found")
		End If
End Function
	
	

Private Function TE_Screen_GetLatestRowStartfor2 (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		Dim strRow, intRow, i, k,strtext , num
		num =0
		

		If  objScreen.Exist(4) Then
		strtext = objScreen.GetText (24,1,24,80)
		Do while (instr(1,strtext, "PF2",1))
			TE_SendKey objScreen,"F2"
			strtext = objScreen.GetText (24,1,24,80)
			'objScreen.SendKey TE_PF5
                        'wait (1)
			num = num +1
	         Loop 
		For i = 1 to 24
			strRow = objScreen.GetText (i,1,i,80)
			If instr(i,strRow,strValueID1,1) Then
				if instr(i,strRow,strValueID2,1) Then
				Call saveRunValue (strValueID3, i)
				TE_Screen_GetLatestRowStartfor2 = Array (0, "Get the latest row no for the report",  "Successfully completed.")
			Exit function
			End If
			end if
		Next
		Do while num > 0
                         For i =1 to num
                         TE_SendKey objScreen,"F2"
                Next

                For i = 1 to 24
                         k = 24 - i
                         strRow = objScreen.GetText (k,1,k,80)
                        If instr(1,strRow,strValueID1,1) Then
                         Call saveRunValue (strValueID3, k)
                                                                                                          
                TE_Screen_GetLatestRowStartfor2 = Array (0, "Get the latest row no for the report",  "Successfully completed.")
                Exit function
                 End If
                 Next
                num = num - 1
                Loop

		TE_Screen_GetLatestRowStartfor2 = Array (1, "Get the latest row no for the report",  "Text Not Found")
        Else
			TE_Screen_GetLatestRowStartfor2 = Array (1, "Get the latest row no for the report",  "Page Object Not Found")
		End If
End Function



Private Function TE_Screen_GetLatestRowStartfor2_FZAP (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
        Dim strRow, intRow, i, k,strtext , num
        num =0
        

        If  objScreen.Exist(4) Then
        strtext = objScreen.GetText (24,1,24,80)
        Do while (instr(1,strtext, "PF2",1))
            'TE_SendKey objScreen,"F2"
            
            For i = 1 to 24
            strRow = objScreen.GetText (i,1,i,80)
            If instr(1,strRow,strValueID1,1) > 0 Then
            if instr(1,strRow,strValueID2,1)> 0 then
                'Call saveRunValue (strValueID3, i)
                wait(2)
                objScreen.settext i,73,"s"
                wait(2)
                objScreen.SendKey TE_ENTER
                wait(2)
                TE_Screen_GetLatestRowStartfor2_FZAP = Array (0, "Get the latest row no for the report",  "Successfully completed.")
            Exit function
            End if
            end if
                Next
           
            objScreen.SendKey TE_PF2
            strtext = objScreen.GetText (24,1,24,80)
            
         loop
         
         For i = 1 to 24
            strRow = objScreen.GetText (i,1,i,80)
            If instr(1,strRow,strValueID1,1) > 0 Then
            if instr(1,strRow,strValueID2,1)> 0 then
                'Call saveRunValue (strValueID3, i)
                wait(2)
                objScreen.settext i,73,"s"
                wait(2)
                objScreen.SendKey TE_ENTER
                wait(2)
                TE_Screen_GetLatestRowStartfor2_FZAP = Array (0, "Get the latest row no for the report",  "Successfully completed.")
            Exit function
            End if
            end if
                Next
         
          
       
        TE_Screen_GetLatestRowStartfor2_FZAP = Array (0, "Get the latest row no for the report",  "Message Not Found")
        Else
            TE_Screen_GetLatestRowStartfor2_FZAP = Array (1, "Get the latest row no for the report",  "Page Object Not Found")
        End If
End Function


Public function TE_Screen_getlocationdcmx(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
			If  objScreen.Exist(4) Then

				Dim i, strRow, j, loc1, loc2 , num , eLoc , sLoc, r1, locStr, locNum, r2, z

				


                Do 

			
					
						locStr = Left(strValueID1, 2)
						locNum = Mid(strValueID1, 3, 3)

					

				For j = 1 to 6

						If j=1	 Then
							For i=4	 to 23
								strRow = objScreen.GetText (i,2,i,3)
							 If  locStr = strRow Then
								 
									r1 = objScreen.GetText (i,4,i,6)
									r2 = objScreen.GetText (i,11,i,13)
								If  locNum <= r2 and locNum >= r1 Then
									
										loc1 = objScreen.gettext (i,2,i,7)
										loc2 = objScreen.gettext (i,9,i,14)

									
										
										Call saveRunValue (strValueID2, loc1)
											Call saveRunValue (strValueID3, loc2)

										
										TE_Screen_getlocationdcmx = Array (0, "GetText from screen",  "Successfully completed.")
								
										Exit function

										end if
										else
									end if	
									next
									
	
								   elseif j = 2 then
								   For i=4	 to 23


								strRow = objScreen.GetText (i,18,i,19)
							 If  locStr = strRow Then
								 
									r1 = objScreen.GetText (i,20,i,22)
									r2 = objScreen.GetText (i,27,i,29)
								If  locNum <= r2 and locNum >= r1 Then
									
										loc1 = objScreen.gettext (i,18,i,23)
										loc2 = objScreen.gettext (i,25,i,30)

									
										
										Call saveRunValue (strValueID2, loc1)
											Call saveRunValue (strValueID3, loc2)

										
										TE_Screen_getlocationdcmx = Array (0, "GetText from screen",  "Successfully completed.")
								
										Exit function

										end if
										else
									end if	
									next
									

										  elseif j = 3 then
								  	   For i=4	 to 23


								strRow = objScreen.GetText (i,34,i,35)
							 If  locStr = strRow Then
								 
									r1 = objScreen.GetText (i,36,i,38)
									r2 = objScreen.GetText (i,43,i,45)
								If  locNum <= r2 and locNum >= r1 Then
									
										loc1 = objScreen.gettext (i,34,i,39)
										loc2 = objScreen.gettext (i,41,i,46)

									
										
										Call saveRunValue (strValueID2, loc1)
											Call saveRunValue (strValueID3, loc2)

										
										TE_Screen_getlocationdcmx = Array (0, "GetText from screen",  "Successfully completed.")
								
										Exit function

										end if
										else
									end if	
									next
									
									


										  elseif j = 4 then
								   For i=4	 to 23


								strRow = objScreen.GetText (i,50,i,51)
							 If  locStr = strRow Then
								 
									r1 = objScreen.GetText (i,52,i,54)
									r2 = objScreen.GetText (i,59,i,61)
								If  locNum <= r2 and locNum >= r1 Then
									
										loc1 = objScreen.gettext (i,50,i,55)
										loc2 = objScreen.gettext (i,57,i,62)

									
										
										Call saveRunValue (strValueID2, loc1)
											Call saveRunValue (strValueID3, loc2)

										
										TE_Screen_getlocationdcmx = Array (0, "GetText from screen",  "Successfully completed.")
								
										Exit function

										end if
										else
									end if	
									next
									


										  elseif j = 5 then
								    For i=4	 to 23


								strRow = objScreen.GetText (i,66,i,67)
							 If  locStr = strRow Then
								 
									r1 = objScreen.GetText (i,68,i,70)
									r2 = objScreen.GetText (i,75,i,77)
								If  locNum <= r2 and locNum >= r1 Then
									
										loc1 = objScreen.gettext (i,66,i,71)
										loc2 = objScreen.gettext (i,73,i,78)

									
										
										Call saveRunValue (strValueID2, loc1)
											Call saveRunValue (strValueID3, loc2)

										
										TE_Screen_getlocationdcmx = Array (0, "GetText from screen",  "Successfully completed.")
								
										Exit function

										end if
										else
									end if	
									next
									


									elseif j = 6 then
								 TE_SendKey objScreen, "F2"
	

				end if		
				TE_Screen_getlocationdcmx = Array (1, "Check for existance of value",  "Value not found")
					
					
	Next

	Loop while objScreen.GetText (24,60,24,65) <> "PFKEY2"

		
								Else
						TE_Screen_getlocationdcmx = Array (1, "Check for existance of value",  "Page Object Not Found")
	end if


End Function
	

    
    
Public function TE_Screen_getMyRow(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
	If  objScreen.Exist(4) Then
	Dim i
        
			For i = 1 to 24
				strRow = objScreen.GetText (i,1,i,80)
					If instr(i,strRow,strValueID1,1) Then
                        							Call saveRunValue (strValueID2, i)
						
							TE_Screen_getMyRow = Array (0, "GetText from screen",  "Successfully completed.")
							Exit function
						
				End If
			Next
			
		TE_Screen_getMyRow = Array (1, "GetText from screen",  "Text Not Found")
        Else
			TE_Screen_getMyRow = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function
	
	

Public function TE_Screen_getReport(ByRef objScreen,ByVal strValueID1,ByVal strValueID2, ByVal strValueID3)
	   If  objScreen.Exist(4) Then
		   Dim i , k, strRow, arrTo, x , y, arrTo2, arrTo1, rema, rc, z
	   arrTo = split (strValueID1,"_")


		    rc = (trim(objScreen.GetText(3,66,3,72)))
			arrTo2 = split (rc,"(")
			arrTo1 = split (arrTo2(1),")")
			rema = arrTo1(0) mod 18



		For x = 0 to rema
				
					y = rema + 6 - x
					objScreen.SetText y, 3, "?"
					TE_SendKey objScreen,"ENTER"
					'objScreen.SendKey TE_ENTER
					'wait (1)
'					  Do
                                        For z = 1 to 2

                                        	For i = 1 to 24
																	strRow = objScreen.GetText (i,1,i,80)
																					If instr(1,strRow,arrTo(0),1) Then
																									If instr(1,strRow,arrTo(1),1) Then
																													If instr(1,strRow,arrTo(2),1) Then
								objScreen.SetText i, 3, "s"
								TE_SendKey objScreen,"ENTER"
								'objScreen.SendKey TE_ENTER
								'wait(1)
														If strcomp (cstr(trim(objScreen.GetText(11,61,11,69))),strValueID2,1) = 0 Then
															wait (1)
	
		Call saveRunValue (strValueID3, y)
	
																										TE_Screen_getReport = Array (0, "GetText from screen",  "Successfully completed.")
																	Exit function
											else
											'wait (1)
											'objScreen.SendKey TE_PF3
											'wait (1)
											TE_SendKey objScreen,"F3"
                                            end if
																													
																									End If
																	End If
																	End if
	
													Next
													TE_SendKey objScreen,"F8"
													'objScreen.SendKey TE_PF8
													'wait (1)
													i =1
													
													Next													

'									Loop while (trim(objScreen.GetText (03,65,03,66)) = trim(objScreen.GetText (03,69,03,70))) or (trim(objScreen.GetText (03,64,03,64)) = trim(objScreen.GetText (03,67,03,67)))
									TE_SendKey objScreen,"F3"
									'objScreen.SendKey TE_PF3
									'wait (1)
	
		next
										
		If i = 6 Then
	TE_Screen_getReport = Array (1, "Get the latest row no for the report",  "Report Not Found")

	End If
	Else
		TE_Screen_getReport = Array (1, "Get the latest row no for the report",  "Page Object Not Found")

	end if
end function



Public function TE_Screen_GetRow(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	  If  objScreen.Exist(4) Then
		Dim obj1, obj2, row
		set obj1 = description.Create
		obj1("micclass").value = "TeField"
		obj1(strValueID3).value = strValueID1
		set obj2 = objScreen.ChildObjects(obj1)
        row = obj2(0).GetROProperty("start row")
        Call saveRunValue (strValueID2, row)
		TE_Screen_GetRow = Array (0, "Get Row no from screen",  "Successfully completed.")
		Else
			TE_Screen_GetRow = Array (1, "Get Row no from screen",  "Page Object Not Found")
		End If
		Set obj1 = Nothing
		Set obj2 = Nothing
End Function




Public function TE_Screen_getRowandcol(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
			If  objScreen.Exist(4) Then

				Dim i, strRow, j, z

			For z =1 to 10


					
	
					For 	j = 1 to 3
						If j=1	 Then
							For i=8 to 22
								strRow = objScreen.GetText (i,13,i,22)
								If instr(1,strRow,strValueID1,1) Then
									Call saveRunValue (strValueID2, i)
									Call saveRunValue (strValueID3, 23)
									TE_Screen_getRowandcol = Array (0, "GetText from screen",  "Successfully completed.")
										Exit function
										else
									end if	
									next
									
	
	
								   elseif j = 2 then
								   For i=8 to 22
								strRow = objScreen.GetText (i,37,i,46)
								If instr(1,strRow,strValueID1,1) Then
									Call saveRunValue (strValueID2, i)
									Call saveRunValue (strValueID3, 47)
									TE_Screen_getRowandcol = Array (0, "GetText from screen",  "Successfully completed.")
										Exit function
										else
									end if	
									next



								elseif j = 3 then
								For i=8 to 22

							strRow = objScreen.GetText (i,61,i,70)
							If instr(1,strRow,strValueID1,1) Then
								Call saveRunValue (strValueID2, i)
								Call saveRunValue (strValueID3, 71)
								TE_Screen_getRowandcol = Array (0, "GetText from screen",  "Successfully completed.")
									Exit function
									else
								end if	
								next

							
			end if			
					TE_Screen_getRowandcol = Array (1, "Check for existance of value",  "Value not found")
		next


		objScreen.sendkey TE_PF2
		Next
	
								Else
						TE_Screen_getRowandcol = Array (1, "Check for existance of value",  "Page Object Not Found")
		End if


End Function





Public function TE_Screen_getRowandcolPrqc(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)

''''''''''''''''''''strvalueid1 = location	

''''''''''''''''''''strvalueid2 = row for location

''''''''''''''''''''strvalueid3 = column for status of quantity
			
			If  objScreen.Exist(4) Then

				Dim i, strRow, j, z,k

				strValueID1=trim(strValueID1)
				For z =1 to 10


					
	
					For 	j = 1 to 2
						If j=1	 Then
							For k=6 to 23
							i = 29 - k
							if i <> 7 then
								strRow = trim(objScreen.GetText (i,2,i,7))
								If instr(1,strRow,strValueID1,1) Then
									Call saveRunValue (strValueID2, i)
									Call saveRunValue (strValueID3, 36)
									TE_Screen_getRowandcolPrqc = Array (0, "GetText from screen",  "Successfully completed.")
										Exit function
										else
									end if	
							end if
									next
									
	
	
								   elseif j = 2 then
								   For i=8 to 22
								strRow = objScreen.GetText (i,44,i,49)
								If instr(1,strRow,strValueID1,1) Then
									Call saveRunValue (strValueID2, i)
									Call saveRunValue (strValueID3, 78)
									TE_Screen_getRowandcolPrqc = Array (0, "GetText from screen",  "Successfully completed.")
										Exit function
										else
									end if	
									next



							
						end if			
					TE_Screen_getRowandcolPrqc = Array (1, "Check for existance of value",  "Value not found")
				next



				Next
	
								Else
						TE_Screen_getRowandcolPrqc = Array (1, "Check for existance of value",  "Page Object Not Found")
		end if


End Function



Public function TE_Screen_GetRowany(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
   If  objScreen.Exist(4) Then
       		Dim obj1, obj2, row, i , j
		j = 0
		set obj1 = description.Create
		obj1("micclass").value = "TeField"
		obj1(strValueID3).value = strValueID1
		 Do
			set obj2 = objScreen.ChildObjects(obj1)
			If  obj2.count() = 0 Then
                TE_SendKey objScreen,"F8"

					 j = j + 1
				'objScreen.SendKey TE_PF8
				'wait (1)
			else 
			i = i + 1
		end if
				 If j = 10 Then
		
					 TE_Screen_GetRowany = Array (1, "Get Row no from screen",  "Text Not Found")
					Exit do
			End If
		Loop while i = 0 
		row = obj2(0).GetROProperty("start row")
        Call saveRunValue (strValueID2, row)
		TE_Screen_GetRowany = Array (0, "Get Row no from screen",  "Successfully completed.")
		Else
			TE_Screen_GetRowany = Array (1, "Get Row no from screen",  "Page Object Not Found")
		End If
		Set obj1 = Nothing
		Set obj2 = Nothing
 End Function
 
  
Public function TE_Screen_GetRowany_F5(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	   If  objScreen.Exist(4) Then
                                Dim obj1, obj2, row, i
                                set obj1 = description.Create
                                obj1("micclass").value = "TeField"
                                obj1(strValueID3).value = strValueID1
                                Do
                                                set obj2 = objScreen.ChildObjects(obj1)
                                                If  obj2.count() = 0 Then
																TE_SendKey objScreen,"F5"
                                                                'objScreen.SendKey TE_PF5
                                                                'wait (1)
                                                else 
                                                i = i + 1
                                                End If
                                Loop while i = 0
                                row = obj2(0).GetROProperty("start row")
                                 Call saveRunValue (strValueID2, row)
                                TE_Screen_GetRowany_F5 = Array (0, "Get Row no from screen",  "Successfully completed.")
                                Else
                                  TE_Screen_GetRowany_F5 = Array (1, "Get Row no from screen",  "Page Object Not Found")
                                End If
End Function


Public function TE_Screen_getRowanybystring(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
	If  objScreen.Exist(4) Then

		do
			Dim i, strRow, j, loc
	
			For 	j = 1 to 2
					If j=1	 Then
						For i=6	 to 23
						strRow = objScreen.GetText (i,1,i,80)
						 If instr(1,strRow,strValueID1,1) Then
							Call saveRunValue (strValueID2, i)
							TE_Screen_getRowanybystring = Array (0, "Find the text ' "&strValueID1 &" ' ",  "Successfully completed and return the row no.")
							Exit function
							else
						end if	
						next
									
						elseif j = 2 then
					 TE_SendKey objScreen, "F2"
				end if		
				TE_Screen_getRowanybystring = Array (1, "Check for existance of value",  "Value not found")
	Next
	Loop while objScreen.GetText (24,67,24,69) = "PF2"
	Else
						TE_Screen_getRowanybystring = Array (1, "Check for existance of value",  "Page Object Not Found")
	end if


End Function


 Public function TE_Screen_getRowanykey(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
 
If  objScreen.Exist(4) Then
			
                Dim arrTo, arrFrom, i, presskey, strtext
                i =1
                                                'arrTo = split (strValueID2,"_")
'                                               arrFrom = split (strValueID2,"_")
               Do While i<25
					strtext = objScreen.GetText(i,1,i,80)
					If instr(1,strtext,strValueID1,1) Then
							Call saveRunValue (strValueID3, i)
							TE_Screen_getRowanykey = Array (0, "Check for existance of PO MIMX screen for report",  "Successfully verified ")
							Exit Do
					ElseIf instr(1,strtext,"I R 0 6 - S U C C E S S F U L",1) or instr(1,strtext,"Bottom of Data",1) Then
					    TE_Screen_getRowanykey = Array (1, "Check for existance of PO MIMX screen for report",  "End of report reached")
						Exit Do
					Else
						TE_Screen_getRowanykey = Array (1, "Check for existance of PO MIMX screen for report",  "Not Found")
					End if 
                        If i =24 Then
							presskey = strValueID2
							call TE_SendKey (objScreen,presskey)
							i=2
						End If
					 i=i+1
				Loop
Else
TE_Screen_getRowanykey = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
End If

End Function

Public function TE_Screen_getRowbycol(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then
	Dim arrTo, arrFrom, i, presskey, j , strtext, text1 , text2
	j = 1
	 i =1
			arrTo = split (strValueID2,"_")
		

    Do While i<25
	strtext = 	trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))

		If isnumeric(strtext) Then
	
				If  strcomp (cstr(int(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1))))),cstr (trim(int(strValueID1))),1) = 0 Then
		
					Call saveRunValue (strValueID3, i)
				   TE_Screen_getRowbycol = Array (0, "Get the latest row",  "Successfully verified.")
				   
					Exit Do
					  Else
					  end if
						else
					  If  strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (trim(strValueID1)),1) = 0 Then
					Call saveRunValue (strValueID3, i)
				   TE_Screen_getRowbycol = Array (0, "Get the latest row",  "Successfully verified.")
	   
					Exit Do
					  Else

					TE_Screen_getRowbycol = Array (1, "Get the latest row",  "Not Found")
				  End if 
		End If
			i=i+1
                    If i =24 Then
                    'Exit DO
                      presskey = "F8"
                    call TE_SendKey (objScreen,presskey)
                    j = j + 1
                 i=3
              End If
              
				 If j = 15 Then		
					 TE_Screen_getRowbycol = Array (1, "Get the latest row",  "Not Found")
					Exit do
					end if
           Loop
		Else
		TE_Screen_getRowbycol = Array (1, "Get the latest row",  "Page Object Not Found")
		End If

End Function



Public function TE_Screen_getRowbycol2(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
	If  objScreen.Exist(4) Then
	Dim arrTo, i, presskey, rc, rema, div, arrTo1, k, strRow
	 i =3
	 rc = (trim(objScreen.GetText(3,66,3,72)))
			arrTo = split (rc,"(")
			arrTo1 = split (arrTo(1),")")

			div = int(arrTo1(0) / 18)
			rema = arrTo1(0) mod 18
			For i = 0 to div
				TE_SendKey objScreen,"F8"
				'objScreen.SendKey TE_PF8
				'wait (1)
	
     	Next

		For i = 1 to 24
					k = 24 - i
					strRow = objScreen.GetText (k,1,k,80)
						If instr(1,strRow,strValueID1,1) Then
							Call saveRunValue (strValueID2, k)
                        						
								TE_Screen_getRowbycol2 = Array (0, "Get the latest row no",  "Successfully completed.")
								Exit function
							End If
				Next
				TE_Screen_getRowbycol2 = Array (1, "Get the latest row no",  "Text Not Found")
        Else
			TE_Screen_getRowbycol2 = Array (1, "Get the latest row no",  "Page Object Not Found")
		End If
End Function
	
	

Public function TE_Screen_getRowbycolf2(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then

	Dim arrTo, arrFrom, i, presskey
	 i =3
			arrTo = split (strValueID2,"_")
		
'			arrFrom = split (strValueID2,"_")
                 Do While i<25
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               TE_Screen_getRowbycolf2 = Array (0, "Check for existance of PO MIMX screen for report",  "Successfully verified.")
			   
			    Exit Do
                  Else
                TE_Screen_getRowbycolf2 = Array (1, "Check for existance of PO MIMX screen for report",  "Not Found")
              End if 
			i=i+1
                    If i =24 Then
                    'Exit DO
                      presskey = "F2"
                    call TE_SendKey (objScreen,presskey)
                 i=3
              End If
           Loop
		   
	Else
	TE_Screen_getRowbycolf2 = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")

	End If

End Function





Public function TE_Screen_getRowbycolf2_Max10(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then

	Dim arrTo, arrFrom, i, presskey,T
	 i =3
			arrTo = split (strValueID2,"_")
		


				T = 0
				 Do While i<25
			
			  If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then



				Call saveRunValue (strValueID3, i)
			   TE_Screen_getRowbycolf2_Max10 = Array (0, "Check for Document No.",  "Successfully verified.")
			   
				Exit Do
				  Else		
					  
				 TE_Screen_getRowbycolf2_Max10 = Array (1, "Check for  Document No",  "Not Found")
				  End if 

			i=i+1
					If i =24 Then
					'Exit DO
					  presskey = "F2"
					call TE_SendKey (objScreen,presskey)
				 i=3
				 T =T + 1
				 If t = 9 Then
		
					 TE_Screen_getRowbycolf2_Max10 = Array (1, "Check for  Document No",  "Not Found")
					Exit do

				 End If
			  End If
		   Loop

	Else

	TE_Screen_getRowbycolf2_Max10 = Array (1, "Check for existance",  "Page Object Not Found")

	End If

End Function


Public function TE_Screen_getRowbycolf2text(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
If  objScreen.Exist(4) Then
	Dim arrTo, arrFrom, i, presskey, strtext
	 i =3
			arrTo = split (strValueID2,"_")
			'	arrFrom = split (strValueID2,"_")
		strtext = trim(objScreen.GetText(24,63,24,69))

                    Do While i<25
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               TE_Screen_getRowbycolf2text = Array (0, "Check for existance ",  "Successfully verified.")
			   
			    Exit Do
                  Else
                TE_Screen_getRowbycolf2text = Array (1, "Check for existance",  "Not Found")
              End if 
                If i =24 Then
                    'Exit DO
                      presskey = "F2"
                    call TE_SendKey (objScreen,presskey)
                 i=2
				 strtext = trim(objScreen.GetText(24,63,24,69))
				 If  strtext = "PROCEED" Then
					  TE_Screen_getRowbycolf2text = Array (1, "Check for existance",  "Not Found")
					 Exit do
				 end if 
              End If
				i=i+1
           Loop

		   i = 3

		   Do While i<25
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               TE_Screen_getRowbycolf2text = Array (0, "Check for existance ",  "Successfully verified.")
			   
			    Exit Do
                  Else
                TE_Screen_getRowbycolf2text = Array (1, "Check for existance",  "Not Found")
              End if 
			  i = i + 1
			  loop
		   
Else
TE_Screen_getRowbycolf2text = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
End If

End Function

Public function TE_Screen_getRowbycolfnEqual(ByRef objScreen,ByVal strValueID1)

                           Dim strRow, intRow, i, k
                           If objScreen.Exist(4) Then
                                                                
                                                                For i = 1 to 24
                                                                                            k = 24 - i
                                                                                                strRow = objScreen.GetText (k,1,k,80)
                                                                                                If instr(1,strRow,strValueID1,1) Then
                                                                                                
                                                                                                TE_Screen_getRowbycolfnEqual = Array (1, "Get the latest row no for the exception report","Failed.")
                                                                                                objScreen.ClearCache
                                                                                                Exit function
                                                                                                End If
                                                                Next
                                                                
                                                                                                TE_Screen_getRowbycolfnEqual = Array (0, "Get the latest row no for the exception report","Text not Found")
                                                                                                Else
                                                                                                TE_Screen_getRowbycolfnEqual = Array (1, "Get the latest row no for the report","Page Object Not Found")
                                                                End If

End Function


Public function TE_Screen_getRowbycolfor2(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then
	Dim arrTo, arrFrom, i, presskey
	 i =3
			arrTo = split (strValueID2,"_")
			arrFrom = split (strValueID1,"_")
                 Do While i<25
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (arrFrom(0)),1) = 0 Then
				  If strcomp (cstr(trim(objScreen.GetText(i,arrTo(2),i,arrTo(3)))),cstr (arrFrom(1)),1) = 0	 Then
					Call saveRunValue (strValueID3, i)


				   TE_Screen_getRowbycolfor2 = Array (0, "Check for existance of PO MIMX screen for report",  "Successfully verified.")
				   
					Exit Do
				  End If
                  Else
                TE_Screen_getRowbycolfor2 = Array (1, "Check for existance of PO MIMX screen for report",  "Not Found")
              End if 
			i=i+1
                    If i =24 Then
                    'Exit DO
                      presskey = "F8"
                    call TE_SendKey (objScreen,presskey)
                 i=3
              End If
           Loop
	Else
	TE_Screen_getRowbycolfor2 = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
	End If
End Function


Public function TE_Screen_getRowbycolfor2col(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
If  objScreen.Exist(4) Then
	Dim arrTo, arrFrom, i, presskey,strRow,strText,strRow1
				 i =3
                 strText = trim(objScreen.GetText(24,63,24,69))
                Do While i<25
					       strRow = objScreen.GetText(i,1,i,80)
                 If instr(1,strRow,strValueID1,1) Then
							strRow1 = objScreen.GetText(i,49,i,52)
					  If instr(1,strRow1,strValueID2,1) Then

                Call saveRunValue (strValueID3, i)
               TE_Screen_getRowbycolfor2col = Array (0, "Check for existance ",  "Successfully verified.")
			   
			    Exit Do

				end if
                  Else
                TE_Screen_getRowbycolfor2col = Array (1, "Check for existance",  "Not Found")
              End if 
               If i =24 Then
                    'Exit DO
                      presskey = "F2"
                    call TE_SendKey (objScreen,presskey)
                 i=2
                 strtext = trim(objScreen.GetText(24,63,24,69))
				 If  strtext = "PROCEED" Then
					  TE_Screen_getRowbycolfor2col = Array (1, "Check for existance",  "Not Found")
					 Exit do
				 end if 
              End If
				i=i+1
				Loop
				i = 3
				 Do While i<25
						strRow = objScreen.GetText(i,1,i,80)
							If instr(1,strRow,strValueID1,1) Then
								strRow1 = objScreen.GetText(i,49,i,52)
								If instr(1,strRow1,strValueID2,1) Then

								Call saveRunValue (strValueID3, i)
								TE_Screen_getRowbycolfor2col = Array (0, "Check for existance ",  "Successfully verified.")	
						Exit Do
                      end if
					     Else
						TE_Screen_getRowbycolfor2col = Array (1, "Check for existance",  "Not Found")
				    end if
				     i = i + 1
					Loop
Else
TE_Screen_getRowbycolfor2col = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
End If

End Function
				

Public function TE_Screen_getRowbycolstartrow(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
If  objScreen.Exist(4) Then
                Dim arrTo, arrFrom, i, presskey, j 
                j = 1
				                        arrTo = split (strValueID2,"_")
                i =arrTo(2)
                        
'                                               arrFrom = split (strValueID2,"_")
                 Do While i<25
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               TE_Screen_getRowbycolstartrow = Array (0, "Check for existance of PO MIMX screen for report",  "Successfully verified.")
                                                   
                                                    Exit Do
                  Else
                TE_Screen_getRowbycolstartrow = Array (1, "Check for existance of PO MIMX screen for report",  "Not Found")
              End if 
                    If i =24 Then
                    'Exit DO
                      presskey = "F8"
                    call TE_SendKey (objScreen,presskey)
                    j = j + 1
                 i=2
              End If
                                      If j = 30 Then                     
                                        TE_Screen_getRowbycolstartrow = Array (1, "Get Row no from screen",  "Not Found")
                                          Exit do
                                                  end if
							  i=i+1
           Loop
Else
TE_Screen_getRowbycolstartrow = Array (1, "Check for existance of PO MIMX screen for report",  "Page Object Not Found")
End If

End Function

Public function TE_Screen_getRowbycoltwo(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then
	Dim arrTo, arrFrom, i, presskey
	 i =3
			arrTo = split (strValueID2,"_")
'			arrFrom = split (strValueID2,"_")
                 Do While i<25
              If strcomp (cstr(trim(objScreen.GetText(i,arrTo(0),i,arrTo(1)))),cstr (strValueID1),1) = 0 or strcomp (cstr(trim(objScreen.GetText(i,arrTo(2),i,arrTo(3)))),cstr (strValueID1),1) = 0 Then
                Call saveRunValue (strValueID3, i)
               TE_Screen_getRowbycoltwo = Array (0, "Get the latest row",  "Successfully verified.")
			   
			    Exit Do
                  Else
                TE_Screen_getRowbycoltwo = Array (1, "Get the latest row",  "Not Found")
              End if 
			i=i+1
'                   
           Loop
	Else
	TE_Screen_getRowbycoltwo = Array (1, "Get the latest row",  "Page Object Not Found")
	End If

End Function


Public function TE_Screen_getRowcolprqc(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)


''''''''''''''''''''strvalueid1 = receipt number 

''''''''''''''''''''strvalueid2 = status along with quantity

''''''''''''''''''''strvalueid3 = location

			If  objScreen.Exist(4) Then

	Do


					Dim i, strRow, j, loc, stts
	
					For 	j = 1 to 3
						If j=1	 Then
							For i=8	 to 23
								strRow = objScreen.GetText (i,21,i,26)
							 If instr(1,strRow,strValueID1,1) or int(objScreen.gettext(i,22,i,26)) = int(strValueID1) Then
									loc = trim(objScreen.gettext (i,2,i,7))
									stts = objScreen.gettext (i,31,i,38)
									
									Call saveRunValue (strValueID2, stts)
									Call saveRunValue (strValueID3, loc)
									TE_Screen_getRowcolprqc = Array (0, "GetText from screen",  "Successfully completed.")
										Exit function
										else
									end if	
									next
									
	
								   elseif j = 2 then
								   For i=8 to 23
								strRow = objScreen.GetText (i,63,i,68)
							 If instr(1,strRow,strValueID1,1) or int(objScreen.gettext(i,64,i,68)) = int(strValueID1) Then
									loc = objScreen.gettext (i,44,i,49)
									stts = objScreen.gettext (i,73,i,80)
									
									Call saveRunValue (strValueID2, stts)
									Call saveRunValue (strValueID3, loc)


                                    TE_Screen_getRowcolprqc = Array (0, "GetText from screen",  "Successfully completed.")
										Exit function
										else
									end if	
									next
	
									elseif j = 3 then
								 TE_SendKey objScreen, "F2"
	

				end if		
				TE_Screen_getRowcolprqc = Array (1, "Check for existance of value",  "Value not found")
					
						
	next

	Loop while objScreen.GetText (24,67,24,69) = "PF2"

		
								Else
						TE_Screen_getRowcolprqc = Array (1, "Check for existance of value",  "Page Object Not Found")
	End if


End Function



Private Function TE_Screen_GetRowField (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		Dim strRow, intRow, i

		If  objScreen.Exist(4) Then
        Do
			For i = 1 to 24
				strRow = objScreen.GetText (i,1,i,80)
					If instr(i,strRow,strValueID1,1) Then
						If instr(i,strRow,strValueID2,1) Then
							Call saveRunValue (strValueID3, i)
						
							TE_Screen_GetRowField = Array (0, "GetText from screen",  "Successfully completed.")
							Exit function
						End If
				End If
			Next
			'objScreen.SendKey TE_PF8
			TE_SendKey objScreen,"F8"
			'wait (1)
			i =1
		Loop while (trim(objScreen.GetText (24,53,24,80)) = "MORE EMPLOYEES TO FOLLOW ...")

		TE_Screen_GetRowField = Array (1, "GetText from screen",  "Text Not Found")
        Else
			TE_Screen_GetRowField = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function


Private Function TE_Screen_GetRowField_NoText (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
                                Dim strRow, intRow, i, arrTo

                                If  objScreen.Exist(4) Then
                                                arrTo = split (strValueID1,"_")
        Do
                                                
                                                For i = 1 to 24
                                                                strRow = objScreen.GetText (i,1,i,80)
                                                                                If instr(1,strRow,arrTo(0),1) Then
                                                                                                If instr(1,strRow,arrTo(1),1) Then
                                                                                                                If instr(1,strRow,arrTo(2),1) Then
                            Call saveRunValue (strValueID2, i)
                                                                                                                         TE_Screen_GetRowField_NoText = Array (0, "GetText from screen",  "Successfully completed.")
                                                                                                                Exit function
                                                                                                End If
                                                                End If
                                                                End if
                                                Next
												TE_SendKey objScreen,"F8"
                                                'objScreen.SendKey TE_PF8
                                                'wait (1)
                                                i =1
                                Loop while (trim(objScreen.GetText (04,65,04,66)) <> trim(objScreen.GetText (04,69,04,70)))

                                TE_Screen_GetRowField_NoText = Array (1, "GetText from screen",  "Text Not Found")
        Else
                                                TE_Screen_GetRowField_NoText = Array (1, "GetText from screen",  "Page Object Not Found")
                                End If
End Function





Private Function TE_Screen_GetRowField_NoText_F5 (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
                                Dim strRow, intRow, i, arrTo

                                If  objScreen.Exist(4) Then
                                                arrTo = split (strValueID1,"_")
        Do
                                                
                                                For i = 1 to 24
                                                                strRow = objScreen.GetText (i,1,i,80)
                                                                                If instr(1,strRow,arrTo(0),1) Then
                                                                                                If instr(1,strRow,arrTo(1),1) Then
                                                                                                                If instr(1,strRow,arrTo(2),1) Then
                            Call saveRunValue (strValueID2, i)
                                                                                                                'msgbox i
                                                                                                                TE_Screen_GetRowField_NoText_F5 = Array (0, "GetText from screen",  "Successfully completed.")
                                                                                                                Exit function
                                                                                                End If
                                                                End If
                                                                End if
                                                Next
												TE_SendKey objScreen,"F5"
                                                'objScreen.SendKey TE_PF5
                                                'wait (1)
                                                i =1
                                Loop while (trim(objScreen.GetText (04,65,04,66)) <> trim(objScreen.GetText (04,69,04,70)))

                                TE_Screen_GetRowField_NoText_F5 = Array (1, "GetText from screen",  "Text Not Found")
        Else
                                                TE_Screen_GetRowField_NoText_F5 = Array (1, "GetText from screen",  "Page Object Not Found")
                                End If
End Function



Public function TE_Screen_getRowforcol(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
	   If  objScreen.Exist(4) Then
		   Dim i, arrTo, rc
		   arrTo = split (strValueID1,"_")
		     For i = 8 to 19
				 rc = (trim(objScreen.GetText(i,arrTo(0),i,arrTo(1))))
				 If rc > 0 Then
					 Call saveRunValue (strValueID2, i)
					 TE_Screen_getRowforcol = Array (0, "GetText from screen",  "Successfully completed.")
				 End If
			 Next
			 else
			 TE_Screen_getRowforcol = Array (1, "GetText from screen",  "Page Object Not Found")
			 end if
End function



    

Private Function TE_Screen_GetRowForDemand (ByRef objScreen, ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
		Dim  i
			i = 11
		If  objScreen.Exist(4) Then
					Do
						For i = 11 to 24	
									If trim(objscreen.GetText(i,strValueID1,i,strValueID2)) >10 Then
											Call saveRunValue (strValueID3, i)
											
											Exit Do
									End If
							i=i+1
						Next
								If i =24 Then
										presskey = "F2"
										call TE_SendKey (objScreen,presskey)
										 i=11
								End If
		
					  Loop while (trim(objScreen.GetText (24,43,24,80)) = "ENTER UPDATES - PF2 MORE/PF7 BACK")

		
		TE_Screen_GetRowForDemand = Array (0, "Get Row from screen",  "Text  Found")
		Else
		TE_Screen_GetRowForDemand = Array (1, "Get Row from screen",  "Text Not Found")
		End If
End Function


Private Function TE_Screen_GetText (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		If  objScreen.Exist(4) Then
			Dim arrTo, arrFrom, strValue
			arrTo = split (strValueID1,"_")
			arrFrom = split (strValueID2,"_")
    		strValue = trim (objScreen.GetText(arrTo(0),arrTo(1),arrFrom(0),arrFrom(1)))
			Call saveRunValue (strValueID3, strValue)
            TE_Screen_GetText = Array (0, "GetText from screen",  "Successfully completed.")
		Else
			TE_Screen_GetText = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function





Private Function TE_Screen_GetTextRow (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		If  objScreen.Exist(4) Then
			Dim arrY, strValue
			arrY = split (strValueID2,"_")
    		strValue = trim (objScreen.GetText(strValueID1,arrY(0),strValueID1,arrY(1)))
            Call saveRunValue (strValueID3, strValue)
			TE_Screen_GetTextRow = Array (0, "GetText from screen",  "Successfully completed.")
		Else
			TE_Screen_GetTextRow = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function




Public function TE_Screen_getuserterm(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
			If  objScreen.Exist(4) Then


				Dim i, strRow, j, val

				For 	j = 1 to 2
					If j=1	 Then
						For i=4 to 20
							strRow = objScreen.GetText (i,2,i,31)
							If instr(1,strRow,strValueID1,1) Then
								val = objScreen.GetText (i,8,i,15)
								Call saveRunValue (strValueID2, val)
								
								TE_Screen_getuserterm = Array (0, "GetText from screen",  "Successfully completed.")
									Exit function
                                    else
								end if	
								next
								


							   elseif j = 2 then
							   For i=4 to 20
							strRow = objScreen.GetText (i,50,i,73)
							If instr(1,strRow,strValueID1,1) Then
								val = objScreen.GetText (i,49,i,56)
								Call saveRunValue (strValueID2, val)
                                								
								TE_Screen_getuserterm = Array (0, "GetText from screen",  "Successfully completed.")
									Exit function
									else
								end if	
								next
					
			end if			
					TE_Screen_getuserterm = Array (1, "Check for existance of value",  "Value not found")
	next
					
	
	
								Else
						TE_Screen_getuserterm = Array (1, "Check for existance of value",  "Page Object Not Found")
	end if


End Function



Public function TE_Screen_ifkeyF2(ByRef objScreen,ByVal strValueID1,strValueID2) 
   If objScreen.Exist(4) Then
     Dim arrTo
    arrTo = split (strValueID2,"_")
    If objScreen.GetText (24,arrTo(0),24,arrTo(1)) = strValueID1 Then

         objScreen.SendKey TE_PF2
       TE_Screen_ifkeyF2 = Array (0, "The number of the specified object have been counted", "Successfully verified.")
	   Exit function

     else

	TE_Screen_ifkeyF2 = Array (0, "The number of the specified object have been counted", "Successfully verified.")
    End If
end if


End Function


Public function TE_Screen_ifkeyF4(ByRef objScreen,ByVal strValueID1,strValueID2) 
   If objScreen.Exist(4) Then
     Dim arrTo
    arrTo = split (strValueID2,"_")
    If trim(objScreen.GetText (24,arrTo(0),24,arrTo(1))) = trim(strValueID1) Then

         call TE_SendKey (objScreen,"F4")
       TE_Screen_ifkeyF4 = Array (0, "F4 has been pressed succesfully", "Successfully verified.")
	   Exit function

     else

	TE_Screen_ifkeyF4 = Array (0, "F4 has been pressed succesfully", "Successfully verified.")
    End If
end if


End Function

Public function TE_Screen_ifkeyF5(ByRef objScreen,ByVal strValueID1,strValueID2) 
   If objScreen.Exist(4) Then
     Dim arrTo
    arrTo = split (strValueID2,"_")
    If objScreen.GetText (2,arrTo(0),2,arrTo(1)) = strValueID1 Then

         call TE_SendKey (objScreen,"F5")
       TE_Screen_ifkeyF5 = Array (0, "The number of the specified object have been counted", "Successfully verified.")

     else
	TE_Screen_ifkeyF5 = Array (0, "The number of the specified object have been counted", "Successfully verified.")
    End If
	End if


End Function



Public function TE_Screen_IR06report(ByRef objScreen,ByVal strValueID1,ByVal strValueID2, ByVal strValueID3)

   If  objScreen.Exist(4) Then

	   dim i, StrFlag, strText, intRow, intPosition, intPositionStart, intPositionEnd, presskey, strTextAns, arrTo,location, var, lastcheck

		arrTo = split (strValueID3,"_")


StrFlag = FALSE

Do while (StrFlag <> "FOUND" OR StrFlag <> "EOF"  )

		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
				If  strValueID1 = "TD SELECTED" Then

					presskey = "F11"
								call TE_SendKey (objScreen,presskey)
								strText = objScreen.GetText(intRow,1,intRow,80)

							intPosition = instr(1,strText,"TODO ID",1)
							intPositionStart = int(intPosition) + 7
							var = intPositionStart + 1
							intPositionEnd = instr(var,strText," ",1)

							elseif arrTo(1) = "" then

								intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)

						intPositionEnd = intPositionStart + 12

			 

							else 
				
						intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)
						intPositionEnd = instr(intPosition,strText,arrTo(1),1)

						End If
						If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
							StrFlag = "FOUND"
							strTextAns = trim(objScreen.GetText(intRow,intPositionStart+1,intRow,intPositionEnd-1))
							Exit Do
						End If
			ElseIf  instr(1,strText,"I R 0 6 - S U C C E S S F U L ",1) then
					StrFlag = "EOF"


					presskey = "F11"
					call TE_SendKey (objScreen,presskey)



		For lastcheck =1 to 24 
			strText = objScreen.GetText(lastcheck,1,lastcheck,80)
			If instr(1,strText,strValueID1,1) Then

				intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,"-",1)
						intPositionEnd = instr(intPosition,strText,".",1)
						If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
							StrFlag = "FOUND"
							strTextAns = trim(objScreen.GetText(lastcheck,intPositionStart+1,lastcheck,intPositionEnd-1))
							Exit Do

				elseif arrTo(1) = "" then

								intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)

						intPositionEnd = intPositionStart + 12
						End If


			ElseIf  instr(1,strText, "I R 0 6 - S U C C E S S F U L",1) then
					StrFlag = "EOF"
					Exit Do
			End If
		Next


					Exit Do
			End If
		
Next

presskey = "F11"
					call TE_SendKey (objScreen,presskey)



		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
						If  strValueID1 = "TD SELECTED" Then

					presskey = "F11"
								call TE_SendKey (objScreen,presskey)
								strText = objScreen.GetText(intRow,1,intRow,80)

							intPosition = instr(1,strText,"TODO ID",1)
							intPositionStart = int(intPosition) + 7
							var = intPositionStart + 1
							intPositionEnd = instr(var,strText," ",1)

								elseif arrTo(1) = "" then

								intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)

						intPositionEnd = intPositionStart + 12

							else 
				
						intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)
						intPositionEnd = instr(intPosition,strText,arrTo(1),1)

						End If
						If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
							StrFlag = "FOUND"
							strTextAns = trim(objScreen.GetText(intRow,intPositionStart+1,intRow,intPositionEnd-1))
							Exit Do

							End If
			ElseIf  instr(1,strText,"I R 0 6 - S U C C E S S F U L",1) then
					StrFlag = "EOF"
				Exit Do
			End If
		Next

		presskey = "F10"
					call TE_SendKey (objScreen,presskey)

						presskey = "F8"
					call TE_SendKey (objScreen,presskey)


Loop
If strValueID2 = "location" Then
	location = mid(strTextAns,9,6)

	Call saveRunValue (strValueID2,location )
	else 

	Call saveRunValue (strValueID2,strTextAns )

End If

TE_Screen_IR06report = Array (0, "Check for value of " &strValueID1 ,  "Successfully done.")

else 
	TE_Screen_IR06report = Array (1, "Check for value of " &strValueID1,  "Page object not found.")

end if 
end Function



Public Function TE_Screen_IR10ProductQuantity (ByRef objScreen,ByVal strValueID1,ByVal strValueID2)

	If  objScreen.Exist(4) Then
		
		If int(trim(strValueID1)) =  int(trim(strValueID2))Then
				TE_Screen_IR10ProductQuantity = Array (0, "The Ordered Quantity  " & strValueID1 & "'and",  "Delivered Quantity'" & strValueID2 & "  are equl" )
		elseIf int(trim(strValueID1)) >  int(trim(strValueID2))Then
				TE_Screen_IR10ProductQuantity = Array (0,  "The Ordered Quantity is " & strValueID1 & "'",  "Greater than'" & strValueID2 & "  Delivered Quantity")
		elseIf int(trim(strValueID1)) <  int(trim(strValueID2))Then
				TE_Screen_IR10ProductQuantity = Array (0,  "The Ordered Quantity is " & strValueID1 & "'",  "Less than'" & strValueID2 & "  Delivered Quantity" )
		else
				TE_Screen_IR10ProductQuantity = Array (1, "The Ordered Quantity is not at all Deliverd ", "" )
		End If

		else 
		TE_Screen_IR10ProductQuantity = Array (1, "The Screen Object not found ", "" )

	End if
End Function


Public function TE_Screen_jobstatus(ByRef objScreen, ByVal strValueID1,ByVal strValueID2, ByVal strValueID3)

	If objScreen.Exist(4) Then


	Dim valdate, partdate , mydate, gdate, gtime, myyear, rccode , arrTo



	arrTo = split(strValueID3 , "_")



	TE_Screen_jobstatus = Array (1, "page object not found",  "we are on wrong screen")

	mydate = TeWindow("TeWindow").TeScreen("Transaction Main Screen").GetText (24,18 , 24, 25)
	TeWindow("TeWindow").TeScreen("Transaction Main Screen").SendKey TE_PA2
	Call TESync
	TeWindow("TeWindow").TeScreen("TPX ME").TeField("Command").Set arrTo(1)
	Call TESync
	TeWindow("TeWindow").TeScreen("TPX ME").SendKey TE_ENTER
	Call TESync
	TeWindow("TeWindow").TeScreen("screen7548").SendKey TE_ENTER
	Call TESync
	gdate = TeWindow("TeWindow").TeScreen("screen7548").GetText (20,32,20,37)

	TeWindow("TeWindow").TeScreen("ISRPRIM ------------").TeField("OPTION").Set "sdsf"
	TeWindow("TeWindow").TeScreen("ISRPRIM ------------").SendKey TE_ENTER
	Call TESync
	TeWindow("TeWindow").TeScreen("SPOOL").TeField("COMMAND INPUT").Set "st"
	TeWindow("TeWindow").TeScreen("SPOOL").SendKey TE_ENTER
	Call TESync
	TeWindow("TeWindow").TeScreen("SPOOL").TeField("COMMAND INPUT").Set "FILTER OFF"
	TeWindow("TeWindow").TeScreen("SPOOL").SendKey TE_ENTER
	Call TESync
	TeWindow("TeWindow").TeScreen("SPOOL").TeField("COMMAND INPUT").Set "SORT QUEUE A"
	TeWindow("TeWindow").TeScreen("SPOOL").SendKey TE_ENTER
	Call TESync
	jobname = "PRE " + strValueID1
	TeWindow("TeWindow").TeScreen("SPOOL").TeField("COMMAND INPUT").Set jobname
	TeWindow("TeWindow").TeScreen("SPOOL").SendKey TE_ENTER
	Call TESync
	TeWindow("TeWindow").TeScreen("SPOOL").TeField("COMMAND INPUT").Set "ARRANGE MAX-RC A QUEUE"
	TeWindow("TeWindow").TeScreen("SPOOL").SendKey TE_ENTER
	Call TESync
	TeWindow("TeWindow").TeScreen("SPOOL").TeField("COMMAND INPUT").Set "FILTER ?"
	TeWindow("TeWindow").TeScreen("SPOOL").SendKey TE_ENTER
	Call TESync

	TeWindow("TeWindow").TeScreen("Display").SetText 11, 38 , "AND"
	TeWindow("TeWindow").TeScreen("Display").SetText 12, 38 , "AND"
	TeWindow("TeWindow").TeScreen("Display").SetText 15, 13 , "RD-DATE"
	TeWindow("TeWindow").TeScreen("Display").SetText 15, 33 , "EQ"
	TeWindow("TeWindow").TeScreen("Display").SetText 15, 38 , gdate
	TeWindow("TeWindow").TeScreen("Display").SetText 16, 13 , "RD-TIME"
	TeWindow("TeWindow").TeScreen("Display").SetText 16, 33 , "GT"
	TeWindow("TeWindow").TeScreen("Display").SetText 16, 38 , strValueID2
	TeWindow("TeWindow").TeScreen("Display").SendKey TE_ENTER
	Call TESync
	Do
	wait 3
	TeWindow("TeWindow").TeScreen("Display").SendKey TE_ENTER	
	Call TESync
	strtext = trim(TeWindow("TeWindow").TeScreen("Display").GetText(7,39,7,47))
	Loop While strtext = "EXECUTION"


	If arrTo(0) = "SYSTEM" Then

	rccode = trim(TeWindow("TeWindow").TeScreen("Display").GetText (7,53,7,56))
	TE_Screen_jobstatus = Array (1, "Wrong move",  "some Problem occurred check job status")

	End if

	TeWindow("TeWindow").TeScreen("Display").SendKey TE_PF3
	Call TESync
	TeWindow("TeWindow").TeScreen("screen15983").SendKey TE_PF3
	Call TESync
	TeWindow("TeWindow").TeScreen("ISRPRIM ------------").SendKey TE_PF3
	Call TESync
	TeWindow("TeWindow").TeScreen("Specify").TeField("Process Option").Set "2"
	Call TESync
	TeWindow("TeWindow").TeScreen("Specify").SendKey TE_ENTER
	Call TESync



	If arrTo(0) = "OPSTEST" Then
	TeWindow("TeWindow").TeScreen("TPX ME").TeField("Command").Set "JOBLOGD"
	TeWindow("TeWindow").TeScreen("TPX ME").SendKey TE_ENTER
	Call TESync

	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SetText 4,20, strValueID1
	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SetText 6,20, "*"
	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SendKey TE_ENTER
	Call TESync
	'mydate = date

	myyear = year(now)
	partdate = left(mydate, 6)
	valdate = cstr(partdate) + cstr(myyear)

	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SetText 5,40,valdate
	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SendKey TE_ENTER
	Call TESync

	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SendKey TE_PF11
	Call TESync

	rccode = trim(TeWindow("TeWindow").TeScreen("CA View ALL ---------------").GetText (6, 70 , 6 , 74))

	TeWindow("TeWindow").TeScreen("CA View ALL ---------------").SendKey TE_PF3

	Call TESync
	TeWindow("TeWindow").TeScreen("CA View 12.0 ALL  -------").SendKey TE_PF3
	Call TESync

	
	End If

	TeWindow("TeWindow").TeScreen("TPX ME").SendKey TE_PA2
	Call TESync



	If instr(1,strValueID1,"AE01", 1) then

	TE_Screen_jobstatus = Array (0, "The job has passed",  "succesfully passed")
	Exit function

	Else



	If trim(arrTo(0)) = "SYSTEM" Then
	

	If int(rccode) <  8  Then
	TE_Screen_jobstatus = Array (0, "The job has passed",  "succesfully passed")
	Else
	TE_Screen_jobstatus = Array (0, "The job has passed",  "succesfully passed")
	End if
	ElseIf trim(arrTo(0)) = "OPSTEST" Then

	If trim(rccode) = "" Then
	TE_Screen_jobstatus = Array (0, "The job has passed",  "succesfully passed")
	Else
	TE_Screen_jobstatus = Array (0, "The job has passed",  "succesfully passed")

	End If

	Else
	TE_Screen_jobstatus = Array (1, "SORRY NO IDEA","FAILED")

	End If

	End if
	Else
	TE_Screen_jobstatus = Array (1, "page object not found",  "we are on wrong screen")
	End if


End Function


Private Function TE_Screen_msgbox (ByRef objScreen, ByVal strValueID1)
		If  objScreen.Exist(4) Then
			msgbox strValueID1
			
            TE_Screen_msgbox = Array (0, "GetText from screen",  "Successfully completed.")
		Else
			TE_Screen_msgbox = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function


Private function TE_Screen_newvaluecompare(ByRef objScreen,ByVal strValueID1,ByVal strValueID2, ByVal strValueID3) 
   If objScreen.Exist(4) Then
	   Dim val, arrTo
	   val = strValueID1
	   arrTo = split (strValueID2,"_")
			If strValueID1 > 24 Then
				If arrTo(0) = "sub" Then
					val = val - arrTo(1)
					 Call saveRunValue (strValueID3, val)

					 TE_Screen_newvaluecompare = Array (0, "The calculation done '" & val & "'" , "Calculation successful.")

		Exit function
					elseif arrTo(0) = "add" then
					val = val + arrTo(1)
					Call saveRunValue (strValueID3, val)
			TE_Screen_newvaluecompare = Array (0, "The calculation done '" & val & "'" , "Calculation successful.")
		Exit function

		End if  

			Else
               Call saveRunValue (strValueID3, val)
					 TE_Screen_newvaluecompare = Array (0, "The calculation done '" & val & "'" , "The value is not as expected.")
			End If
 
               
			Else
				
			 TE_Screen_newvaluecompare = Array (1, "The operation cannot be performed", "Page object not found.")
                   
	   End If  
    
End Function



Public Function TE_Screen_OVERRIDE(ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
                If  objScreen.Exist(4) Then
                                                If objScreen.TeField(strValueID1).Exist(5) Then
                                                                                objScreen.TeField(strValueID2).Set "Y"
																				TE_SendKey objScreen,"ENTER"
                                                                                'objScreen.SendKey TE_ENTER
                                                                                'wait(2)
                                                                                'objScreen.SendKey TE_ENTER
																				TE_SendKey objScreen,"F3"
                                                                                'objScreen.SendKey TE_PF3
                                                                                TE_Screen_OVERRIDE=Array (0, "Override Object",  "Object  Found & Y Entered")
                                                else
                                                                                'objScreen.SendKey TE_ENTER
																				TE_SendKey objScreen,"F3"
                                                                                'objScreen.SendKey TE_PF3
                                                                                TE_Screen_OVERRIDE=Array (0, "Override Object",  "Object Not Found")
        end if

                else
                                TE_Screen_OVERRIDE=Array (1, "Page Object",  "Object Not Found")

                end if
End Function


Private Function TE_Screen_pressf8untilmsg  (ByRef objScreen, ByVal strValueID1)
	If  objScreen.Exist(4) Then
	Dim i,a,c,d
	c=0
	d=0
	
		do
			d=d+1
			If d = 100 Then
				exit do
				TE_Screen_pressf8untilmsg = Array(1, "Capture PRQC Screen",  "too many pages reached.")
			end if
				
			a=objScreen.GetText(1,1,24,80)
			If instr(1, a , strValueID1 , 1) Then
				c=1
				TE_Screen_pressf8untilmsg = Array(0, "Capture PRQC Screen",  "Successfully completed.")
			else
				TE_SendKey objScreen,"F8"
			end if
		
		loop while c=0
	else

	TE_Screen_pressf8untilmsg = Array(1, "Capture PRQC Screen",  "object not found.")
	end if
End Function


Public function TE_Screen_presskeycompare(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
   If objScreen.Exist(4) Then
	   If strValueID1 > 24 Then

		    call TE_SendKey (objScreen,strValueID2)

			 TE_Screen_presskeycompare = Array (0, "The number of the specified object have been counted", "Successfully verified.")
			 	   Exit function

				   else 

 TE_Screen_presskeycompare = Array (0, "The number is less than the expected value", "Successfully verified.")

	   End If
        
    else

TE_Screen_presskeycompare = Array (0, "The number of the specified object have been counted", "Successfully verified.")
    End If

End Function

Private Function TE_Screen_PRQCSCREEN  (ByRef objScreen, ByVal strValueID1)
	Dim i
	For i = 0 to 5
		If trim(objScreen.gettext(24,43,24,80)) = strValueID1 Then
					TE_SendKey objScreen,"F2"
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
		else
				Exit For
		End If
	Next
	TE_Screen_PRQCSCREEN = Array(0, "Capture PRQC Screen",  "Successfully completed.")
End Function



Public function TE_Screen_PromptMessage(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
                If  objScreen.Exist(4) Then
                                Dim i,x,y,text,range,presskey, Text_MsgBox, Timeout, WshShell
                                text = strValueID1
                                range = strValueID2
         i = 1
                                                Do while range>0
                                                                                Text_MsgBox = text + cstr(range)
                                                                                Timeout = 1 'in seconds
                                                                                Set WshShell = CreateObject("WScript.Shell")
                                                                                wshShell.Popup Text_MsgBox, TimeOut 'Prompt Message bo
                                                                                
                                                '                               presskey = "ENTER"
                                                                '               call TE_SendKey (objScreen,presskey)
                 range= range -1
                                                                                
                                                                                
              Loop

                                                  TE_Screen_PromptMessage = Array (0, "wait is done",  "complete")
                else
                                TE_Screen_PromptMessage = Array (0, "wait is done",  "Page Object Not Found")
                End if
End Function




Public function TE_Screen_putocccheck(ByRef objScreen,strValueID1 ) 
     If objScreen.Exist(4) Then

     If (trim(objScreen.GetText (1,39,1,42)) = "RPQA") then
     
                  objScreen.SetText 2, 7, strValueID1
                  'wait (1)
                  'objScreen.SendKey TE_ENTER
                  'wait(1)
					TE_SendKey objScreen,"ENTER"

           If (trim(objScreen.GetText (1,7,1,25)) = "VERIFY THE LOCATION") or (trim(objScreen.GetText (1,36,1,39)) = "RPQA") then 
                TE_Screen_putocccheck = Array (0, "The OCC has been entered", "Successfully entered.")
                                   Exit function
           End if 

                                                Else 
                                                 TE_Screen_putocccheck = Array (0, "The OCC has been entered", "Successfully entered.")
                                                Exit Function

      End if 
	End If
	TE_Screen_putocccheck = Array (1, "The occ cannot be entered", "Page Object Not Found")
End function


Public function TE_Screen_recordThePo(ByRef objScreen,ByVal strValueID1,ByVal strValueID2, strValueID3)

     If  objScreen.Exist(4) Then
		 Dim strText, reqPo
					 strText = trim(objScreen.GetText(24,1,24,80))
					 If instr(1,strText,strValueID1,1) or instr(1,strText,strValueID3,1) Then
						reqPo =  trim(objScreen.GetText(6,67,6,74))
						Call saveRunValue (strValueID2,reqPo )
					end if
	TE_Screen_recordThePo = Array (0, "Required PO to be recorded" ,  "Successfully done.")
					else
		TE_Screen_recordThePo = Array (1, "Required PO to be recorded",  "Page object not found.")
	End if
End function



Public function TE_Screen_REQAstatuscheck(ByRef objScreen,ByVal strValueID1,ByVal strValueID2)
	If  objScreen.Exist(4) Then
	
	Dim arrTo, arrTo1, num , row, strtext , strtext1,i , j, num1
		
		num = int(strValueID1 / 12)
		num1 = strValueID1 mod 12
	For j = 1 To num
		row = 12
	For i = 1 To 12
		strtext1 = trim(objscreen.GetText(row,78,row,80))	
		If strtext1 <> strValueID2 Then
			TE_Screen_REQAstatuscheck = Array (1, "the status is not as expected",  "complete")
			
			Exit function
			End If
	row = row + 1
	Next
	
	TE_SendKey objScreen,"F2"
	Next
	row = 12 
	For i = 1 To num1
	
	strtext1 = trim(objscreen.GetText(row,78,row,80))	
		If strtext1 <> strValueID2 Then
			TE_Screen_REQAstatuscheck = Array (1, "the status is not as expected",  "complete")
			Exit function
			
		End If
	
	row = row + 1
		
	Next
	

	TE_Screen_REQAstatuscheck = Array (0, " This PO should have ' "&strValueID1  &" ' lines in ' " &strValueID2 & " ' status",  " This PO is having ' "&strValueID1  &" ' lines in ' " &strValueID2 & " ' status")
	else
	TE_Screen_REQAstatuscheck = Array (1, "page object not found",  "unsuccesful")
	End if 
End function


Public function TE_Screen_ResolveReplen(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
	If  objScreen.Exist(4) Then

	Dim arrTo , arrTo1, arrTo2, strRow
		arrTo = split (strValueID1,"_")
			arrTo1 = split (strValueID2,"_")
				arrTo2 = split (strValueID3,"_")

	objScreen.settext 3,46,arrTo(0)
	objScreen.settext 3,72,arrTo(1)
	objScreen.sendkey TE_ENTER
    	strRow = objScreen.GetText (7,5,7,61)
	If  instr(1,strRow,arrTo(1),1) Then
				objScreen.settext 1,72,"update"
				objScreen.sendkey TE_ENTER
				objScreen.settext 7,53,arrTo(2)
				objScreen.sendkey TE_ENTER
	TE_Screen_ResolveReplen = Array (0, "Check for Document No.",  "Successfully done.")
				

	End If

     objScreen.settext 3,46,arrTo1(0)
	objScreen.settext 3,72,arrTo1(1)
	objScreen.sendkey TE_ENTER
	strRow = objScreen.GetText (7,5,7,61)
	If  instr(1,strRow,arrTo1(1),1) Then
		objScreen.settext 1,72,"update"
				objScreen.sendkey TE_ENTER
				objScreen.settext 7,53,arrTo1(2)
				objScreen.sendkey TE_ENTER
				TE_Screen_ResolveReplen = Array (0, "Check for Document No.",  "Successfully done.")
					Exit function

	End If
	If strValueID3 <> "" Then
		objScreen.settext 3,46,arrTo2(0)
		objScreen.settext 3,72,arrTo2(1)
		objScreen.sendkey TE_ENTER
		strRow = objScreen.GetText (7,5,7,61)
		If  instr(1,strRow,arrTo1(1),1) Then
			objScreen.settext 1,72,"update"
					objScreen.sendkey TE_ENTER
					objScreen.settext 7,53,arrTo2(2)
					objScreen.sendkey TE_ENTER
					TE_Screen_ResolveReplen = Array (0, "Check for Document No.",  "Successfully done.")
				
	
		End If
		else
	TE_Screen_ResolveReplen = Array (0, "Check for Document No.",  "Successfully done.")
	End If
	else 
	TE_Screen_ResolveReplen = Array (1, "Check for available workunit.",  "Page object not found.")

	end if 


End Function
	
	
	

Private function TE_Screen_rlogocccheck3(ByRef objScreen,strValueID1,strValueID2,strValueID3 ) 
     If  objScreen.Exist(4) Then
                                
            objScreen.SetText 2, 9, strValueID1
           'wait (2)
			TE_SendKey objScreen,"ENTER"
            'objScreen.SendKey TE_ENTER
            'wait(4)
                          If (trim(objScreen.GetText (1,7,1,20)) = "OCCODE INVALID") then       
                                             objScreen.SetText 2, 9, strValueID2
                                            'wait(2)
											TE_SendKey objScreen,"ENTER"
                                            'objScreen.SendKey TE_ENTER
                                             ' wait(4)
                                                                                                If (trim(objScreen.GetText (1,7,1,20)) = "OCCODE INVALID") then       
                                                               objScreen.SetText 2, 9, strValueID3
                                                               'wait(2)
                                                               'objScreen.SendKey TE_ENTER
															   TE_SendKey objScreen,"ENTER"
                                                               'wait(4)
                                                               TE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
                                                               Exit function
                                                                                 else
                                                             end if 
                                  else
                                   TE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
                                    Exit function
                                                   end if                          
                 else

                TE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
                 Exit function                                             
    End If
	TE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")

End function








Public function TE_Screen_RM61report(ByRef objScreen,ByVal strValueID1,ByVal strValueID2, ByVal strValueID3)

   If  objScreen.Exist(4) Then

	   dim i, StrFlag, strText, intRow, intPosition, intPositionStart, intPositionEnd, presskey, strTextAns, arrTo,location, var

		arrTo = split (strValueID3,"_")


		StrFlag = FALSE

		Do while (StrFlag <> "FOUND" OR StrFlag <> "EOF"  )

		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
				If  strValueID1 = "TD SELECTED" Then

					presskey = "F11"
								call TE_SendKey (objScreen,presskey)
								strText = objScreen.GetText(intRow,1,intRow,80)

							intPosition = instr(1,strText,"TODO ID",1)
							intPositionStart = int(intPosition) + 7
							var = intPositionStart + 1
							intPositionEnd = instr(var,strText," ",1)

							else 
				
						intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)
						intPositionEnd = instr(intPosition,strText,arrTo(1),1)

						End If
						If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
							StrFlag = "FOUND"
							strTextAns = trim(objScreen.GetText(intRow,intPositionStart+1,intRow,intPositionEnd-1))
							Exit Do
						End If
			ElseIf  instr(1,strText,"END OF PROGRAM RM61",1) then
					StrFlag = "EOF"
					Exit Do
			End If
		
	Next

	presskey = "F11"
					call TE_SendKey (objScreen,presskey)



		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
						If  strValueID1 = "TD SELECTED" Then

					presskey = "F11"
								call TE_SendKey (objScreen,presskey)
								strText = objScreen.GetText(intRow,1,intRow,80)

							intPosition = instr(1,strText,"TODO ID",1)
							intPositionStart = int(intPosition) + 7
							var = intPositionStart + 1
							intPositionEnd = instr(var,strText," ",1)

							else 
				
						intPosition = instr(1,strText,strValueID1,1)
						intPositionStart = instr(intPosition,strText,arrTo(0),1)
						intPositionEnd = instr(intPosition,strText,arrTo(1),1)

						End If
						If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
							StrFlag = "FOUND"
							strTextAns = trim(objScreen.GetText(intRow,intPositionStart+1,intRow,intPositionEnd-1))
							Exit Do

							End If
			ElseIf  instr(1,strText,"END OF PROGRAM RM61",1) then
					StrFlag = "EOF"
					Exit Do
			End If
		Next

		presskey = "F10"
					call TE_SendKey (objScreen,presskey)

						presskey = "F8"
					call TE_SendKey (objScreen,presskey)


	Loop
	If strValueID2 = "location" Then
	location = mid(strTextAns,9,6)
	msgbox location
	Call saveRunValue (strValueID2,location )
	else 
	msgbox strTextAns
	Call saveRunValue (strValueID2,strTextAns )

	End If




	TE_Screen_RM61report = Array (0, "Check for value of " &strValueID1 ,  "Successfully done.")

	else 
	TE_Screen_RM61report = Array (1, "Check for value of " &strValueID1,  "Page object not found.")

	end if 
end function




Public function TE_Screen_RM61reportcoordinates(ByRef objScreen,ByVal strValueID1,ByVal strValueID2, ByVal strValueID3)

   If  objScreen.Exist(4) Then

	   dim i, StrFlag, strText, intRow, intPosition, intPositionStart, intPositionEnd, presskey, strTextAns, arrTo,intPositionStart1,intPositionEnd1,strTextAns1

        
		StrFlag = FALSE

		Do while (StrFlag <> "FOUND" OR StrFlag <> "EOF"  )

		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
				If 	strValueID1 = "COORDINATES" Then
							intPosition = instr(1,strText,strValueID1,1)
							intPositionStart = instr(intPosition,strText,"=",1)
							intPositionEnd = instr(intPosition,strText,"Y",1)
							intPositionStart1 = instr(intPositionEnd,strText,"=",1)
							intPositionEnd1 = instr(intPositionEnd,strText,".",1)


							elseif strValueID1 = "LOW" then

                            
							intPosition = instr(1,strText,strValueID1,1)
							intPositionStart = instr(intPosition,strText,"=",1)
							intPositionEnd = instr(intPositionStart,strText,"L",1)
							intPositionStart1 = instr(intPositionEnd,strText,"=",1)
							intPositionEnd1 = instr(intPositionStart1,strText,"H",1)

							elseif strValueID1 = "HIGH" then

							
							presskey = "F11"
								call TE_SendKey (objScreen,presskey)
								strText = objScreen.GetText(intRow,1,intRow,80)

							intPosition = instr(1,strText,strValueID1,1)
							intPositionStart = instr(intPosition,strText,"=",1)
							intPositionEnd = instr(intPositionStart,strText,"H",1)
							intPositionStart1 = instr(intPositionEnd,strText,"=",1)
							intPositionEnd1 = instr(intPositionStart1,strText,".",1)

							end if 

	
							If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
								StrFlag = "FOUND"
								strTextAns = trim(objScreen.GetText(intRow,intPositionStart+1,intRow,intPositionEnd-1))
								strTextAns1 = trim(objScreen.GetText(intRow,intPositionStart1+1,intRow,intPositionEnd1-1))	
								Exit Do
							

				End If
			ElseIf  instr(1,strText,"END OF PROGRAM RM61",1) then
					StrFlag = "EOF"
					Exit Do
			End If
		
	Next

	presskey = "F11"
					call TE_SendKey (objScreen,presskey)



		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
						If 	strValueID1 = "COORDINATES" Then
							intPosition = instr(1,strText,strValueID1,1)
							intPositionStart = instr(intPosition,strText,"=",1)
							intPositionEnd = instr(intPosition,strText,"Y",1)
							intPositionStart1 = instr(intPositionEnd,strText,"=",1)
							intPositionEnd1 = instr(intPositionEnd,strText,".",1)

							elseif strValueID1 = "LOW" then

                            
							intPosition = instr(1,strText,strValueID1,1)
							intPositionStart = instr(intPosition,strText,"=",1)
							intPositionEnd = instr(intPositionStart,strText,"L",1)
							intPositionStart1 = instr(intPositionEnd,strText,"=",1)
							intPositionEnd1 = instr(intPositionStart1,strText,"H",1)

							elseif strValueID1 = "HIGH" then

							
							presskey = "F11"
								call TE_SendKey (objScreen,presskey)
								strText = objScreen.GetText(intRow,1,intRow,80)

							intPosition = instr(1,strText,strValueID1,1)
							intPositionStart = instr(intPosition,strText,"=",1)
							intPositionEnd = instr(intPositionStart,strText,"H",1)
							intPositionStart1 = instr(intPositionEnd,strText,"=",1)
							intPositionEnd1 = instr(intPositionStart1,strText,".",1)

							end if 

						If (intPosition <> 0 AND intPositionStart <> 0 AND  intPositionEnd <> 0) Then
							StrFlag = "FOUND"
							strTextAns = trim(objScreen.GetText(intRow,intPositionStart+1,intRow,intPositionEnd-1))
							strTextAns1 = trim(objScreen.GetText(intRow,intPositionStart1+1,intRow,intPositionEnd1-1))
							Exit Do
						End If
			ElseIf  instr(1,strText,"END OF PROGRAM RM61",1) then
					StrFlag = "EOF"
					Exit Do
			End If
		Next

		presskey = "F10"
					call TE_SendKey (objScreen,presskey)

						presskey = "F8"
					call TE_SendKey (objScreen,presskey)


	Loop



	Call saveRunValue (strValueID2,strTextAns )
	Call saveRunValue (strValueID3,strTextAns1 )
	TE_Screen_RM61reportcoordinates = Array (0, "Check for value of " &strValueID1 ,  "Successfully done.")

	Else 
	TE_Screen_RM61reportcoordinates = Array (1, "Check for value of " &strValueID1,  "Page object not found.")

	End if 
end Function

Private Function TE_Screen_rmmtlinecheck (ByRef objScreen, ByVal strValueID1)
		If  objScreen.Exist(4) Then
			Dim n,strValue,div
			n = strValueID1 + 7
	   		strValue = trim (objScreen.GetText(n,1,n,80))
			If strValue = "" Then
	      	 	    	TE_Screen_rmmtlinecheck = Array (0, "No of lines should be ' " &strValueID1 &" ' ",  "total lines in RMMT for above catogery ' "&strValueID1 &" '  No more additional lines")
			Else
				TE_Screen_rmmtlinecheck = Array (1, "Lines Exceed",  "Lines Exceed")	
			End If

		Else
			TE_Screen_rmmtlinecheck = Array (1, "GetText from screen",  "Page Object Not Found")
		End If
End Function





Public function TE_Screen_RMMTCOUNT(ByRef objScreen,ByVal strValueID1)
	If  objScreen.Exist(4) Then
	
		Dim count,sec,row , i
		row=7
		count=0
		i=0
	
		Do
			sec = Cstr( trim (objScreen.GetText(row,05,row,07)))
			If sec="" Then
				Call saveRunValue (strValueID1, count)
				TE_Screen_RMMTCOUNT = Array (0, "counting has been done ",  "complete")
				Exit function
			Else
				count = count + 1
			End If
			row = row + 1
		
		Loop While i < 1
	
		TE_Screen_RMMTCOUNT = Array (1, "Counting cannot be done ,check for failure",  "complete")
	Else
	TE_Screen_RMMTCOUNT = Array (1, "page object not found",  "unsuccesful")
	End if 
End function


Public Function TE_Screen_RowForLatestJob_NoText (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
	Dim i
	Dim k

	If  objScreen.Exist(4) Then
			For i=1 to 24
			k=24-i
						If  trim(TeWindow("TeWindow").TeScreen("SDSF Status").GetText(k,07,k,14)) = strValueID1  then
								Call saveRunValue (strValueID2, k)
                            	TE_Screen_RowForLatestJob_NoText = Array (0, "Get the latest row no for the Job",  "Successfully completed.")
								Exit function
                        End If
			Next
			TE_Screen_RowForLatestJob_NoText = Array (1, "Get the latest row no for job",  "Text Not Found")
     Else
			TE_Screen_RowForLatestJob_NoText = Array (1, "Get the latest row no for the job",  "Page Object Not Found")
		End If
End Function


Public function TE_Screen_SendKey_SSCC(ByRef objScreen)
	If  objScreen.Exist(4) Then
	
		Dim text1

		text1=trim(objscreen.GetText(2,22,2,25))

		If text1= "SSCC" then

			TE_SendKey objScreen,"F7"

		End If
		TE_Screen_SendKey_SSCC = Array (0, "status are as expected",  "complete")
	else
		TE_Screen_SendKey_SSCC = Array (1, "page object not found",  "unsuccesful")
	End if 
End function



Private Function TE_Screen_Searchbysplit (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
		If objScreen.Exist(4) Then
		
		Dim strlen , intRow , strText,  intposition, startpos, strFlag, strText1, strTextAns, i
	

		strlen = len(strValueID1)
		For intRow =1 to 24 
			strText = objScreen.GetText(intRow,1,intRow,80)
			If instr(1,strText,strValueID1,1) Then
	
				
						intPosition = instr(1,strText,strValueID1,1)
						
						startpos = intPosition + strlen
						
						
						strText1 = objScreen.GetText(intRow,startpos,intRow,80)
						
							StrFlag = "FOUND"
							
							
							strTextAns = split(strText1," ")
							
							For  i= 0 to UBound(strTextAns)
							
							If trim(strTextAns(i)) = "" or trim(strTextAns(i)) = ":" or trim(strTextAns(i)) = "." Then
								else
								Call saveRunValue (strValueID2, strTextAns(i))
								TE_Screen_Searchbysplit = Array (0, "The required value has been found",  "Succesfully found")
								Exit function
								
							End If
								
							Next
						End If					
		
		
				Next
				
								TE_Screen_Searchbysplit = Array (1, "The required value cannot be found",  "FAIL")
				
				else
				
				
				TE_Screen_Searchbysplit = Array (1, "Check for Value",  "Page Object Not Found")	
				
				End if
				
	
End Function




Private Function TE_Screen_searchfieldandset (ByRef objScreen , ByVal strValue1, ByVal strValue2,  ByVal strValue3)

	If objScreen.exist(4) Then

	TE_Screen_searchfieldandset = Array (1, "Field not found ",  strValue3)

	Dim count , rowindex , obj1 , i , rowno, index , k , oDesc , strtext, prop2 , obj
	count = 0
	index = split(strValue2,"_")
	For i = 1 To 24


	strtext = objSCreen.gettext (i,1,1,80)

	If instr(1,strtext,strValue1, 1) Then

		rowno = i
		count = count + 1
	If count = cint(index(0)) Then

		Exit for
	End If

	End If

	Next

	k = 0
 
	Set oDesc = Description.Create
	oDesc("micclass").Value = "TeField"

	Set obj = objScreen.ChildObjects(odesc)

	For i = 0 to obj.Count - 1

  	If obj(i).GetROProperty("protected") = False then
  
  	prop2 = obj(i).GetROProperty("start row")
  
  	If prop2 = rowno Then
  	k = k + 1
  	If cint(index(1)) = k Then
  		obj(i).set strValue3
  		
  		TE_Screen_searchfieldandset = Array (0, "Field found and set ",  strValue3)
  	End If
	
  	End If
  	
  	End If
	Next

	Else
	TE_Screen_searchfieldandset = Array (1, "Page Object not found ",  strValue3)
	End If	

End function	
	




Private Function TE_Screen_SendKeyonscreen (ByRef objTEWin,ByVal strKey, ByVal strValueID2)
		If objTEWin.Exist(1) Then
		Dim val
			If instr(1,objTEWin.GetText (1,02,1,79), "MAXCC",1) Then
						
				val = objTEWin.GetText (1,58,1,61)
				Call saveRunValue (strValueID2, val)
				objTEWin.SendKey TE_ENTER
				Call TESync()
				End if
           			TE_Screen_SendKeyonscreen = Array (0,"Send Key '" & strKey, "Send Key '" & strKey & "' Submitted successfully")
		Else
			TE_Screen_SendKeyonscreen = Array (0,"Send Key '" & strKey, "Send Key '" & strKey & "' Submitted successfully")
		End If 
		
End Function



Public function TE_Screen_SetACMGScreen(ByRef objScreen,ByVal strValueID1,ByVal strValueID2,ByVal strValueID3)
			If  objScreen.Exist(4) Then

				Dim i, strRow, j, z

				i=0
		
						For 	j = 1 to 2
					
					If j=1	 Then
							For z =9 to 24
							
							
								strRow = objScreen.GetText (z,35,z,39)
								wait(1)	
																														
								If instr(1,strRow,strValueID1,1) Then
									'Call saveRunValue (strValueID2, z)
									'Call saveRunValue (strValueID3, 2)
									objScreen.settext z,2,trim(strValueID2)
										i=i+1
										If i=int(strValueID3) Then
																					
											TE_Screen_SetACMGScreen = Array (0, "GetText from screen",  "Successfully completed.")
										
											Exit function
										End If
								end if	
									next
									
	
	
						elseif j = 2 then
								   
								   For z =1 to 24
								
							
								strRow = objScreen.GetText (z,76,z,80)
								wait(1)	
								If instr(1,strRow,strValueID1,1) Then
									'Call saveRunValue (strValueID2, z)
									'Call saveRunValue (strValueID3, 43)
									objScreen.settext z,43,trim(strValueID2)
									i=i+1
										If i=int(strValueID3) Then
									
											TE_Screen_SetACMGScreen = Array (0, "GetText from screen",  "Successfully completed.")
											Exit function
										End If
								end if	
									next						 
	
							
					end if			
					


					objScreen.sendkey TE_PF8
					Next
	
								Else
						TE_Screen_SetACMGScreen = Array (1, "Check for existance of value",  "Page Object Not Found")
	end if


End Function


Public function TE_Screen_setBSMA(ByRef objScreen,ByVal strValueID1) 

   If  objScreen.Exist(4) Then
                   Dim i, strText1,strText,strText2, presskey,strText3	,text1

                  strText = objScreen.GetText(24,63,24,69)

                                strText2 = "0"

                   Do while trim(strText) <> "PROCEED"

                  
                   For i = 8 to 22

                                  
                                   strText3 = objScreen.GetText(i,08,i,17)

								   strText1 = objScreen.GetText(i,70,i,72)	

								   If strText1 = "REL" or strText3 = "COM FUTURE" or strText1 = "INT" Then

                                   elseif trim(strText1) = "" Then

								   presskey = "ENTER"
				call TE_SendKey (objScreen,presskey)

                                                TE_Screen_setBSMA = Array (0, "Values on the screen have been set",  "Succesfully set the values")

                                                Exit function 
                                                else           

                                                objScreen.settext i, 70 , strValueID1

                                                
                                   End If
                                
                   Next

presskey = "ENTER"
				call TE_SendKey (objScreen,presskey)
TE_SendKey objScreen,"F2"

 strText = objScreen.GetText(24,63,24,69)
                   Loop


				   For i = 8 to 22

					   text1 = objScreen.GetText(i,21,i,25)

                       If text1<> "" Then
									  
									   strText3 = objScreen.GetText(i,08,i,17)
	
									   strText1 = objScreen.GetText(i,70,i,72)	
	
									   If strText1 = "REL" or strText3 = "COM FUTURE" Then
	
									   elseif trim(strText1) = "" Then
	
									   presskey = "ENTER"
					call TE_SendKey (objScreen,presskey)
	
													TE_Screen_setBSMA = Array (0, "Values on the screen have been set",  "Succesfully set the values")
	
													Exit function 
													else           
	
													objScreen.settext i, 70 , strValueID1
	
													
									   End If
	
									
					   End If

                   Next

                TE_Screen_setBSMA = Array (0, "Values on the screen have been set",  "Succesfully set the values")
                   
                                                                Else
                                                                                                TE_Screen_setBSMA = Array (1, "Check for existance of value",  "Page Object Not Found")
end if


End Function

Public function TE_Screen_setBSMB(ByRef objScreen,ByVal strValueID1) 

   If  objScreen.Exist(4) Then
                   Dim i, strText1,strText,strText2, presskey,strText3,text1,strText4,strText5,strText6

                  strText = objScreen.GetText(24,63,24,69)

                                strText2 = "0"

                   Do while trim(strText) <> "PROCEED"

                  
                   For i = 8 to 22

                                  
                                   strText3 = objScreen.GetText(i,08,i,17)

								   strText1 = objScreen.GetText(i,70,i,72)	

								   If strText1 = "SEQ" Then

                                   elseif trim(strText1) = "" Then

								   presskey = "ENTER"
								  call TE_SendKey (objScreen,presskey)
								  strText4 = objScreen.GetText(24,44,24,68)
								  strText5 = objScreen.GetText(24,44,24,72)
									strText6 = objScreen.GetText(24,43,24,78)
									If strText4 = "PROD/LOC SEQUENCE WARNING" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F2"
									elseif strText5 = "SAME STORE DIFFERENT DAY - PF4" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F4"
									elseif strText5 = "SAME STORE SAME DAY EXIST PF4" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F4"
									elseif strText6 = "MIXED TRUNK AND DELIVERED STORES PF4" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F4"
									else
										
									end if

                                  TE_Screen_setBSMB = Array (0, "Values on the screen have been set",  "Succesfully set the values")

                                  Exit function 
                                  else           

                                                objScreen.settext i, 70 , strValueID1

                                                
                                   End If
                                
                   Next
							presskey = "ENTER"
							call TE_SendKey (objScreen,presskey)
							strText4 = objScreen.GetText(24,44,24,68)
							strText5 = objScreen.GetText(24,44,24,72)
							strText6 = objScreen.GetText(24,43,24,78)
							If strText4 = "PROD/LOC SEQUENCE WARNING" Then
								call TE_SendKey (objScreen,presskey)
								TE_SendKey objScreen,"F2"
							elseif strText5 = "SAME STORE DIFFERENT DAY - PF4" Then
								call TE_SendKey (objScreen,presskey)
								TE_SendKey objScreen,"F4"
							elseif strText5 = "SAME STORE SAME DAY EXIST PF4" Then
								call TE_SendKey (objScreen,presskey)
								TE_SendKey objScreen,"F4"
							elseif strText6 = "MIXED TRUNK AND DELIVERED STORES PF4" Then
								call TE_SendKey (objScreen,presskey)
								TE_SendKey objScreen,"F4"
							else
								call TE_SendKey (objScreen,presskey)
								TE_SendKey objScreen,"F2"
								strText = objScreen.GetText(24,63,24,69)
						end if
          Loop

				   For i = 8 to 22

					   text1 = objScreen.GetText(i,21,i,25)

                       If text1<> "" Then
									  
									   strText3 = objScreen.GetText(i,08,i,17)
	
									   strText1 = objScreen.GetText(i,70,i,72)	
	
									   If strText1 = "SEQ" Then
	
									   elseif trim(strText1) = "" Then
	
									   presskey = "ENTER"
										call TE_SendKey (objScreen,presskey)
										 call TE_SendKey (objScreen,presskey)
								  strText4 = objScreen.GetText(24,44,24,68)
								  strText5 = objScreen.GetText(24,44,24,72)
									strText6 = objScreen.GetText(24,43,24,78)
									If strText4 = "PROD/LOC SEQUENCE WARNING" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F2"
									elseif strText5 = "SAME STORE DIFFERENT DAY - PF4" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F4"
									elseif strText5 = "SAME STORE SAME DAY EXIST PF4" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F4"
									elseif strText6 = "MIXED TRUNK AND DELIVERED STORES PF4" Then
										call TE_SendKey (objScreen,presskey)
										TE_SendKey objScreen,"F4"
									else
										
									end if
	
									TE_Screen_setBSMB = Array (0, "Values on the screen have been set",  "Succesfully set the values")
	
									Exit function 
									else           
	
										objScreen.settext i, 70 , strValueID1
    											
									   End If

							End If

				Next

							TE_Screen_setBSMB = Array (0, "Values on the screen have been set",  "Succesfully set the values")
        Else
			 TE_Screen_setBSMB = Array (1, "Check for existance of value",  "Page Object Not Found")
	end if

End Function



Private Function TE_Screen_Setbyfieldname (ByRef objEdit,ByVal strValue , ByVal strValue1)
		If objEdit.Exist(4) Then
			Dim strtext, rowno , i , prop1
			For i = 1 To 24
				strText = objEdit.gettext (i, 1 , i , 80)
					If instr(1,strtext, strValue1, 1) Then
						rowno = i
						Exit for	
					End If
			Next
				
		 prop1 = "start row:=" + cstr(rowno)
		 	
		 
			objEdit.TeField(prop1,"protected:=False").Set strValue
			'If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
			'	objEdit.Set trim(strValue)
				TE_Screen_Setbyfieldname = Array (0, "Set Value  '" & strValue & "' in WebEdit Field", "Value '" & strValue & "' set in the WebEdit field.")
			
		Else
			TE_Screen_Setbyfieldname = Array (1, "Set Value  '" & strValue & "' in WebEdit Field", "Field '" & objEdit.GetROProperty("attached text") & "' doesnot Exists.")
			
		End If
		
End Function
	



Public Function TE_Screen_setcursor (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
   If  objScreen.Exist(4) Then
   objScreen.SetCursorPos strValueID1, strValueID2
   TE_Screen_setcursor = Array (0, "Get the latest row no for the report",  "Successfully completed.")
   else
	TE_Screen_setcursor = Array (0, "Get the latest row no for the report",  "Successfully completed.")
	end if
End Function



Public function TE_Screen_setprdriver(ByRef objScreen,strValueID1, strValueID2) 
     If  objScreen.Exist(4) Then
		 Dim i
		 i=7
		 for  i = 7 to 21

				If (trim(objScreen.GetText (i,55,i,61)) = strValueID1) then
				objScreen.SetText i,53,"1"
             
				TE_Screen_setprdriver = Array (0, "The Batch process is complete",  "Successfully verified.")
				else

			
	end if 
	Next
	end if 
	TE_Screen_setprdriver = Array (0, "The Batch process is complete",  "Successfully verified.")

End function







Private Function TE_Screen_SetText (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		If  objScreen.Exist(4) Then
            objScreen.SetText trim(strValueID1),trim(strValueID2),trim(strValueID3)
            TE_Screen_SetText = Array (0, "SetText from screen",  "Successfully completed.")
		Else
			TE_Screen_SetText = Array (1, "SetText from screen",  "Page Object Not Found")
		End If
End Function



 


Private Function TE_Screen_SetTextint (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		If  objScreen.Exist(4) Then
            objScreen.SetText trim(strValueID1),trim(strValueID2),trim(int(strValueID3))
            TE_Screen_SetTextint = Array (0, "SetText from screen",  "Successfully completed.")
		Else
			TE_Screen_SetTextint = Array (1, "SetText from screen",  "Page Object Not Found")
		End If
End Function


Private Function TE_Screen_SetTextnotrim (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		If  objScreen.Exist(4) Then
			Dim arrY, diff, lastcol, startcol, mylength, i 
			arrY = split (strValueID2,"_")
				mylength = len(strValueID3)
				diff = arrY(1) - mylength
				lastcol = int(trim(arrY(0))) + int(arrY(1))
				startcol = int(trim(arrY(0))) + int(mylength)
				objScreen.SetText trim(strValueID1),trim(arrY(0)),trim(strValueID3)

				For i = startcol to lastcol
					objScreen.SetText trim(strValueID1),i, " "
				Next


            TE_Screen_SetTextnotrim = Array (0, "SetText from screen",  "Successfully completed.")
		Else
			TE_Screen_SetTextnotrim = Array (1, "SetText from screen",  "Page Object Not Found")
		End If
End Function
	
	
Private Function TE_Screen_SetTextnotrimtext (ByRef objScreen, ByVal strValueID1, ByVal strValueID2, ByVal strValueID3)
		If  objScreen.Exist(4) Then
            objScreen.SetText trim(strValueID1),trim(strValueID2),strValueID3
            TE_Screen_SetTextnotrimtext = Array (0, "SetText from screen",  "Successfully completed.")
		Else
			TE_Screen_SetTextnotrimtext = Array (1, "SetText from screen",  "Page Object Not Found")
		End If
	End Function
	

Private Function TE_Screen_SetTextrandom (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
		If  objScreen.Exist(4) Then
			Dim i
			For i = 0 to 9	
				objScreen.SetText trim(strValueID1),trim(strValueID2), i
				TE_SendKey objScreen,"ENTER"
				 '  objScreen.SendKey TE_ENTER
				  ' wait (2)
				   If strcomp (cstr(trim(objScreen.GetText(7,9,7,23))),"PF5 TO CONTINUE",1) = 0 or strcomp (cstr(trim(objScreen.GetText(1,7,1,25))),"VERIFY THE LOCATION",1) = 0 then

			   TE_Screen_SetTextrandom = Array (0, "SetText from screen",  "Successfully completed.")


					   Exit Function
					   
						end if 
				   Next
  			  
                Else
				TE_Screen_SetTextrandom = Array (1, "SetText from screen",  "Page Object Not Found")
				
			End If
			
End Function


Private Function TE_Screen_SetTextrandomF5(ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
		If  objScreen.Exist(4) Then
			Dim i
			For i = 0 to 9	
				objScreen.SetText trim(strValueID1),trim(strValueID2), i
				TE_SendKey objScreen,"ENTER"
				
				   If strcomp (cstr(trim(objScreen.GetText(7,9,7,23))),"PF5 TO CONTINUE",1) = 0 or strcomp (cstr(trim(objScreen.GetText(1,7,1,25))),"VERIFY THE LOCATION",1) = 0 or strcomp (cstr(trim(objScreen.GetText(2,2,2,4))),"OCC",1) = 0 Then
					   If strcomp (cstr(trim(objScreen.GetText(7,9,7,23))),"PF5 TO CONTINUE",1) = 0 Then
						objScreen.SendKey PF5
						TE_Screen_SetTextrandomF5 = Array (0, "SetText from screen",  "Successfully completed.")
						Exit function	
	Else     		
					   TE_Screen_SetTextrandomF5 = Array (0, "SetText from screen",  "Successfully completed.")
					   end if 
					   Exit function	
					   else
	End if	
					   Next
					   
						
  			  
                Else
				TE_Screen_SetTextrandomF5 = Array (1, "SetText from screen",  "Page Object Not Found")
				
			End If
			
End Function


Private Function TE_Screen_setTimefromScreen(ByRef objScreen, ByVal strValueID1, ByVal strValueID2,ByVal strValueID3)

		If  objScreen.Exist(4) Then
			Dim time1,time2
			
			time1 = strValueID1+"00"
			Call saveRunValue(strValueID3,time1)
			time2 = time1 + 0800
			If (time2>2400) Then
			time2 = time2 - 2400

			End If
			Call saveRunValue (strValueID2,time2)
			'Msgbox time2
			TE_Screen_setTimefromScreen = Array (0, "setTimefromScreen",  "Successfully completed.")
		Else
			TE_Screen_setTimefromScreen = Array (1, "setTimefromScreen",  "Page Object Not Found")
		End If
			
End Function
	


Public function TE_Screen_WaitForAvail(ByRef objScreen,strValueID1 ) 
     If  objScreen.Exist(4) Then
		 Dim i
		 i=1
		 for  i = 1 to strValueID1

			If (trim(objScreen.GetText (7,39,7,44)) = "HBAY") or (trim(objScreen.GetText (7,39,7,44)) = "MRAIL") or (trim(objScreen.GetText (7,39,7,44)) = "QUEUE") then
				wait(30)
				'objScreen.SendKey TE_ENTER
				TE_SendKey objScreen,"ENTER"

				elseif (trim(objScreen.GetText (7,39,7,44)) = "AVAIL") then
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to avail","Status Complete","ScreenShot.png"

				TE_Screen_WaitForAvail = Array (0, "Status Avail",  "Successfully verified.")
			Exit function
	end if 
	Next
	TE_Screen_WaitForAvail = Array (1, "The status is not getting avail",  "not avail")
end if 
If   (trim(objScreen.GetText (7,39,7,44)) <> "AVAIL")Then
TE_Screen_WaitForAvail = Array (1, "The status is not getting Avail",  "Page Object Not Found")
End If

End function	
	
	


Public function TE_Screen_WaitForComplete(ByRef objScreen,strValueID1 ) 
     If  objScreen.Exist(4) Then
		 Dim i
		 i=1
		 for  i = 1 to strValueID1

			If (trim(objScreen.GetText (18,31,18,38)) = "BATCH IN") or (trim(objScreen.GetText (18,31,18,38)) = "ACTIVE") then
				wait(30)
				'objScreen.SendKey TE_ENTER
				TE_SendKey objScreen,"ENTER"

				elseif (trim(objScreen.GetText (18,31,18,38)) = "COMPLETE") then
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"

				TE_Screen_WaitForComplete = Array (0, "The Batch process is complete",  "Successfully verified.")
	Exit function
	end if 
	Next
	TE_Screen_WaitForComplete = Array (1, "The status is not getting complete",  "not complete")
	End if 
	If   (trim(objScreen.GetText (18,31,18,38)) <> "COMPLETE")Then
	TE_Screen_WaitForComplete = Array (1, "The status is not getting complete",  "Page Object Not Found")
	End If

End function


Public function TE_Screen_WaitForText(ByRef objScreen, ByVal strValueID1, ByVal strValueID2 ,ByVal strValueID3) 
     If  objScreen.Exist(4) Then
                                Dim i , arrTo , presskey, strText
                                arrTo = split (strValueID2,"_")

                                i = 1

                                Do while i < 200

                                strText = objScreen.GetText(strValueID1,arrTo(0),strValueID1,arrTo(1))

                                If trim(strText) = trim(strValueID3) Then

                                                TE_Screen_WaitForText = Array (0, "The desired Text has come",  "Text successful")
                                                Exit function

                                                else

                                End If

                	            presskey = "ENTER"
		                    call TE_SendKey (objScreen,presskey)
                                    wait (10)
                                    i = i + 1

             

                                Loop

else 

TE_Screen_WaitForText = Array (1, "The desired Text has not came",  "Page object not found")



End If

TE_Screen_WaitForText = Array (1, "The desired Text has not came",  "Desired Text Not found")

End function




Public function TE_Screen_WaitForTextonscreen(ByRef objScreen, strValueID1, strValueID2 ,strValueID3) 
     If  objScreen.Exist(4) Then
                                Dim i , arrTo , presskey, strText
                                arrTo = split (strValueID2,"_")

                                i = 1

                                Do while i < 120

                                strText = objScreen.GetText(arrTo(0),arrTo(1),arrTo(0),arrTo(2))

                                If trim(strText) = strValueID3 Then

                                                TE_Screen_WaitForTextonscreen = Array (0, "The desired Text has come",  "Text successful")
                                                Exit function

									  else

                                End If

                                presskey = "F3"
                    call TE_SendKey (objScreen,presskey)
					TeWindow("TeWindow").TeScreen("Transaction Main Screen").TeField("ENTER FUNCTION CODE").Set strValueID1
					Set objScreen = TeWindow("TeWindow").TeScreen("Transaction Main Screen")
					presskey = "ENTER"
					call TE_SendKey (objScreen,presskey)
                                                                                wait (5)
                                                                                i = i + 1
          
                                Loop

else 

TE_Screen_WaitForTextonscreen = Array (1, "The desired Text has not came",  "Page object not found")


End If

End function






	
Private Function TE_SendKey (ByRef objTEWin,ByVal strKey)
		If objTEWin.Exist(4) Then
			If strKey = "ENTER" Then
				objTEWin.SendKey TE_ENTER
            ElseIf strKey = "PF24" Then
				objTEWin.SendKey TE_PF24
'			wait (1)
			ElseIf strKey = "F10" Then
				objTEWin.SendKey TE_PF10
			ElseIf strKey = "F9" Then
				objTEWin.SendKey TE_PF9
			ElseIf strKey = "F8" Then
				objTEWin.SendKey TE_PF8
			ElseIf strKey = "F7" Then
				objTEWin.SendKey TE_PF7
			ElseIf strKey = "F6" Then
				objTEWin.SendKey TE_PF6
			ElseIf strKey = "F5" Then
				objTEWin.SendKey TE_PF5
			ElseIf strKey = "F4" Then
				objTEWin.SendKey TE_PF4
			ElseIf strKey = "F3" Then
				objTEWin.SendKey TE_PF3
			ElseIf strKey = "F2" Then
				objTEWin.SendKey TE_PF2
			ElseIf strKey = "F1" Then
				objTEWin.SendKey TE_PF1
			ElseIf strKey = "F11" Then
				objTEWin.SendKey TE_PF11

			ElseIf strKey = "F12" Then

				objTEWin.SendKey TE_PF12

			ElseIf strKey = "End" Then

				objTEWin.SendKey  TE_ERASE_EOF

			ElseIf strKey = "PGDN" Then
				objTEWin.Sendkey TE_PA2
			ElseIf strKey = "PGUP" Then
				objTEWin.Sendkey TE_PA1
            ElseIf strKey = "DEL" Then
				objTEWin.Sendkey TE_DELETE
			ElseIf strKey = "PF15" Then
				objTEWin.Sendkey TE_PF15
   			End If
			TE_SendKey = Array (0,"Send Key '" & strKey, "Send Key '" & strKey & "' Submitted successfully")
		Else
			TE_SendKey = Array (1, "Send Key '" & strKey, "Field '" & objTEWin.GetROProperty("attached text") & "' doesnot Exists.")
		End If 
		Call TESync()
End Function




	


Public function TE_Window_activate(ByRef objScreen)

		 If  objScreen.Exist(4) Then
			objScreen.activate
			TE_Window_activate = Array (0, "Window activate" ,  "Successfully done.")
			else 
				TE_Window_activate = Array (1, "Window activate",  "TE window not found.")
				end if 
End function

Private Function TE_Window_gettodayname(ByRef objScreen, ByVal strValue1)
	
		If objScreen.Exist(2) Then
		
	
		Dim text , text1, text2
		text = weekday(now)
		text1 = Weekdayname(text)
		text2 = left (text1, 3)
		Call saveRunValue (strValue1, text2)
		 TE_Window_gettodayname = Array (0, "today is ",  text2)
	  
	  Else
	    TE_Window_gettodayname = Array (1, "Page Object not found",  "unsuccesful")
	  End if

	
End Function
	
	


Private Function TE_Window_ifinstring (ByRef objScreen, ByVal strValueID1, ByVal strValueID2)
	  
	   If instr(1, strValueID1,strValueID2,1)  Then
           		 
	   TE_Window_ifinstring = Array (0, "The '" & strValueID1 & "'contains", strValueID2)

	   else 

	 TE_Window_ifinstring = Array (2, "The '" & strValueID1 & "'does not contains", strValueID2)

	 end if	

End Function









End Class 


'*********************************************************
' SWF KEYWORDS
'*********************************************************
Class SWFKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a Window Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:    the id of the TeWindow in the ObjectRepository
	'           strPageID:         the id of the TeScreen in the ObjectRepository
	'           strObjectID:       the id of the TeField in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
	'*********************************************************
	Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
		Dim objCurrent
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword


		Case "SWF_Button_Click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Button_Click(objCurrent)
		Case "SWF_ComboBox_Select"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_ComboBox_Select(objCurrent, strParam1)
		Case "SWF_Edit_ClickWhilemyTextFound"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Edit_ClickWhilemyTextFound(objCurrent,strParam1)
		Case "SWF_Edit_setbox"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Edit_setbox(objCurrent, strParam1)
		Case "SWF_SwfEditor_CheckIFText"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_SwfEditor_CheckIFText(objCurrent,strParam1)
		Case "SWF_SwfEditor_getText"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_SwfEditor_getText(objCurrent, strParam1)
		Case "SWF_SwfRadioButton_Click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_SwfRadioButton_Click(objCurrent)
		Case "SWF_Table_getCell"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Table_getCell(objCurrent, strParam1, strParam2, strParam3)
		Case "SWF_Table_setCell"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Table_setCell(objCurrent, strParam1, strParam2, strParam3)
		Case "SWF_Window_AbnormalClose"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Window_AbnormalClose(objCurrent, strParam1)
		Case "SWF_Window_Close"
			arrReturn = SWF_Window_Close(strParam1)
		Case "SWF_Window_highlight"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Window_highlight(objCurrent)
		Case "SWF_Window_Maximise"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Window_Maximise(objCurrent)
		Case "SWF_Window_Open"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Window_Open(objCurrent, strParam1)
		Case "SWF_Window_Screenrestore"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = SWF_Window_Screenrestore(objCurrent)

			
		End select
			
		Set objCurrent = Nothing
	
		runKeyword = arrReturn
		
		Call captureshot (strBrowserID)

End function
			
			

			
	
	Private Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		If strObjectType = "SWF" Then
			Set getQTPObject  = SwfWindow(strObjectID)
		ElseIf strObjectType = "Button" Then
			Set getQTPObject  = SwfWindow(strBrowserID).SwfButton(strObjectID)
		ElseIf strObjectType = "ComboBox" Then
			Set getQTPObject  = SwfWindow(strBrowserID).SwfComboBox(strObjectID)
		ElseIf strObjectType = "SwfEditor" Then
			Set getQTPObject  = SwfWindow(strBrowserID).SwfEditor(strObjectID)	
		ElseIf strObjectType = "Edit" Then
			Set getQTPObject  = SwfWindow(strBrowserID).SwfEdit(strObjectID)
		ElseIf strObjectType = "Table" Then
			Set getQTPObject  = SwfWindow(strBrowserID).SwfTable(strObjectID)
		ElseIf strObjectType = "SwfRadioButton" Then
			Set getQTPObject  = SwfWindow(strBrowserID).SwfRadioButton(strObjectID)
    				
		else
		Set getQTPObject  = SwfWindow(strBrowserID)
		End If
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "WebKeyword", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If
		If SwfWindow(strBrowserID).Exist(4) then
		
		SwfWindow(strBrowserID).CaptureBitmap "ScreenShot.png", True
		
		Else
		End if
	End Function
	
	Public Function captureshot (strBrowserID)
    If SwfWindow(strBrowserID).Exist(4) then
		
	SwfWindow(strBrowserID).CaptureBitmap "ScreenShot.png", True
	Else
	End if
	End Function

	
	
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''KEYWORDS DEFINITION'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	


Private Function SWF_Button_Click(ByRef objEdit)

   If objEdit.Exist(4) Then
		objEdit.Click

		SWF_Button_Click = Array (0, "Click Object", "Object clicked succesfully")
	Else
		SWF_Button_Click = Array (1, "Click Object Failed", "object failed to click")
	End If

End Function

Private Function SWF_ComboBox_Select(ByRef objEdit, ByVal strValueID1)

   If objEdit.Exist(4) Then
		objEdit.Select strValueID1

		SWF_ComboBox_Select = Array (0, "Click Object", "Object selected succesfully")
	Else
		SWF_ComboBox_Select = Array (1, "Click Object Failed", "object failed ")
	End If

End Function

Private Function SWF_Edit_ClickWhilemyTextFound(ByRef objEdit,ByVal strValue)

IF objEdit.Exist(4) Then
  Dim val

	   val = "0"
		'val = Window("Transmit CO Messages").WinObject("No of lines").getroproperty("text")
	Do while val <> strValue
		SwfWindow("Transmit CO Messages").SwfButton("CO_Forward").Click

		'val = Window("Region Maintenance").WinEdit("Edit").GetROProperty("text")

		val =objEdit.GetROProperty("text")
		SWF_Edit_ClickWhilemyTextFound = Array (0, "getObject passed", "Wine Simulator object successfully found")
	loop

	Else
			SWF_Edit_ClickWhilemyTextFound = Array (1, "get Object Failed", "Wine Simulator object not found")
End If

End Function


Private Function SWF_Edit_setbox(ByRef objEdit, ByVal strValueID1)

   If objEdit.Exist(4) Then
   
		objEdit.set strValueID1
		

		SWF_Edit_setbox = Array (0, "Click Object", "Object selected succesfully")
	Else
		SWF_Edit_setbox = Array (1, "Click Object Failed", "object failed ")
	End If

End Function

Private Function SWF_SwfEditor_CheckIFText(ByRef objEdit,ByVal strValue)

IF objEdit.Exist(4) Then
  Dim val

	  
		val = objEdit.getroproperty("text")

		If instr(1,val,strValue,1)  Then 
		
		SWF_SwfEditor_CheckIFText = Array (0, "getObject passed", "the desired text has been found in the text")

		Exit function
	End If

    
	Else
			SWF_SwfEditor_CheckIFText = Array (1, "get Object Failed", "Wine Simulator object not found")
End If

End Function


Private Function SWF_SwfEditor_getText(ByRef objEdit, ByVal strValueID1)

   If objEdit.Exist(4) Then
   Dim text
		text = objEdit.GetVisibleText
		call saveRunValue (strValueID1,text)

		SWF_SwfEditor_getText = Array (0, "Click Object", "Object selected succesfully")
	Else
		SWF_SwfEditor_getText = Array (1, "Click Object Failed", "object failed ")
	End If

End Function


Private Function SWF_SwfRadioButton_Click(ByRef objEdit)

   If objEdit.Exist(4) Then
		objEdit.Click

		SWF_SwfRadioButton_Click = Array (0, "Click Object", "Object clicked succesfully")
	Else
		SWF_SwfRadioButton_Click = Array (1, "Click Object Failed", "object failed to click")
	End If

End Function


Private Function SWF_Table_getCell(ByRef objEdit, ByVal strValue1, ByVal strValue2, ByVal strValue3)


   If objEdit.Exist(4) Then
   Dim text
        
      text = objEdit.GetCellData (strValue1, strValue2)
      
      call saveRunValue (strValue3,text)
	   

	
			SWF_Table_getCell = Array (0, "The value has been set", "Wine Simulator object has been set")
	Else
	SWF_Table_getCell = Array (1, "Object not found", "Wine Simulator object failed to set")
End If

End Function


Private Function SWF_Table_setCell(ByRef objEdit, ByVal strValue1, ByVal strValue2, ByVal strValue3)


   If objEdit.Exist(4) Then
        
      objEdit.SetCellData strValue1, strValue2, strValue3
      

	
			SWF_Table_setCell = Array (0, "The value has been set", "Wine Simulator object has been set")
	Else
	SWF_Table_setCell = Array (1, "Object not found", "Wine Simulator object failed to set")
End If

End Function

Private Function SWF_Window_AbnormalClose(ByRef objScreen , ByVal strValue1)

  		SystemUtil.CloseProcessByName(strValue1)
		SWF_Window_AbnormalClose = Array (0, "The simulator has been closed successfully",  "Successfully closed.")

End Function

Private Function SWF_Window_Close(ByVal strValue1)


	SystemUtil.CloseProcessByName(strValue1)


     SWF_Window_Close = Array (0, "The simulator has been closed successfully",  "Successfully maximised.")


End Function



Private Function SWF_Window_highlight(ByRef objScreen)
      If  objScreen.Exist(4) Then

	Dim Shell 
	Set Shell = CreateObject("Shell.Application")
	Shell.MinimizeAll

	SwfWindow("Main Page - ASN Simulator").Maximize

    SWF_Window_highlight = Array (0, "The device has been activated successfully",  "Successfully entered.")

                end if

End Function



Private Function SWF_Window_Maximise(ByRef objScreen)
      If  objScreen.Exist(4) Then


	objScreen.maximize

     SWF_Window_Maximise = Array (0, "The simulator has been maximised successfully",  "Successfully maximised.")

                end if
                SWF_Window_Maximise = Array (0, "The simulator cannot be found",  "Cannot maximise")

End Function


	

Private Function SWF_Window_Open(ByRef objEdit , ByVal strBrowserID)


	Dim fso, filepath, i
		i = 1
	
	Set fso=createobject("Scripting.FileSystemObject")
	'The file to check the existence
	filepath = strBrowserID

		
	If fso.FileExists(filepath) then
	do

	systemutil.Run filepath

	i = i + 1
	if i = 5 then
			SWF_Window_Open= Array (1, "Open Application", "Application cant be opened ")
	exit function
	end if 
	
	
	loop until objEdit.exist(5)

		SWF_Window_Open= Array (0, "Open Application", "Application opened succesfully")
	Else
		SWF_Window_Open= Array (1, "Open Application", "Application does not exist")
	End If

End Function
	

Private Function SWF_Window_Screenrestore(ByRef objScreen)
      If  objScreen.Exist(4) Then

		Dim Shell 
		Set Shell = CreateObject("Shell.Application")
		Shell.undoMinimizeAll 

     	SWF_Window_Screenrestore = Array (0, "The device has been deactivated successfully",  "Successfully entered.")

       End if
End function








End Class




'*********************************************************
' WEB KEYWORDS
'*********************************************************
Class WebKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a Web Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:    the id of the Browser in the ObjectRepository
	'           strPageID:         the id of the Page in the ObjectRepository
	'           strObjectID:       the id of the object in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
	'*********************************************************
Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
		Dim objCurrent
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword
		
		Case "web_browser_close"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_browser_close(objCurrent)
		Case "web_browser_highlight"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_browser_highlight(objCurrent)
		Case "web_browser_open"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_browser_open(objCurrent, strParam1, strParam2)
		Case "web_dialog_exist"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_exist(objCurrent, True)
		Case "web_frame_exist"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_exist(objCurrent, True)			
		Case "web_image_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_image_click(objCurrent)
		Case "web_image_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "alt")
		Case "web_link_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_link_click(objCurrent)
		Case "web_link_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "innertext")
		Case "web_page_exist"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_page_exist(objCurrent)
		Case "web_static_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "text")
		Case "web_viewlink_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_viewlink_click(objCurrent, strParam1, "innertext")
		Case "web_viewlink_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "innertext")
		Case "web_webbutton_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_webbutton_click(objCurrent)
		Case "web_webbutton_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "value")
		Case "web_webcheckbox_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "checked")
		Case "web_webcheckbox_set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_set(objCurrent, strParam1)
		Case "web_webedit_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "value")
		Case "web_webedit_set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_webedit_set(objCurrent, strParam1)
		Case "web_webedit_sendkey_enter"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_sendkey_enter(objCurrent)
		Case "web_webelement_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_webelement_click(objCurrent)
		Case "web_webelement_clickifexists"
            Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            Set objCurrent1 = getQTPObject(strObjectType, strBrowserID, strPageID, strParam1) 
            arrReturn = web_webelement_clickifexists(objCurrent,objCurrent1)
        Case "web_webelement_clickonhover"
            Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            Set objCurrent1 = getQTPObject(strObjectType, strBrowserID, strPageID, strParam1) 
            arrReturn = web_webelement_clickonhover(objCurrent,objCurrent1)
		Case "web_webelement_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "innertext")
		Case "web_webelement_logoutclose"
            Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
	        arrReturn = web_webelement_logoutclose(objCurrent)
	    Case "web_webfile_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_webfile_click(objCurrent)
		Case "web_webfile_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "value")
		Case "web_webfile_set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_webfile_set(objCurrent, strParam1)
		Case "web_weblist_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "value")
		Case "web_weblist_set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_weblist_set(objCurrent, strParam1)		
		Case "web_webradiogroup_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_set(objCurrent, strParam1)
		Case "web_webradiogroup_set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "value")
		Case "web_webtable_get"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = generic_object_get(objCurrent, strParam1, "innertext")
		Case "web_webtable_getcell"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_webtable_getcell(objCurrent, strParam1, strParam2, strParam3)
		Case "web_winbutton_click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_winbutton_click(objCurrent)
		Case "web_winedit_set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = web_winedit_set(objCurrent, strParam1)
 		Case Else
			Err.Raise 1, "Keyword", strKeyword & " keyword not found"
			arrReturn = Array(1, "", Err.Description)
		End Select
		Set objCurrent = Nothing
	
		runKeyword = arrReturn

		Call captureshot (strBrowserID)

		
	End Function
	
	'*********************************************************
	' Object Repository search
	'*********************************************************
	
Private Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		If strObjectType = "browser" Then
			Set getQTPObject  = Browser(strObjectID)
		ElseIf strObjectType = "page" Then
			Set getQTPObject  = Browser(strBrowserID).Page(strObjectID)
		ElseIf strObjectType = "winedit" Then
			Set getQTPObject  = Browser(strBrowserID).Dialog(strPageID).WinEdit(strObjectID)
		ElseIf strObjectType = "winbutton" Then
			Set getQTPObject  = Browser(strBrowserID).Dialog(strPageID).WinButton(strObjectID)
		Else
			Dim objPage
			'Split the PageID in case of frame with PageID format "<page>|<frame>"
			Dim arrSplitPageID
			arrSplitPageID = Split(strPageID, "|")
			If UBound(arrSplitPageID) = 0 Then
				Set objPage = Browser(strBrowserID).Page(strPageID)
			Else
				Set objPage = Browser(strBrowserID).Page(arrSplitPageID(0)).Frame(arrSplitPageID(1))
			End If
			Select Case strObjectType
			Case "dialog"
				Set getQTPObject  = objPage.Dialog(strObjectID)
			Case "frame"
				Set getQTPObject  = objPage.Frame(strObjectID)
			Case "image"
				Set getQTPObject  = objPage.Image(strObjectID)
			Case "link"
				Set getQTPObject  = objPage.Link(strObjectID)
			Case "static"
				Set getQTPObject  = objPage.Static(strObjectID)
			Case "viewlink"
				Set getQTPObject  = objPage.ViewLink(strObjectID)
			Case "webbutton"
				Set getQTPObject  = objPage.WebButton(strObjectID)
			Case "webcheckbox"
				Set getQTPObject  = objPage.WebCheckBox(strObjectID)
			Case "webedit"
				Set getQTPObject  = objPage.WebEdit(strObjectID)
			Case "webelement"
				Set getQTPObject = objPage.WebElement(strObjectID)
			Case "webfile"
				Set getQTPObject  = objPage.WebFile(strObjectID)
			Case "weblist"
				Set getQTPObject  = objPage.WebList(strObjectID)
			Case "webradiogroup"
				Set getQTPObject  = objPage.WebRadioGroup(strObjectID)
			Case "webtable"
				Set getQTPObject  = objPage.WebTable(strObjectID)
			Case "winedit"
				Set getQTPObject  = objPage.WinEdit(strObjectID)
			Case "winbutton"
				Set getQTPObject  = objPage.WinButton(strObjectID)

			End Select
			End If
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "WebKeyword", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If
End Function


	Public Function captureshot(strBrowserID)
    If Browser(strBrowserID).Exist(4) then
		
	Browser(strBrowserID).CaptureBitmap "ScreenShot.png", True
	Else
	End if
	End Function
	
	'*********************************************************
	' Keyword implementations
	'*********************************************************

'****** Browser, Page, Dialog and Frame


Private Function web_browser_close(ByRef objBrowser)
		'If the Browser exists, close it
		if objBrowser.Exist(4) Then
			objBrowser.Close
			web_browser_close = Array (0, "", "Successfully completed.")
		Else
		SystemUtil.CloseProcessByName "iexplore.exe"
		web_browser_close = Array (0, "", "Successfully completed.")
			
		End If
End Function

Private Function web_browser_highlight(ByRef objBrowser)
		
		if objBrowser.Exist then
			Browser("Matflo WCS").highlight
			web_browser_highlight = Array (0, "", "Successfully completed.")
							
		End If
		
End Function


Private Function web_browser_open(ByRef objBrowser,ByVal strURL,ByVal strBrowser)
		'Open the Web Browser
		Select Case LCase(strBrowser)
			Case "ie"
                SystemUtil.Run "iexplore.exe", strURL,"","",3
			Case "firefox"
				'TODO: Test with Firefox Plugin 
				 SystemUtil.Run "firefox.exe", strURL,"","",3
			Case "chrome"
				'TODO: Test with Chrome Plugin 
				 SystemUtil.Run "chrome.exe", strURL,"","",3
			Case Else
				'If the Web Browser is not found
				web_browser_open = Array (1, "", "'" & strBrowser & "' is not a valide Web Browser.")
				Exit Function
		End Select

		'Check that the Web Browser is loaded
		objBrowser.Sync




'''''''''''''''''''' changes made to make the zoom 100%  '''''''''''''''''''''''''''

		wait(3)

	

		if objBrowser.Exist(4) = False Then
			Err.Raise 1, "Exist", "Browser not found"
			web_browser_open = Array (1, "", Err.Description)
		Else
			web_browser_open = Array (0, "", "Successfully completed.")
		End If
End Function

Private Function web_dialog_exist(ByRef objDialog)
		If objDialog.Exist(4) = False Then
			Err.Raise 1, "Exist", "Dialog not found"
			web_dialog_exist = Array (1, "", Err.Description)
		End If
		web_dialog_exist = Array (0, "", "Successfully completed.")
End Function
	



Private Function web_frame_exist(ByRef objFrame)
		If objFrame.Exist(4) = False Then
			Err.Raise 1, "Exist", "Frame not found"
			web_frame_exist = Array (1, "", Err.Description)
		End If
		web_frame_exist = Array (0, "", "Successfully completed.")
		
End Function

Private Function web_image_click(ByRef objImage)
		if objImage.exist(10) then
		Setting.WebPackage("ReplayType") = 1
		objImage.FireEvent "onMouseOver"
		objImage.Click
		web_image_click = Array (0, "", "Successfully completed.")
		end if
End Function

Private Function web_image_get(ByRef objImage, ByVal strValueID)
		if objImage.exist(10) then
	   Dim strValue
	   strValue = objImage.GetROProperty("alt")
		Call saveRunValue (strValueID, strValue)
		 web_image_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
		end if
End Function

Private Function web_link_click(ByRef objLink)
		if objLink.exist(10) then
		Setting.WebPackage("ReplayType") = 1
		objLink.FireEvent "onMouseOver"
		objLink.Click
		web_link_click = Array (0, "", "Successfully completed.")
		end if
End Function

Private Function web_link_get(ByRef objLink, ByVal strValueID)
		if objLink.exist(10) then
	   	Dim strValue
	   	strValue = objLink.GetROProperty("innertext")
		Call saveRunValue (strValueID, strValue)
		 web_link_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
		end if
End Function



	
Private Function web_page_exist(ByRef objPage)
		objPage.Sync
		If objPage.Exist(4) = False Then
			Err.Raise 1, "Exist", "Page not found"
			web_page_exist = Array (1, "", Err.Description)
		Else
			web_page_exist = Array (0, "", "Successfully completed.")
		End If
End Function


Private Function web_static_get(ByRef objStatic, ByVal strValueID)
		if objStatic.exist(10) then
		Dim strValue
		strValue =  objStatic.GetROProperty("text")
		Call saveRunValue (strValueID, strValue)
		web_webstatic_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
	End if
End Function

Private Function web_viewlink_click(ByRef objViewLink)
		if objViewLink.exist(10) then
		Setting.WebPackage("ReplayType") = 1
		objViewLink.FireEvent "onMouseOver"
		objViewLink.Click
		web_viewlink_click = Array (0, "", "Successfully completed.")
		End if
End Function
	
Private Function web_viewlink_get(ByRef objViewLink, ByVal strValueID)
		if objViewLink.exist(10) then
	   Dim strValue
	   strValue = objViewLink.GetROProperty("innertext")
		Call saveRunValue (strValueID, strValue)
		 web_viewlink_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
		 end if
End Function

Private Function web_webbutton_click(ByRef objButton)
		if objButton.exist(10) then
		Setting.WebPackage("ReplayType") = 1
		objButton.FireEvent "onMouseOver"
		objButton.Click
		web_webbutton_click = Array (0, "", "Successfully completed.")
		end if
End Function

Private Function web_webbutton_get(ByRef objButton, ByVal strValueID)
		if objButton.exist(10) then
	   Dim strValue
	   strValue = objButton.GetROProperty("innertext")
		Call saveRunValue (strValueID, strValue)
		web_webbutton_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
		end if
End Function

'********  WebCheckBox, WebEdit, WebElement, WebFile, WebList and WebRadioGroup

Private Function web_webcheckbox_get(ByRef objCheckBox, ByVal strValueID)
	   Dim strValue
	   strValue = objCheckBox.GetROProperty("checked")
		Call saveRunValue (strValueID, strValue)
		 web_webcheckbox_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
End Function

Private Function web_webcheckbox_set(ByRef objCheckBox, ByVal strValue)
		objCheckBox.Set strValue
		web_webcheckbox_set = Array (0, "", "Value '" & strValue & "' selected in the CheckBox field.")
End Function

Private Function web_webedit_get(ByRef objEdit, ByVal strValueID)
		if objedit.exist(10) then
			Dim strValue
		   	strValue = objEdit.GetROProperty("value")
			Call saveRunValue (strValueID, strValue)
			 web_webedit_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
		end if
End Function

Private Function web_webedit_set(ByRef objEdit, ByVal strValue)
	if objEdit.exist(10) then
		'Setting.WebPackage("ReplayType") = 2
		objEdit.Set strValue
		wait(1)
		web_webedit_set = Array (0, "", "Value '" & strValue & "' set in the WebEdit field.")
		end if
End Function
	
Private Function web_webelement_click(ByRef objWebElement)
	if objWebElement.exist(10) then
  		Setting.WebPackage("ReplayType") = 2
		objWebElement.Click
		web_webelement_click = Array (0, "", "Successfully completed.")
		end if
End Function
	
Private Function web_webelement_clickifexists(ByRef objButton, ByRef objButton1)
	   Dim i
		For i = 1 to 5
	         Setting.WebPackage("ReplayType") = 2
		objButton.Click
		wait(2)
		If objButton1.Exist(1) Then
		objButton1.Click
        web_webelement_clickifexists = Array (0, "", "Successfully completed.")
        Exit function
                                

	End If

	Next
End Function



Private Function web_webelement_clickonhover(ByRef objButton, ByRef objButton1)
	If objbutton.exist(10) then
		Dim i
    	Setting.WebPackage("ReplayType") = 2
    	objButton.FireEvent "onMouseOver"

		If objButton1.Exist(1) Then
			objButton1.Click
    		web_webelement_clickonhover = Array (0, "", "Successfully completed.")
    	Exit function
		End if                                

	End If
End Function



Private Function web_webelement_get(ByRef objWebElement, ByVal strValueID)
	if objWebElement.exist(10) then
	   Dim strValue
	   strValue = objWebElement.GetROProperty("innertext")
		Call saveRunValue (strValueID, strValue)
		 web_webelement_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
	 end if
 end Function
 
 
Public Function web_webelement_logoutclose(ByRef objButton)
	If Browser("Login").Dialog("Message from webpage").WinButton("OK").exist(2) then
		Browser("Login").Dialog("Message from webpage").WinButton("OK").click
	End if

	If Browser("Login").Dialog("Message from webpage").WinButton("OK").exist(2) then
		Browser("Login").Dialog("Message from webpage").WinButton("OK").click
	End if
	If  Window("Microsoft Internet Explorer").Dialog("Message from webpage").WinButton("OK").Exist(1) then
		Window("Microsoft Internet Explorer").Dialog("Message from webpage").WinButton("OK").click
	End if
	If Browser("Login").exist Then
		If objButton.Exist(3)	Then
			objButton.click
			Browser("Login").Close
		End If
	Else
		SystemUtil.CloseProcessByName "iexplore.exe"
	
	End If
		SystemUtil.CloseProcessByName "iexplore.exe"
        web_webelement_logoutclose = Array (0, "", "Successfully completed.")

end Function

Private Function web_webfile_click(ByRef objWebFile)
	if objWebFile.exist(10) then
   		Setting.WebPackage("ReplayType") = 1
        objWebFile.FireEvent "onMouseOver"
		objWebFile.Click
		web_webfile_click = Array (0, "", "Successfully completed.")
		end if
End Function

Private Function web_webfile_get(ByRef objWebFile, ByVal strValueID)
	if objwebfile.exist(10) then
	   Dim strValue
	   strValue = objWebFile.GetROProperty("value")
		Call saveRunValue (strValueID, strValue)
		 web_webfile_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
	end if
End Function


Private Function web_webfile_set(ByRef objWebFile, ByVal strValue)
	if objwebfile.exist(10) then
		objWebFile.Select strValue
		web_webfile_set = Array (0, "", "Value '" & strValue & "' selected in the WebFile field.")
	 end if 	
End Function




Private Function web_weblist_get(ByRef objList, ByVal strValueID)
	if objlist.exist(10) then
	   Dim strValue
	   strValue = objList.GetROProperty("value")
		Call saveRunValue (strValueID, strValue)
		 web_weblist_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
	End if
End Function
	
Private Function web_weblist_set(ByRef objList, ByVal strValue)
	if objlist.exist(10) then
		objList.Select strValue
		web_weblist_set = Array (0, "", "Value '" & strValue & "' selected in the WebList field.")
	end if
End Function


Private Function web_webradiogroup_get(ByRef objRadioGroup, ByVal strValueID)
	   Dim strValue
	   strValue = objRadioGroup.GetROProperty("value")
		Call saveRunValue (strValueID, strValue)
		 web_webradiogroup_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
End Function

Private Function web_webradiogroup_set(ByRef objRadioGroup, ByVal strValue)
		objRadioGroup.Select strValue
		web_webradiogroup_set = Array (0, "", "Value '" & strValue & "' selected in the RadioGroup field.")
End Function

'********  WebTable

Private Function web_webtable_get(ByRef objWebTable, ByVal strValueID)
	   Dim strValue
	   strValue = objWebTable.GetROProperty("innertext")
		Call saveRunValue (strValueID, strValue)
		 web_webtable_get = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")
End Function

Private Function web_webtable_getcell(ByRef objWebTable, ByVal intRow, ByVal intColumn, ByVal strValueID)
	if objwebtable.exist(10) then
	   Dim strValue
	   strValue = objWebTable.GetCellData(intRow,  intColumn)
		Call saveRunValue (strValueID, strValue)
		 web_webtable_getcell = Array (0, "", "Value '" & strValue & "' saved with the ValueID '" & strValueID & "'")

	end if
End Function
Private Function web_winbutton_click(ByRef objButton)
	if objButton.exist(10) then
	Setting.WebPackage("ReplayType") = 1
		objButton.Click
		web_winbutton_click = Array (0, "", "Successfully completed.")
			
		end if

End Function





Private Function web_winedit_set(ByRef objEdit, ByVal strValue)
		if objEdit.exist(10) then
		objEdit.Set strValue
		web_winedit_set = Array (0, "", "Value '" & strValue & "' set in the WinEdit field.")
		end if
End Function
	
	
	
End Class



'*********************************************************
' Device KEYWORDS
'*********************************************************
Class DeviceKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a TE Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:    the id of the TeWindow in the ObjectRepository
	'           strPageID:         the id of the TeScreen in the ObjectRepository
	'           strObjectID:       the id of the TeField in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
	'*********************************************************
	Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
		Dim objCurrent
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword

		Case "DEVICE_Screen_activate"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_activate(objCurrent)

		Case "DEVICE_Screen_Press"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_Press(objCurrent, strParam1)

		Case "DEVICE_Screen_putocccheck"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_putocccheck(objCurrent, strParam1)

		Case "DEVICE_Screen_putocccheck3"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_putocccheck3(objCurrent, strParam1,strParam2,strParam3)

		Case "DEVICE_Screen_RectangleGetText"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_RectangleGetText(objCurrent, strParam1,strParam2,strParam3)

		Case "DEVICE_Screen_RectangleMov"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_RectangleMov(objCurrent, strParam1)

		Case "DEVICE_Screen_rlogocccheck3"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_rlogocccheck3(objCurrent, strParam1,strParam2,strParam3)

		Case "DEVICE_Screen_SetTextRandom"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_SetTextRandom(objCurrent, strParam1)

		Case "DEVICE_Screen_SetTextRandomF5"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_SetTextRandomF5(objCurrent, strParam1)

		Case "DEVICE_Screen_sync"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_sync(objCurrent, strParam1,strParam2)

		Case "DEVICE_Screen_Type"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_Type(objCurrent, strParam1)

		Case "DEVICE_Screen_Typechar"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_Typechar(objCurrent, strParam1)

		Case "DEVICE_Screen_Typefield"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_Typefield(objCurrent, strParam1,strParam2)

		Case "DEVICE_Screen_undoactivate"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Screen_undoactivate(objCurrent)

		Case "DEVICE_Window_LineGetText"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Window_LineGetText(objCurrent, strParam1)

		Case "DEVICE_Window_ScreenGetText"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = DEVICE_Window_ScreenGetText(objCurrent, strParam1)

		Case Else
			Err.Raise 1, "Keyword", strKeyword & "  keyword not found"
			arrReturn = Array(1, "", Err.Description)
		End Select
		Set objCurrent = Nothing
	
		runKeyword = arrReturn
		Call captureshot (strBrowserID, strObjectID)
		
		
		
	End Function
	
	'*********************************************************
	' Object Repository search
	'*********************************************************
	
	Private Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		If strObjectType = "Window" Then
			Set getQTPObject  = MobileDevice(strObjectID)
		ElseIf strObjectType = "Screen" Then
			Set getQTPObject  = MobileDevice(strBrowserID).MoWindow(strObjectID)
		End If
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "WebKeyword", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If
		'MobileDevice(strBrowserID).CaptureBitmap "ScreenShot.png", True
	End Function
	
	Public Function captureshot (strBrowserID, strObjectID)
   	MobileDevice(strBrowserID).MoWindow(strObjectID).CaptureBitmap "ScreenShot.png", True

    
  End Function


	
	'*********************************************************
	' Keyword implementations
	'*********************************************************


Private Function DEVICE_Screen_activate(ByRef objScreen)
      If  objScreen.Exist(4) Then

		Dim Shell 
		Set Shell = CreateObject("Shell.Application")
		'Shell.MinimizeAll 


		MobileDevice("Compact").MoWindow("CETerm - S1").highlight

     DEVICE_Screen_activate = Array (0, "The device has been activated successfully",  "Successfully entered.")

	 end if

End Function

Private Function DEVICE_Screen_Press (ByRef objTEWin,ByVal strKey)
             	If objTEWin.Exist(4) Then
             	Dim strtext,strtext1,strtext2,i
				i = 1
                	If strKey = "ENTER" Then
                        strtext = MobileDevice("Compact").executetermce ("LineGetText",1)
                        objTEWin.Press "0x0D"
                        Do 
				i = i + 1			                        
				wait (1)        
                strtext1=  MobileDevice("Compact").executetermce( "LineGetText",1)
				strtext2=  MobileDevice("Compact").executetermce("RectGetText",9,2,24,80)
				If  instr(1,strtext2,"NEXT WORK",1) Then
					 DEVICE_Screen_Press = Array (0,"Send Key '" & strKey, "Send Key '" & strKey & "' Submitted successfully")
				Exit Function

				End If
				If  i = 15 Then
				 DEVICE_Screen_Press = Array (0,"Send Key '" & strKey, "Send Key '" & strKey & "' Submitted successfully")
			 	Exit function
	
				End If				

                                              Loop while strtext = strtext1 

                                                ElseIf strKey = "F10" Then
                                                                objTEWin.Press "0x79"
                                                ElseIf strKey = "F9" Then
                                                                objTEWin.Press "0x78"
                                                ElseIf strKey = "F8" Then
                                                                objTEWin.Press "0x77"
                                                ElseIf strKey = "F7" Then
                                                                objTEWin.Press "0x76"
                                                ElseIf strKey = "F6" Then
                                                                objTEWin.Press "0x75"
                                                ElseIf strKey = "F5" Then
                                                                objTEWin.Press "0x74"
                                                ElseIf strKey = "F4" Then
                                                                objTEWin.Press "0x73"
                                                ElseIf strKey = "F3" Then
                                                                objTEWin.Press "0x72"
                                                ElseIf strKey = "F2" Then
                                                                objTEWin.Press "0x71"
                                                ElseIf strKey = "F1" Then
                                                                objTEWin.Press "0x70"
                                                ElseIf strKey = "F11" Then
                                                                objTEWin.Press "0x7A"
                                                ElseIf strKey = "F12" Then
                                                                objTEWin.Press "0x7B"
                                                ElseIf strKey = "TAB" Then
                                                                objTEWin.Press "0x09"
                                End If

                                


                                                DEVICE_Screen_Press = Array (0,"Send Key '" & strKey, "Send Key '" & strKey & "' Submitted successfully")
                                Else
                                                DEVICE_Screen_Press = Array (1, "Send Key '" & strKey, "Field '" & objTEWin.GetROProperty("attached text") & "' doesnot Exists.")
                                End If 
                                wait(1)
End Function


Public function DEVICE_Screen_putocccheck(ByRef objScreen,ByVal strValueID1 ) 
     If objScreen.Exist(4) Then
                                
                                Dim message

                message = trim (MobileDevice("Compact").executetermce("LineGetText",1))

                                               if instr(1,message,"RPQA",1) then


                                                
                If (instr(1,message,"SCAN VERIFICATION",1)) then    

				objScreen.Type trim(strValueID1)
				Desktop.CaptureBitmap "ScreenShot.png",True
				reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
				objScreen.Press "0x0D"
   
                DEVICE_Screen_putocccheck = Array (0, "The OCC has been entered", "Successfully entered.")
                                   Exit function
              End if 

             Else 
                                                 
              DEVICE_Screen_putocccheck = Array (0, "The OCC has been entered", "Successfully entered.")
                                     Exit Function

     End if 
End If
DEVICE_Screen_putocccheck = Array (0, "The occ cannot be entered", "Successfully entered.")

End Function


Private Function DEVICE_Screen_RectangleGetText(ByRef objEdit, ByVal strValue,ByVal strValue1,ByVal strValue2)
		If objEdit.Exist(4) Then
                        Dim message , arrTo
                        arrTo = split (strValue1,"_")                           
                        message = trim (MobileDevice("Compact").executetermce("RectGetText",strValue,arrTo(0),strValue,arrTo(1)))
                        Call saveRunValue (strValue2, message)
                        DEVICE_Screen_RectangleGetText = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")
            Else
                                    DEVICE_Screen_RectangleGetText = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
		End If
End Function
    
    
Private Function DEVICE_Screen_RectangleMov(ByRef objEdit, ByVal strValue)
		If objEdit.Exist(4) Then

                        Dim  loc,strValue1

                        strValue1= MobileDevice("Compact").executetermce("LineGetText","3")
        loc=Mid(strValue1,20,6)
            Call saveRunValue (strValue, loc)
                        
                        DEVICE_Screen_RectangleMov = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")
            Else
                                    DEVICE_Screen_RectangleMov = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
		End If
End Function


Private function DEVICE_Screen_rlogocccheck3(ByRef objScreen,strValueID1,strValueID2,strValueID3 ) 
     If  objScreen.Exist(4) Then

		 objScreen.Type trim(strValueID1)
		 wait(1)	
				Desktop.CaptureBitmap "ScreenShot.png",True
					''''''''Amended for review screenshot to be taken for oCC  entered   08/05/2014
				wait(1)
				DEVICE_Screen_Press objScreen , "ENTER"
                  Dim message
                 message = trim(MobileDevice("Compact").executetermce("LineGetText", 12))
									  If instr(1,message,"INVALID",1) then
													 objScreen.Type trim(strValueID2)
														wait(1)
									 ''''''''Amended for review screenshot to be taken for oCC  entered   08/05/2014

											Desktop.CaptureBitmap "ScreenShot.png",True
										wait(1)
										DEVICE_Screen_Press objScreen , "ENTER"
									  message = trim(MobileDevice("Compact").executetermce("LineGetText", 12))
															   If instr(1,message,"INVALID",1) then
															objScreen.Type trim(strValueID3)
														 wait(1)
			  '											'''''''Amended for review screenshot to be taken for oCC  entered   08/05/2014

														  Desktop.CaptureBitmap "ScreenShot.png",True
														 wait (1)

														DEVICE_Screen_Press objScreen , "ENTER"
													Reporter.ReportEvent micPass,"Pallet ID with Random Number","Random Number Entered","ScreenShot.png"

											DEVICE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
				
									Exit function
									else
									   	Reporter.ReportEvent micPass,"Pallet ID with Random Number","Random Number Entered","ScreenShot.png"
           DEVICE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
		   
									   end if 
           else
		   	Reporter.ReportEvent micPass,"Pallet ID with Random Number","Random Number Entered","ScreenShot.png"
           DEVICE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
		   
           Exit function
                                                   end if   			                     
                 else

				 
           DEVICE_Screen_rlogocccheck3 = Array (0, "The OCC has been entered",  "Successfully entered.")
		   

				 	
                 Exit function                                             
    End If



End Function


Private Function DEVICE_Screen_SetTextRandom(ByRef objEdit, ByVal strValueID1)
                   If  objEdit.Exist(4) Then
				Dim i, conc, message1
	
				conc = int(trim(strValueID1)) * 10
                For i = 0 to 9
                                             
				objEdit.Type conc
                objEdit.Press "0x0D"
				' wait (2)
                conc = int(conc) +1
                message1 = trim(MobileDevice("Compact").executetermce("LineGetText", 1))
                                               
				If  instr(1,message1,"INVALID BAY",1) then

				DEVICE_Screen_SetTextRandom = Array (0, "SetText from screen",  "Successfully completed")

                                                             
				Exit function
                Else
                End if 
				DEVICE_Screen_SetTextRandom = Array (0, "SetText from screen",  "Successfully completed")
                Next
                DEVICE_Screen_SetTextRandom = Array (1, "SetText from screen",  "Page Object Not Found")
         End If

End Function



Private Function DEVICE_Screen_SetTextRandomF5(ByRef objEdit, ByVal strValueID1)
            If  objEdit.Exist(4) Then

                Dim  message1,message2, message3, y , var2


For y=0 to 9

            var2 = strValueID1 & y
                                 
                                
                              
                                                                objEdit.Type var2
                                                                'Sunny: Added as per review comments received from HSC. They need screenshot for all the random values which have been tried
                                                                'Amend Start
                                                                                Desktop.CaptureBitmap "ScreenShot.png",True
                                                                                Reporter.ReportEvent micPass,"Pallet ID with Random Number","Random Number Entered","ScreenShot.png"
                                                                'Amend END
                objEdit.Press "0x0D"

                                                                wait (2)
                
                message1 = trim(MobileDevice("Compact").executetermce("LineGetText", 1))
                if (instr(1,message1,"PF5 TO CONTINUE",1)) or (instr(1,message1,"VERIFY THE LOCATION",1)) or (instr(2,message1,"OCC",1)) or (instr(1,message1,"PUTAWAY TRIP LIST",1)) or (instr(1,message1,"RPQA",1))  then
                                                                                                                                If instr(1,message1,"PF5 TO CONTINUE",1) then
f instr(1,message3,"INVALID BAY",1) then



end if


                                                                                                                                                DEVICE_Screen_Press objEdit , PF5
                                                                                                                                                DEVICE_Screen_SetTextRandomF5 = Array (0, "Pallet id set ",  "Successfully completed.")
                                      Exit function       
                                                                                                                                                  else
                                                                                                                                                  DEVICE_Screen_SetTextRandomF5 = Array (0, "Pallet id set ",  "Successfully completed.")
                                       end if 
                                  Exit function
                                                                                                                                  else
                                                                                                                                end if 


                                                                                                                                                                DEVICE_Screen_SetTextRandomF5 = Array (0, "Pallet id set ",  "Successfully completed")
                                                Next
                                                DEVICE_Screen_SetTextRandomF5 = Array (0, "Pallet id set ",  "Successfully completed")
                                                End If

End Function


Private Function DEVICE_Screen_sync(ByRef objEdit, ByVal strValueID1, ByVal strValueID2)
                   If  objEdit.Exist(4) Then

					   Dim arrTo , strtext , i
						



						For i = 1 to 20

						strtext = MobileDevice("Compact").executetermce("LineGetText",strValueID2)

						If instr(1,strtext,strValueID1,1) Then

							 DEVICE_Screen_sync = Array (0, "wait for the screen ",  "screen has come")

                              				exit function

                       					End If

						wait (5)

						next

						DEVICE_Screen_sync = Array (0, "wait for the screen ",  "wrong move")


                                              else


                                                DEVICE_Screen_sync = Array (1, "SetText from screen",  "Page Object Not Found")
        					 End If

End Function


Private Function DEVICE_Screen_Type(ByRef objEdit, ByVal strValue)
		If objEdit.Exist(4) Then 

		objEdit.Type trim(strValue) 
		Desktop.CaptureBitmap "ScreenShot.png",True
        Reporter.ReportEvent micPass,"Value Entered","Value Entered","ScreenShot.png"
		DEVICE_Screen_Type = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")
		Else
			DEVICE_Screen_Type = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
		End If
End Function

Private Function DEVICE_Screen_Typechar(ByRef objEdit, ByVal strValue)
     If objEdit.Exist(4) Then
       If strValue = "&" Then
  
      objEdit.Type chr(38)
  
       End If
    	DEVICE_Screen_Typechar = Array (0, "Set Value '" & strValue & "' in Field", "Value '" & strValue & "' set in the field.")
	  Else
      DEVICE_Screen_Typechar = Array (1, "Set Value '" & strValue & "' in Field", "Field not found")
  	End If
End Function




Private Function DEVICE_Screen_Typefield(ByRef objEdit, ByVal strValue, strValue1)
                   If objEdit.Exist(4) Then

                                   If len(strValue) = int(strValue1) Then
                                                   objEdit.Type trim(strValue)
                                                   
                                                   DEVICE_Screen_Typefield = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")
												   Exit function
                                                   else 

                                                   objEdit.Type trim(strValue)
                                                                objEdit.Press "0x09"
                                                                DEVICE_Screen_Typefield = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")

                                   End If                 
                Else
                                                DEVICE_Screen_Typefield = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
                End If
End Function

 

Private Function DEVICE_Screen_undoactivate(ByRef objScreen)
      If  objScreen.Exist(4) Then

		Dim Shell 
		Set Shell = CreateObject("Shell.Application")
		'Shell.undoMinimizeAll 

     DEVICE_Screen_undoactivate = Array (0, "The device has been deactivated successfully",  "Successfully entered.")

	 end if

End Function


Private Function DEVICE_Window_LineGetText(ByRef objEdit, ByVal strValue,ByVal strValue1)
		If objEdit.Exist(4) Then
		Dim message
		message = trim(MobileDevice("Compact").executetermce("LineGetText",strValue1))
		Call saveRunValue (strValue, message)
		DEVICE_Window_LineGetText = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "'  text taken successfully")
		Else
			DEVICE_Window_LineGetText = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
		End If
End Function

	
																				
			



Private Function DEVICE_Window_ScreenGetText(ByRef objEdit, ByVal strValue)
		If objEdit.Exist(4) Then
		Dim message
		message = trim(objEdit.executetermce("ScreenGetText"))
		Call saveRunValue (strValue, message)
		DEVICE_Window_ScreenGetText = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' text taken successfully")
		Else
			DEVICE_Window_ScreenGetText = Array (1, "Set Value  '" & strValue & "' in  Field", "Text not found")
		End If
End Function


End Class
	



'*********************************************************
' WINDOW KEYWORDS
'*********************************************************
Class WindowKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a Window Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:    the id of the TeWindow in the ObjectRepository
	'           strPageID:         the id of the TeScreen in the ObjectRepository
	'           strObjectID:       the id of the TeField in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
	'*********************************************************
	Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
		Dim objCurrent
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword
		Case "Window_Screen_type"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_type(objCurrent, strParam1)

            
				Case "Window_Screen_minimise"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_minimise(objCurrent, strParam1)

            
			Case "Window_Screen_waitforautomatic"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_waitforautomatic(objCurrent)

			
			Case "Window_Field_clearField"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_clearField(objCurrent)

		
			Case "Window_Start_Putty"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Start_Putty(strParam1,strParam2)


    			Case "Window_Close_Putty"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Close_Putty()

			Case "Window_Abnormal_Close_Putty"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Abnormal_Close_Putty()

			 Case "Window_Abnormal_Close_Simulator"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Abnormal_Close_Simulator()

			Case "Window_Screen_Activate"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_Activate()

			Case "Window_Screen_IfEsc"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_IfEsc(objCurrent)
			
			Case "Window_Screen_AlarmFlag"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_AlarmFlag(objCurrent)
					
			Case "Window_Screen_AlarmFlag_2"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_AlarmFlag_2(objCurrent)
			
			Case "Window_Screen_CheckBatch"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_CheckBatch(objCurrent, strParam1)
			
			Case "Window_Screen_CheckPuttyIP"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_CheckPuttyIP(objCurrent)
			
			Case "Window_Screen_AckAlarmFlag"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_AckAlarmFlag(objCurrent)
			
			Case "Window_Screen_minimise"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_minimise(objCurrent)
			
			Case "Window_Screen_type"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_type(objCurrent, strParam1)

			Case "Window_Start_Simulator"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Start_Simulator()

			Case "Window_Field_Click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_Click(objCurrent)

			Case "Window_Edit_Set"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Edit_Set(objCurrent, strParam1)

			Case "Window_Dialog_Click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Dialog_Click(objCurrent)

			Case "Window_Field_Type"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_Type(objCurrent, strParam1)

			Case "Window_Edit_Click"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Edit_Click(objCurrent)

			Case "Window_Field_ClickWhileOne"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_ClickWhileOne(objCurrent,strParam1)

			Case "Window_Edit_ClickWhileTextFound"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Edit_ClickWhileTextFound(objCurrent,strParam1)

			
			Case "Window_Field_CheckIFText"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_CheckIFText(objCurrent,strParam1)

			Case "Window_Field_ClickWhilemyTextFound"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_ClickWhilemyTextFound(objCurrent,strParam1)

            		Case "Window_Close_WineSimulator"
			arrReturn = Window_Close_WineSimulator()

			Case "Window_Field_ClickWhileOneSpace"
			Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Field_ClickWhileOneSpace(objCurrent,strParam1)


			Case "Window_Screen_GetValueacceptedbomb"
				Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
			arrReturn = Window_Screen_GetValueacceptedbomb(objCurrent, strParam1, strParam2)

			Case "Window_Screen_GetAssignment"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_GetAssignment(objCurrent, strParam1)
			
			Case "Window_Screen_GetTotalQuantity"
			arrReturn = Window_Screen_GetTotalQuantity(objCurrent, strParam1, strParam2,strParam3)
			
			Case "Window_Screen_GetProduct"
			arrReturn = Window_Screen_GetProduct(objCurrent, strParam1)


			Case "Window_Screen_GetValueTGFlag"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_GetValueTGFlag(objCurrent, strParam1)

			Case "Window_Screen_GetValueBombQty"
			'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
			arrReturn = Window_Screen_GetValueBombQty(objCurrent, strParam1, strParam2)
	
           		Case "Window_Screen_GetValueTotalQty"
            		'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
            		arrReturn = Window_Screen_GetValueTotalQty(objCurrent, strParam1) 

			Case "Window_Screen_GetValueRemQty"
                        'Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
        		arrReturn = Window_Screen_GetValueRemQty(objCurrent, strParam1) 

			Case "Window_Screen_GetAllAssignment"
			arrReturn = Window_Screen_GetAllAssignment(objCurrent, strParam1)

			
		Case Else
			Err.Raise 1, "Keyword", strKeyword & "  keyword not found"
			arrReturn = Array(1, "", Err.Description)
		End Select
		Set objCurrent = Nothing
	
		runKeyword = arrReturn
		
			Call captureshot (strBrowserID)

	End Function

'Window("Region Maintenance").WinEdit("Edit").SetSelection


	'*********************************************************
	' Object Repository search
	'*********************************************************



	
	Private Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		If strObjectType = "APP" Then
			Set getQTPObject  = Window(strObjectID)
		ElseIf strObjectType = "Screen" Then
			Set getQTPObject  = Window(strBrowserID)
		ElseIf strObjectType = "Field" Then
			Set getQTPObject  = Window(strPageID).WinObject(strObjectID)
		ElseIf strObjectType = "Edit" Then
			Set getQTPObject  = Window(strPageID).WinEdit(strObjectID)
		ElseIf strObjectType = "Dialog" Then
			Set getQTPObject  = Window(strBrowserID).Dialog(strPageID).WinButton(strObjectID)


			' Window("COMsg_Generater").Dialog("DW_PRJ_4.7.0.0").WinButton("OK").Click

		'Window("DirectWine Main Menu").WinObject("SETTINGS").Click
		End If
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "WebKeyword", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If
	End Function
	
	
		Public Function captureshot (strBrowserID)
    	If Window(strBrowserID).Exist(4) then
		
		Window(strBrowserID).CaptureBitmap "ScreenShot.png", True
		Else
		End if
		End Function




	'*********************************************************
	' Keyword implementations
	'*********************************************************

'****** Browser, Page, Dialog and Frame


Public Function Window_Abnormal_Close_Putty()
    'This Closes the Putty Window.
    Dim AppCount
    If window("PUTTY").Exist(5) Then
		SystemUtil.CloseProcessByName("putty.exe")
		Window_Abnormal_Close_Putty = Array (0, "Close the Putty", "Putty sucessfully closed")
	else
		Window_Abnormal_Close_Putty = Array (0, "Closing the Putty", "Putty doesn't exist")
    End If
End Function



Public Function Window_Abnormal_Close_Simulator()
	 'Dim AppCount
	'If window("DirectWine Main Menu").Exist(5) Then
		SystemUtil.CloseProcessByName("DW_PRJ_4.7.0.0.exe")
		'window("DirectWine Main Menu").Activate
       'window("DirectWine Main Menu").Close
		Window_Abnormal_Close_Simulator = Array (0, "Close the Simulator", "Simulator is closed")
		'else
	'End If
	'Window_Close_Simulator = Array (0, "Close the Simulator", "Simulator is not yet opened")
End Function


Public Function Window_Close_Putty()
    'This Closes the Putty Window.
    Dim AppCount

    If window("PUTTY").Exist(5) Then
	window("PuTTY").Activate
        window("PUTTY").Close
        window("PUTTY").Dialog("PuTTY Exit Confirmation").WinButton("OK").Click
	Window_Close_Putty = Array (0, "Close the Putty", "Putty sucessfully closed")
    else
	Window_Close_Putty = Array (0, "Closing the Putty", "Putty doesn't exist")

    End If
	
End Function




Public Function Window_Close_WineSimulator()
    'This Closes the Simulator Window.

    If Window("DirectWine Main Menu").Exist(0) Then
        Window("DirectWine Main Menu").close
    End If


	Window_Close_WineSimulator = Array (0, "Close the Wine Simulator", "Wine Simulator sucessfully closed")
End Function


Private Function Window_Dialog_Click(ByRef objEdit)

   If objEdit.Exist(4) Then
		objEdit.Click

		Window_Dialog_Click = Array (0, "SetObject", "Wine Simulator Dialog successfully clicked")
	Else
		Window_Dialog_Click = Array (1, "Set Object Failed", "Wine Simulator Dialog failed to click")
	End If
'Window("Select a Region").WinEdit("Edit").Set

End Function


Private Function Window_Edit_Click(ByRef objEdit)

   If objEdit.Exist(4) Then
		objEdit.Click

		Window_Edit_Click = Array (0, "SetObject", "Wine Simulator object successfully Clicked")
	Else
		Window_Edit_Click = Array (1, "Set Object Failed", "Wine Simulator object failed to click")
	End If
'Window("Select a Region").WinEdit("Edit").Set

End Function



Private Function Window_Edit_ClickWhileTextFound(ByRef objEdit,ByVal strValue)

IF objEdit.Exist(4) Then
  Dim val, val2, key1, counter
	key1 = "True"
	counter = 0
	 val = objEdit.GetROProperty("text")
	 val2 = objEdit.GetROProperty("text")
   Do while val <> strValue

				If key1 = "True" then
						objEdit.Type micDwn
						else
						objEdit.Type micUp
				End if
                		'val = Window("Region Maintenance").WinEdit("Edit").GetROProperty("text")
						val = objEdit.GetROProperty("text")
						'Window_Edit_ClickWhileTextFound = Array (0, "getObject passed", "Wine Simulator object successfully found")
						counter = counter+1
					If val = val2 Then
							key1 = "False"
					End If
					If counter = 20 Then
						Window_Edit_ClickWhileTextFound = Array (1, "get Object Failed", "Wine Simulator doesnot have the value")
						Exit Function
					End If
	loop
			Window_Edit_ClickWhileTextFound = Array (0, "getObject passed", "Wine Simulator object successfully found")
	Else
			Window_Edit_ClickWhileTextFound = Array (1, "get Object Failed", "Wine Simulator object not found")
End If

End Function

Private Function Window_Edit_Set(ByRef objEdit, ByVal strValue)

   If objEdit.Exist(4) Then
        
      Dim val

	  val = "CICSTX7"

    Do while val <> strValue

		objEdit.Type micDwn		

		val = Window("Select a Region").WinEdit("Edit").GetROProperty("text")
		Window_Edit_Set = Array (0, "SetObject", "Wine Simulator object successfully set")
    
	loop

	Else
			Window_Edit_Set = Array (1, "Set Object Failed", "Wine Simulator object failed to set")
End If

End Function

Private Function Window_Field_CheckIFText(ByRef objEdit,ByVal strValue)

IF objEdit.Exist(4) Then
  Dim val

	  
		val = objEdit.getroproperty("text")

		If instr(1,val,strValue,1)  Then 
		
		Window_Field_CheckIFText = Array (0, "getObject passed", "the desired text has been found in the text")

		Exit function
	End If

    
	Else
			Window_Field_CheckIFText = Array (1, "get Object Failed", "Wine Simulator object not found")
End If

End Function



Private Function Window_Field_clearField(ByRef objEdit)

   If objEdit.Exist(4) Then

	   Dim i , num  , text
		text = objEdit.getroproperty("text")

		num = len(text)

		For i = 1 to num

		objEdit.type micBack

		Next

		Window_Field_clearField = Array (0, "SetObject", "Wine Simulator object successfully set")
	Else
		Window_Field_clearField = Array (1, "Set Object Failed", "Wine Simulator object failed to set")
	End If


End Function




Private Function Window_Field_Click(ByRef objEdit)

   If objEdit.Exist(4) Then
		objEdit.Click

		Window_Field_Click = Array (0, "Click Object", "Wine Simulator object successfully clicked")
	Else
		Window_Field_Click = Array (1, "Click Object Failed", "Wine Simulator object failed to click")
	End If

End Function





Private Function Window_Field_ClickWhilemyTextFound(ByRef objEdit,ByVal strValue)

IF objEdit.Exist(4) Then
  Dim val

	   val = "0"

	    
val = Window("Transmit CO Messages").WinObject("No of lines").getroproperty("text")

   Do while val <> strValue

	objEdit.Click

		'val = Window("Region Maintenance").WinEdit("Edit").GetROProperty("text")

		val = Window("Transmit CO Messages").WinObject("No of lines").getroproperty("text")
		Window_Field_ClickWhilemyTextFound = Array (0, "getObject passed", "Wine Simulator object successfully found")
		

	loop


	Else
			Window_Field_ClickWhilemyTextFound = Array (1, "get Object Failed", "Wine Simulator object not found")
End If

End Function



    
Private Function Window_Field_ClickWhileOne(ByRef objEdit,ByVal strValue)

   If objEdit.Exist(4) Then
		   Dim val
	
		   val = 0
	
		   Do while val <> strValue
	
				objEdit.Click

	
				val = Window("Transmit CO Messages").WinObject("Lines").getroproperty("text")
				Window_Field_ClickWhileOne = Array (0, "SetObject", "Wine Simulator object successfully Clicked")
	
		loop
	
	
		Else
			Window_Field_ClickWhileOne = Array (1, "Set Object Failed", "Wine Simulator object failed to click")
	End If
'Window("Select a Region").WinEdit("Edit").Set

End Function


Private Function Window_Field_ClickWhileOneSpace(ByRef objEdit,ByVal strValue)
	   Dim val, val1
   If objEdit.Exist(4) Then
    	'Dim val1
		val1 = 	0
		val = 0


       Do while ( val <> strValue AND val1 <> "")
    	objEdit.Click
				val = Window("Transmit CO Messages").WinObject("Lines").getroproperty("text")
				val1 = 	Window("Transmit CO Messages").WinObject("storeno").GetROProperty("text")
				Window_Field_ClickWhileOneSpace = Array (0, "SetObject", "Wine Simulator object successfully Clicked")
		loop
    	Else
			Window_Field_ClickWhileOneSpace = Array (1, "Set Object Failed", "Wine Simulator object failed to click")
	End If
'Window("Select a Region").WinEdit("Edit").Set
End Function



Private Function Window_Field_Type(ByRef objEdit, ByVal strValue)

   If objEdit.Exist(4) Then
		objEdit.type strValue

		Window_Field_Type = Array (0, "SetObject", "Wine Simulator object successfully set")
	Else
		Window_Field_Type = Array (1, "Set Object Failed", "Wine Simulator object failed to set")
	End If
'Window("Select a Region").WinEdit("Edit").Set

End Function

Private function Window_Screen_AckAlarmFlag(ByRef objEdit)

Dim text,line_num,strLine,MyPos, objFSO, objFile,MyPos1,data, myarray, myarray1
'Dim myarray(),myarray1()
	If Window("PUTTY").Exist(5) Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"
		Window("Notepad").Activate
		'Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		'Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
		Window("Notepad").Maximize
		Window("Notepad").WinEditor("Edit").Type micCtrlDwn + "v" + micCtrlUp
		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")
		wait(6)
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
				line_num = line_num+1
						If  instr(1,strLine,"[ALARM]")<> 0 Then
							wait(2)
							Window("PUTTY").Type  micReturn
							'objEdit.Type "Y"
							wait(2)
							
							objFile.Close
							objFSO.DeleteFile("D:\ABC.txt")
							Set objFSO = nothing
							Set objFile = nothing
							
							SystemUtil.CloseProcessByName("Notepad.exe")
							Window("PUTTY").Activate
							Window("PUTTY").Activate micRightBtn
							Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
							SystemUtil.Run "notepad.exe","","","open"
							Window("Notepad").Activate
							'Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
							'Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
							Window("Notepad").Maximize
							Window("Notepad").WinEditor("Edit").Type micCtrlDwn + "v" + micCtrlUp
							Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
							Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
							Window("Notepad").Dialog("Save As").WinButton("Save").Click
							wait (6)
							SystemUtil.CloseProcessByName("Notepad.exe")
							wait(6)
							Set objFSO = CreateObject("Scripting.FileSystemObject")
							Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
							line_num = 0
							Do Until objFile.AtEndOfStream
								strLine = objFile.ReadLine
								line_num = line_num+1
								If  instr(1,strLine,"Press ENTER to Acknowledge") <> 0 Then
								wait(2)
                                Window("PUTTY").Type micReturn
								'objEdit.Type micReturn
								wait(2)
								'Window("PUTTY").Type micReturn
								objFile.Close
								objFSO.DeleteFile("D:\ABC.txt")
								Set objFSO = nothing
								Set objFile = nothing
								Window_Screen_AckAlarmFlag = Array (0, "screen closed",  "Successfully completed.")
								exit function						
								End If	
                          	Loop
							Window_Screen_AckAlarmFlag = Array (0, "screen closed",  "Warning/Error message didn't came.")
                         End If	
				Loop			
			
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing
		Window_Screen_AckAlarmFlag = Array (0, "Warning/Error message didn't came",  "No Error screen.")
   Else
		Window_Screen_AckAlarmFlag = Array (1, "Object",  " Not Found")
  End If

End Function


Public Function Window_Screen_Activate()
    	'This Closes the Putty Window.
 		window("PUTTY").Activate

		Window_Screen_Activate = Array (0, "Activate the Putty", "Putty Activated successfully")
End Function



Private function Window_Screen_AlarmFlag(ByRef objEdit)

Dim text,line_num,strLine,MyPos, objFSO, objFile,MyPos1,data, myarray, myarray1
'Dim myarray(),myarray1()
	If Window("PUTTY").Exist Then
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		
		If objFSO.FileExists("D:\ABC.txt") Then
		    objFSO.DeleteFile("D:\ABC.txt")		
		End If
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"
		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
		Window("Notepad").Maximize
		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")
		wait(6)
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
				line_num = line_num+1
						If  instr(1,strLine,"Alarm")<> 0 Then
							wait(2)
							Window("PUTTY").Type "Y"
							'objEdit.Type "Y"
							wait(2)
							
							objFile.Close
							objFSO.DeleteFile("D:\ABC.txt")
							Set objFSO = nothing
							Set objFile = nothing
							
							SystemUtil.CloseProcessByName("Notepad.exe")
							Window("PUTTY").Activate
							Window("PUTTY").Activate micRightBtn
							Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
							SystemUtil.Run "notepad.exe","","","open"
							Window("Notepad").Activate
							Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
							Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
							Window("Notepad").Maximize
							Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
							Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
							Window("Notepad").Dialog("Save As").WinButton("Save").Click
							wait (6)
							SystemUtil.CloseProcessByName("Notepad.exe")
							wait(6)
							Set objFSO = CreateObject("Scripting.FileSystemObject")
							Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
							line_num = 0
							Do Until objFile.AtEndOfStream
								strLine = objFile.ReadLine
								line_num = line_num+1
								If  instr(1,strLine,"Flag")<> 0 Then
								wait(2)
										
								Window("PUTTY").Type micReturn
								'objEdit.Type micReturn
								wait(2)
								'Window("PUTTY").Type micReturn
								objFile.Close
								objFSO.DeleteFile("D:\ABC.txt")
								Set objFSO = nothing
								Set objFile = nothing
														
							Window_Screen_AlarmFlag = Array (0, "screen closed",  "Successfully completed.")
							exit function						
								End If	
                          	Loop


				elseIf instr(1,strLine,"Flag")<> 0 Then
								wait(2)
										
								Window("PUTTY").Type micReturn
								'objEdit.Type micReturn
								wait(2)
								'Window("PUTTY").Type micReturn
								objFile.Close
								objFSO.DeleteFile("D:\ABC.txt")
								Set objFSO = nothing
								Set objFile = nothing
														
							Window_Screen_AlarmFlag = Array (0, "screen closed",  "Successfully completed.")
							exit function						
								
                         End If	
				Loop			
			
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing
		call saveRunValue (strValueID1,myarray1)
		Window_Screen_AlarmFlag = Array (0, "screen closed",  "Successfully completed.")
   Else
		Window_Screen_AlarmFlag = Array (1, "Object",  " Not Found")
  End If

End Function




Private function Window_Screen_AlarmFlag_2(ByRef objEdit)

		Dim text,line_num,strLine,MyPos, objFSO, objFile,MyPos1,data, myarray, myarray1

	If Window("PUTTY").Exist(5) Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"
		Window("Notepad").Activate
		'Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		'Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
		Window("Notepad").Maximize
		Window("Notepad").WinEditor("Edit").Type micCtrlDwn + "v" + micCtrlUp
		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")
		wait(6)
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
				line_num = line_num+1
						If  instr(1,strLine,"Alarm")<> 0 Then
							wait(2)
							Window("PUTTY").Type "Y"
							'objEdit.Type "Y"
							wait(2)
							
							objFile.Close
							objFSO.DeleteFile("D:\ABC.txt")
							Set objFSO = nothing
							Set objFile = nothing
							
							SystemUtil.CloseProcessByName("Notepad.exe")
							Window("PUTTY").Activate
							Window("PUTTY").Activate micRightBtn
							Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
							SystemUtil.Run "notepad.exe","","","open"
							Window("Notepad").Activate
							'Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
							'Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
							Window("Notepad").Maximize
							Window("Notepad").WinEditor("Edit").Type micCtrlDwn + "v" + micCtrlUp
							Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
							Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
							Window("Notepad").Dialog("Save As").WinButton("Save").Click
							wait (6)
							SystemUtil.CloseProcessByName("Notepad.exe")
							wait(6)
							Set objFSO = CreateObject("Scripting.FileSystemObject")
							Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
							line_num = 0
							Do Until objFile.AtEndOfStream
								strLine = objFile.ReadLine
								line_num = line_num+1
								If  instr(1,strLine,"Critical")<> 0 Then
								wait(2)
                                Window("PUTTY").Type micReturn
								'objEdit.Type micReturn
								wait(2)
								'Window("PUTTY").Type micReturn
								objFile.Close
								objFSO.DeleteFile("D:\ABC.txt")
								Set objFSO = nothing
								Set objFile = nothing
								Window_Screen_AlarmFlag = Array (0, "screen closed",  "Successfully completed.")
								exit function						
								End If	
							Loop
							Window_Screen_AlarmFlag = Array (0, "screen closed",  "Warning/Error message didn't came.")
                         End If	
				Loop			
			
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing
		Window_Screen_AlarmFlag = Array (0, "Warning/Error message didn't came",  "No Error screen.")
   Else
		Window_Screen_AlarmFlag = Array (1, "Object",  " Not Found")
  End If

End Function


Private function Window_Screen_CheckBatch (ByRef objEdit, ByVal strValueID1)
Dim text,line_num,strLine,MyPos, objFSO, objFile
	If Window("PUTTY").Exist Then
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		
		If objFSO.FileExists("D:\ABC.txt") Then
		    objFSO.DeleteFile("D:\ABC.txt")		
		End If

		
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"

		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"

		Window("Notepad").Maximize


		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")

		wait(6)

		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)

		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
    			'msgbox( strLine)
				line_num = line_num+1
						If  instr(1,strLine,"Bat")<> 0 Then
								MyPos = instr(1,strLine,"Bat")
								'Msgbox "Line No: " &line_num& " Position: "&MyPos
								Exit Do
								
						End If
			Loop
			strLine = objFile.ReadLine
			strLine = objFile.ReadLine
			text=trim(mid(strLine,62,3))
			'Msgbox text
							
			
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing 
		
		If text<>trim(strValueID1) Then
			'call saveRunValue (strValueID1,text)
			Window_Screen_CheckBatch = Array (0, "Batch not available",  "Successfully completed.")

		Else	
			Window_Screen_CheckBatch = Array (1, "Batch is available",  "Batch is available")

			
		End If
		
		
   Else
		Window_Screen_CheckBatch = Array (1, "Object",  "Object not found")
  End If

End Function


Public function Window_Screen_CheckPuttyIP(ByRef objEdit)

Window_Screen_CheckPuttyIP = Array (1, "Login screen",  "Login screen not came")

Dim text,line_num,strLine,MyPos, objFSO, objFile
	If Window("PUTTY").Exist Then
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		
		If objFSO.FileExists("D:\ABC.txt") Then
		    objFSO.DeleteFile("D:\ABC.txt")		
		End If

		
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"

		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"

		Window("Notepad").Maximize


		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")

		wait(6)

		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
			'msgbox "1"
		line_num = 0
			Do Until objFile.AtEndOfStream
				'msgbox "2"
				strLine = objFile.ReadLine
    			
				line_num = line_num+1
						If  instr(1,strLine,"ogin")<> 0 Then
								
								'Msgbox "3"
							Window_Screen_CheckPuttyIP = Array (0, "Putty Login Scren Opened",  "Successfully completed.")	
							objFile.Close
							objFSO.DeleteFile("D:\ABC.txt")
							Set objFSO = nothing
							Set objFile = nothing 	
								
								
								Exit Do
								
						End If
			Loop
								
		
			
   Else
		Window_Screen_CheckPuttyIP = Array (1, "Putty not opened",  "Object not found")
  End If

If Dialog("PuTTY Fatal Error").Exist Then
	
	Dialog("PuTTY Fatal Error").Close

End If

If Window("PuTTY (inactive)").Exist then

Window("PuTTY (inactive)").Close

End if



End Function





Private function Window_Screen_GetAllAssignment(ByRef objEdit, ByVal strValueID1)

Dim text,line_num,strLine,MyPos, objFSO, objFile,MyPos1,data, myarray, myarray1
'Dim myarray(),myarray1()
	If Window("PUTTY").Exist Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"
		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
		Window("Notepad").Maximize
		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")
		wait(6)
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
				line_num = line_num+1
						If  instr(1,strLine,"The Assignment No")<> 0 Then
								MyPos = instr(1,strLine,"The Assignment No")
'									Msgbox "Line No: " &line_num& " Position: "&MyPos
									Exit do
								Else If instr(1,strLine,"End of Script")<> 0 Then
								MyPos1 = instr(1,strLine,"End of Script")
'								Msgbox "Line No: " &line_num& " Position: "&MyPos1
								End If
                          End If
		Loop
			line_num = line_num+1
data = objFile.ReadAll
myarray = split(data,"End")
myarray1 = split(myarray(0), chr(13))
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing
		call saveRunValue (strValueID1,myarray1)
		Window_Screen_GetAllAssignment = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   Else
		Window_Screen_GetAllAssignment = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If

End Function



Private function Window_Screen_GetAssignment (ByRef objEdit, ByVal strValueID1)

Dim a,b, s , text


  If Window("PUTTY").Exist Then

                a=Window("PUTTY").GetVisibleText

                a = Replace(a, Chr(13), vbnullstring)

                b = split(a,":",-1,1)
                s = b(1)


                text = int(trim(left(s,10)))
                'print text
                call saveRunValue (strValueID1,text)

                Window_Screen_GetAssignment = Array (0, "Get Assignment from screen",  "Successfully completed.")
   Else
                Window_Screen_GetAssignment = Array (1, "Get Assignment from screen",  "Assignment Not Found")
  End If
                                
End Function





Private function Window_Screen_GetProduct(ByRef objEdit, ByVal strValueID1)

Dim text, line_num, strLine, MyPos, objFSO, objFile, nova, num, final, i, finquant, hopps, j, k, quant,valdone , remain, val1,jumpvar,jumps

                                Set objedit = Window("PUTTY")




                Window("PUTTY").Activate
                wait (2)

				Set objFSO = CreateObject("Scripting.FileSystemObject")
		
				If objFSO.FileExists("D:\ABC.txt") Then
				    objFSO.DeleteFile("D:\ABC.txt")		
				End If



                                If Window("PUTTY").Exist Then
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                Window("PUTTY").Activate
                                Window("PUTTY").Activate micRightBtn
                                Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
                                SystemUtil.Run "notepad.exe","","","open"
                                Window("Notepad").Activate
                                Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
                                Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
                                Window("Notepad").Maximize
				wait(3)	
                                Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
				Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
				Window("Notepad").Dialog("Save As").WinButton("Save").Click
                                wait (6)
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                wait(6)

                                Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
                                line_num = 0
                                                Do Until objFile.AtEndOfStream
                                                                strLine = objFile.ReadLine
                                                                line_num = line_num+1
                                                                                                If  instr(1,strLine,"Number of Picks")<> 0 Then
                                                                                                MyPos = instr(1,strLine,"Number of Picks")
                                                                                                                                '               Msgbox "Line No: " &line_num& " Position: "&MyPos
                                                                                                                                                Exit do
                                                                                                                                                
                          End If
                                                Loop




                                text=trim(mid(strLine,72,4))
                                                

                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing
                                Window_Screen_GetProduct = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   Else
                                Window_Screen_GetProduct = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If


hopps = text / 13


If text < 13 Then
                hopps = 1
End If

remain = text mod 13

If int(remain) = int(0) Then

hopps = int(hopps) - 1
else


End If

For j = 1 to hopps

'
                If Window("PUTTY").Exist Then
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                Window("PUTTY").Activate
                                Window("PUTTY").Activate micRightBtn
                                Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
                                SystemUtil.Run "notepad.exe","","","open"
                                Window("Notepad").Activate
                                Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
                                Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
                                Window("Notepad").Maximize
				wait(3)
				Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
                               ' Window("Notepad").WinMenu("Menu").Select "File;Save          Ctrl+S"
				wait(3)
                                Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
                                Window("Notepad").Dialog("Save As").WinButton("Save").Click
                                wait (6)
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                wait(6)
                                Set objFSO = CreateObject("Scripting.FileSystemObject")
                                Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
                                line_num = 0
                                                Do Until objFile.AtEndOfStream
                                                                strLine = objFile.ReadLine
                                                                line_num = line_num+1



                                                                                If  instr(1,strLine,"Pack Description")<> 0 Then
                                                                                                MyPos = instr(1,strLine,"Pack Description")
                                                                                                                                                'Msgbox "Line No: " &line_num& " Position: "&MyPos
                                                                                                                                                Exit do
                                                                                                                                                
                          End If



                                Loop


                nova  = line_num + 14
                jumpvar = line_num


                                                                                                                                For k = line_num to nova

                                                                                                                                                strLine = objFile.ReadLine
                                                                                                                                                                line_num = line_num+1

                                                                                                                                                                If  instr(1,strLine,strValueId1)<> 0 Then

                                                                                                                                                                jumps = line_num - jumpvar - 2
                                                                                                                                                                For i = 1 to jumps

Window("PUTTY").Type micDwn              
wait (1)





                                                                                                                                                Next
                                                                                                                                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing

                                Window_Screen_GetProduct = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
                                Exit function

                                                                                                                                                Exit for

                                                                                                                                                                                end if 
                            
                                                                                                                                Next
'msgbox finquant
                Window("PUTTY").Type "N"

                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing


           Else
                                Window_Screen_GetProduct = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If




Next



Window("PUTTY").Type "N"


                
                If Window("PUTTY").Exist Then
                                                SystemUtil.CloseProcessByName("Notepad.exe")
                                                Window("PUTTY").Activate
                                                Window("PUTTY").Activate micRightBtn
                                                Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
                                                SystemUtil.Run "notepad.exe","","","open"
                                                Window("Notepad").Activate
                                                Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
                                                Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
                                                Window("Notepad").Maximize
						wait(3)
						Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
                                               ' Window("Notepad").WinMenu("Menu").Select "File;Save          Ctrl+S"
						wait(3)
                                                Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
                                                Window("Notepad").Dialog("Save As").WinButton("Save").Click
                                                wait (6)
                                                SystemUtil.CloseProcessByName("Notepad.exe")
                                                wait(6)
                                                Set objFSO = CreateObject("Scripting.FileSystemObject")
                                                Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
                                                line_num = 0
                                                                Do Until objFile.AtEndOfStream
                                                                                strLine = objFile.ReadLine
                                                                                line_num = line_num+1
                
                
                
                                                                                                If  instr(1,strLine,"Pack Description")<> 0 Then
                                                                                                                MyPos = instr(1,strLine,"Pack Description")
                                                                                                                                                                'Msgbox "Line No: " &line_num& " Position: "&MyPos
                                                                                                                                                                Exit do
                                                                                                                                                                                                                                                                
                                                                                                                  End If
                
                
                
                                                Loop
                
                If text > 13 and int(remain) = 0Then
                                                val1 = line_num
                
                                else 
                                val1 = 14 - int(remain) + line_num
end if 



                If text > 13 then


                                                                nova  = line_num + 14
                                
                
                                
                
                
                For k = line_num to nova

                                                                                                                                                strLine = objFile.ReadLine
                                                                                                                                                                line_num = line_num+1

                                                                                                                                                                If  instr(1,strLine,strValueId1)<> 0 Then

                                                                                                                                                                jumps = line_num - jumpvar - 2
                                                                                                                                                                For i = 1 to jumps

Window("PUTTY").Type micDwn              
wait (1)


                                                                                                                                                Next

                                                                                                                                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing

                                                                                                                                                Window_Screen_GetProduct = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
Exit function

                                                                                                                                                Exit for

                                                                                                                                                                                end if 
                            
                                                                                                                                Next

End If




                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing
                                Window_Screen_GetProduct = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   
                                
  

end if 


End Function





Private function Window_Screen_GetTotalQuantity(ByRef objEdit, ByVal strValueID1, ByVal strValueID2,ByVal strValueID3)

Window_Screen_GetTotalQuantity = Array (1, "Get Total Qty Value from screen",  " Not Found")

Dim text, line_num, strLine, MyPos, objFSO, objFile, nova, num, final, i, finquant, hopps, j, k, quant,valdone , remain, val1

'strValueID1 = array("11999003","11999409","")

'	If Window("PUTTY").Exist Then
		Set objedit = Window("PUTTY")
		
		num = ubound(strValueID1)
'msgbox num
		final = array("0","0","0","0","0","0","0","0","0","0")

		Set objFSO = CreateObject("Scripting.FileSystemObject")
		
		If objFSO.FileExists("D:\ABC.txt") Then
		    objFSO.DeleteFile("D:\ABC.txt")		
		End If

For i = 0 to num -1
Set objedit = Window("PUTTY")
valdone =  trim(strValueID1(i))
	Window("PUTTY").Activate
	wait (2)
	Window("PUTTY").type int(valdone)

	wait (4)
	objEdit.type micReturn
	wait (2)
	objEdit.type "D"
	wait (3)

	finquant = 0
		If Window("PUTTY").Exist Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"
		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
		Window("Notepad").Maximize
		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)

		SystemUtil.CloseProcessByName("Notepad.exe")
		wait(6)

		Set objFSO = CreateObject("Scripting.FileSystemObject")

		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)

		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine

				line_num = line_num+1
						If  instr(1,strLine,"Number of Picks")<> 0 Then
						MyPos = instr(1,strLine,"Number of Picks")
								'	Msgbox "Line No: " &line_num& " Position: "&MyPos

									Exit do
                                							
                          End If
			Loop




		text=trim(mid(strLine,72,4))
		

		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")

		Set objFSO = nothing
		Set objFile = nothing

		Window_Screen_GetTotalQuantity = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   Else
		Window_Screen_GetTotalQuantity = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If


hopps = text / 13


If text < 13 Then
	hopps = 1
End If

remain = text mod 13

If int(remain) = int(0) Then

hopps = int(hopps) - 1
else


End If

For j = 1 to hopps



	If Window("PUTTY").Exist Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate

		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"
		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
		Window("Notepad").Maximize
		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")
		wait(6)
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
				line_num = line_num+1


			If  instr(1,strLine,"Pack Description")<> 0 Then
						MyPos = instr(1,strLine,"Pack Description")
									'Msgbox "Line No: " &line_num& " Position: "&MyPos
									Exit do
                                							
                        End If

		Loop

		nova  = line_num + 14
			For k = line_num to nova

				strLine = objFile.ReadLine
					line_num = line_num+1

										If  instr(1,strLine,strValueId3)<> 0 Then

											quant=trim(mid(strLine,13,4))
											finquant = quant + finquant

											end if 
                            
								Next
'msgbox finquant
	Window("PUTTY").Type "N"

		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing
		Window_Screen_GetTotalQuantity = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   Else
		Window_Screen_GetTotalQuantity = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If




Next



Window("PUTTY").Type "N"


	
	If Window("PUTTY").Exist Then
			SystemUtil.CloseProcessByName("Notepad.exe")
			Window("PUTTY").Activate
			Window("PUTTY").Activate micRightBtn
			Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
			SystemUtil.Run "notepad.exe","","","open"
			Window("Notepad").Activate
			Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
			Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
			Window("Notepad").Maximize
			Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
			Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
			Window("Notepad").Dialog("Save As").WinButton("Save").Click
			wait (6)
			SystemUtil.CloseProcessByName("Notepad.exe")
			wait(6)
			Set objFSO = CreateObject("Scripting.FileSystemObject")
			Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
			line_num = 0
				Do Until objFile.AtEndOfStream
					strLine = objFile.ReadLine
					line_num = line_num+1
	
	
	
						If  instr(1,strLine,"Pack Description")<> 0 Then
							MyPos = instr(1,strLine,"Pack Description")
										'Msgbox "Line No: " &line_num& " Position: "&MyPos
										Exit do
																
							  End If
	
	
	
			Loop
	
	If text > 13 and int(remain) = 0Then
        			val1 = line_num
	
		else 
		val1 = 14 - int(remain) + line_num
end if 



	If text > 13 then


				nova  = line_num + 14
		
	
		
	
	
	
									For k = line_num to nova
	
										strLine = objFile.ReadLine
											line_num = line_num+1
	
											If line_num > val1 Then
		
												If  instr(1,strLine,strValueId3)<> 0 Then
		
													quant=trim(mid(strLine,13,4))
													finquant = quant + finquant
		
											End If
												end if 
	
	
	
										
								
									Next
	'msgbox finquant
End If




	

		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing
		Window_Screen_GetTotalQuantity = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   
		
  
'Window("PUTTY").Type "N"
end if 



	objEdit.type micEsc


	wait(5)

	objEdit.type "F"

	wait (3)

	final(i) = final(i) + finquant

	Next


call saveRunValue (strValueID2,final)

'Window_Screen_GetTotalQuantity = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
'   Else
'		Window_Screen_GetTotalQuantity = Array (1, "Get Total Qty Value from screen",  " Not Found")
'  End If

End Function








Private function Window_Screen_GetValueacceptedbomb (ByRef objEdit, ByVal strValueID1, ByVal strValueID2)
Dim text,line_num,strLine,MyPos, objFSO, objFile, text1

text = 0
text1 = 0
                If Window("PUTTY").Exist Then
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                Window("PUTTY").Activate
                                Window("PUTTY").Activate micRightBtn
                                Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
                                SystemUtil.Run "notepad.exe","","","open"

                                Window("Notepad").Activate
                                wait (3)
                                'Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
                                'wait (3)
                                'Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"
				Window("Notepad").Maximize
				Window("Notepad").WinEditor("Edit").Type micCtrlDwn + "v" + micCtrlUp
 				wait (2)

                                'Window("Notepad").WinMenu("Menu").Select "File;Save          Ctrl+S"
				Window("Notepad").WinEditor("Edit").Type micCtrlDwn + "s" + micCtrlUp
                                wait(3)
                                Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
                                Window("Notepad").Dialog("Save As").WinButton("Save").Click
                                wait (6)
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                wait(6)
                                Set objFSO = CreateObject("Scripting.FileSystemObject")
                                Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
                                line_num = 0
                                                Do Until objFile.AtEndOfStream
                                                                strLine = objFile.ReadLine
    '                                           msgbox( strLine)
                                                                line_num = line_num+1
                                                If  instr(1,strLine,"asgns with")<> 0 Then
                                                MyPos = instr(1,strLine,"asgns with")
                                                
                                           
												'Msgbox "Line No: " &line_num& " Position: "&MyPos
												text=trim(mid(strLine,7,2))
												text1=trim(mid(strLine,10,2))
																				 																														
										'Msgbox text

											
											End If
											
                                                Loop
                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing

								If text <> 0 and text1<> 0	 Then
	
	
									call saveRunValue (strValueID1,text)
																																call saveRunValue (strValueID2,text1)
    																																	Window_Screen_GetValueacceptedbomb = Array (0, "Get  Value from screen",  "Successfully completed.")
																																		else
								   
									Window_Screen_GetValueacceptedbomb = Array (1, "Get  Value from screen",  "Auto Bomb not triggered")
								End If
   Else
                                Window_Screen_GetValueacceptedbomb = Array (1, "Get  Value from screen",  "Flag Not Found")
  End If

End Function



Private function Window_Screen_GetValueBombQty (ByRef objEdit, ByVal strValueID1,ByVal strValueID2)
Dim text,line_num,strLine,MyPos, objFSO, objFile
	If Window("PUTTY").Exist Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"

		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"

		Window("Notepad").Maximize


		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")

		wait(6)

		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
    '			msgbox( strLine)
				line_num = line_num+1
						If  instr(1,strLine, strValueID1)<> 0 Then
								MyPos = instr(1,strLine,  strValueID1)
								Msgbox "Line No: " &line_num& " Position: "&MyPos
								text=trim(mid(strLine,14,3))
								Msgbox text
						End If
			Loop
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing 
		text=int(text)
		call saveRunValue (strValueID2,text)
		Window_Screen_GetValueBombQty = Array (0, "Bomb Qty Value from screen",  "Successfully completed.")
   Else
		Window_Screen_GetValueBombQty = Array (1, "Bomb QtyValue from screen",  "Flag Not Found")
  End If

End Function



Private function Window_Screen_GetValueRemQty (ByRef objEdit, ByVal strValueID1)
Dim text,line_num,strLine,MyPos, objFSO, objFile
                If Window("PUTTY").Exist Then
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                Window("PUTTY").Activate
                                Window("PUTTY").Activate micRightBtn
                                Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
                                SystemUtil.Run "notepad.exe","","","open"

                                Window("Notepad").Activate
                                Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
                                Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"

                                Window("Notepad").Maximize


                                Window("Notepad").WinMenu("Menu").Select "File;Save          Ctrl+S"
                                Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
                                Window("Notepad").Dialog("Save As").WinButton("Save").Click
                                wait (6)
                                SystemUtil.CloseProcessByName("Notepad.exe")

                                wait(6)

                                Set objFSO = CreateObject("Scripting.FileSystemObject")
                                Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
                                line_num = 0
                                                Do Until objFile.AtEndOfStream
                                                                strLine = objFile.ReadLine
    '                                           msgbox( strLine)
                                                                line_num = line_num+1
                                                                                                If  instr(1,strLine,"Rem Qty")<> 0 Then
                                                                                                                                MyPos = instr(1,strLine,"Rem Qty")
                                                                                                                                'Msgbox "Line No: " &line_num& " Position: "&MyPos
                                                                                                                                text=trim(mid(strLine,33,3))
                                                                                                                                'Msgbox text
                                                                                                End If
                                                Loop
                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing 
                                call saveRunValue (strValueID1,text)
                                Window_Screen_GetValueRemQty = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   Else
                                Window_Screen_GetValueRemQty = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If

End Function



Private function Window_Screen_GetValueTGFlag (ByRef objEdit, ByVal strValueID1)
Dim text,line_num,strLine,MyPos, objFSO, objFile
	If Window("PUTTY").Exist Then
		SystemUtil.CloseProcessByName("Notepad.exe")
		Window("PUTTY").Activate
		Window("PUTTY").Activate micRightBtn
		Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
		SystemUtil.Run "notepad.exe","","","open"

		Window("Notepad").Activate
		Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
		Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"

		Window("Notepad").Maximize


		Window("Notepad").WinMenu("Menu").Select "File;Save	Ctrl+S"
		Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
		Window("Notepad").Dialog("Save As").WinButton("Save").Click
		wait (6)
		SystemUtil.CloseProcessByName("Notepad.exe")

		wait(6)

		Set objFSO = CreateObject("Scripting.FileSystemObject")
		Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
		line_num = 0
			Do Until objFile.AtEndOfStream
				strLine = objFile.ReadLine
    '			msgbox( strLine)
				line_num = line_num+1
						If  instr(1,strLine,"TF Flag")<> 0 Then
								MyPos = instr(1,strLine,"TF Flag")
								'Msgbox "Line No: " &line_num& " Position: "&MyPos
								text=trim(mid(strLine,31,1))
								'Msgbox text
						End If
			Loop
		objFile.Close
		objFSO.DeleteFile("D:\ABC.txt")
		Set objFSO = nothing
		Set objFile = nothing 
		call saveRunValue (strValueID1,text)
		Window_Screen_GetValueTGFlag = Array (0, "Get Flag Value from screen",  "Successfully completed.")
   Else
		Window_Screen_GetValueTGFlag = Array (1, "Get Flag Value from screen",  "Flag Not Found")
  End If

End Function





Private function Window_Screen_GetValueTotalQty (ByRef objEdit, ByVal strValueID1)
Dim text,line_num,strLine,MyPos, objFSO, objFile
                If Window("PUTTY").Exist Then
                                SystemUtil.CloseProcessByName("Notepad.exe")
                                Window("PUTTY").Activate
                                Window("PUTTY").Activate micRightBtn
                                Window("PUTTY").WinMenu("SystemMenu").Select "Copy All to Clipboard"
                                SystemUtil.Run "notepad.exe","","","open"

                                Window("Notepad").Activate
                                Window("Notepad").WinEditor("Edit").Click 181, 66, micRightBtn
                                Window("Notepad").WinEditor("Edit").WinMenu("ContextMenu").Select "Paste"

                                Window("Notepad").Maximize


                                Window("Notepad").WinMenu("Menu").Select "File;Save          Ctrl+S"
                                Window("Notepad").Dialog("Save As").WinEdit("Edit").Set "D:\ABC.txt"
                                Window("Notepad").Dialog("Save As").WinButton("Save").Click
                                wait (6)
                                SystemUtil.CloseProcessByName("Notepad.exe")

                                wait(6)

                                Set objFSO = CreateObject("Scripting.FileSystemObject")
                                Set objFile = objFSO.OpenTextFile("D:\ABC.txt", 1)
                                line_num = 0
                                                Do Until objFile.AtEndOfStream
                                                                strLine = objFile.ReadLine
    '                                           msgbox( strLine)
                                                                line_num = line_num+1
                                                                                                If  instr(1,strLine,"Total Qty")<> 0 Then
                                                                                                                                MyPos = instr(1,strLine,"Total Qty")
                                                                                                                                'Msgbox "Line No: " &line_num& " Position: "&MyPos
                                                                                                                                text=trim(mid(strLine,33,3))
                                                                                                                                'Msgbox text
                                                                                                End If
                                                Loop
                                objFile.Close
                                objFSO.DeleteFile("D:\ABC.txt")
                                Set objFSO = nothing
                                Set objFile = nothing 
                                call saveRunValue (strValueID1,text)
                                Window_Screen_GetValueTotalQty = Array (0, "Get Total Qty Value from screen",  "Successfully completed.")
   Else
                                Window_Screen_GetValueTotalQty = Array (1, "Get Total Qty Value from screen",  " Not Found")
  End If

End Function


Public function Window_Screen_IfEsc(ByRef objEdit) 

   window("PUTTY").Activate

If window("PUTTY").Exist(2)  Then

  
                                                   Dim message
                                                   'objEdit.Activate

                message = window("PUTTY").GetVisibleText
                                                                                

                                                                                                If (instr(1,message,"NOBOMB",1) OR  instr(1,message,"NOBCHB",1)OR  instr(1,message,"NOBOHB",1)OR  instr(1,message,"NOB",1))Then
                                                                                                'If instr(1,message,"[ALARM]",1) Then
                                                                                                                window("PUTTY").Activate
                                                                                                                window("PUTTY").Type micEsc
                                                                                                                wait(3)
                                                                                                                window("PUTTY").Activate
                                                                                                                window("PUTTY").Type "y"
                                                                                                                wait(3)
                                                                                                                window("PUTTY").Activate
                                                                                                                'window("PUTTY").Type micReturn
                                                                                                                wait(3)


                                                                                                                Window_Screen_IfEsc = Array (0, "The extra screen arrives", " ESC pressed successfully")

                                                                                                                Exit function

                                                                                                End If
                                   
                                Window_Screen_IfEsc = Array (0, "The extra screen arrived", " ESC pressed successfully")
                Else
                                                Window_Screen_IfEsc = Array (1, "The extra screen arrived", " Page object not found")
                End If


End Function



 Private Function Window_Screen_minimise(ByRef objEdit ,ByRef strValue)
	 
	   If objEdit.Exist(4) Then

		   If  strValue = "max" Then

			   objEdit.Maximize

			   Window_Screen_minimise = Array (0, "Window is maximised", "successful.")
						Exit function


			   else if 	  strValue = "min"  then
	
           			   	objEdit.Minimize

						Window_Screen_minimise = Array (0, "Window is minimised", "successful.")
						Exit function

			end if

			end if

		
	Else
			Window_Screen_minimise = Array (1, "Window could not minimised", "Field not found")
	End If
    End Function



	Private Function Window_Screen_type(ByRef objEdit, ByRef strValue)
	 
	   If objEdit.Exist(4) Then
		   If strValue = "ENTER" Then
         wait(2)
           objEdit.Type micReturn

        elseIf strValue = "Down" Then
         wait(2)
        objEdit.Type micDwn 

        elseIf strValue = "Up" Then
         wait(2)
        objEdit.Type micUp
        
        elseIf strValue = "Right" Then
         wait(2)
        objEdit.Type micRight 
        
        elseIf strValue = "Left" Then
         wait(2)
        objEdit.Type micLeft 

        elseIf strValue = "SPACE" Then
         wait(2)
        objEdit.Type " "


        elseIf strValue = "Esc" Then
         wait(2)
        objEdit.Type micEsc
        else

               
		   
		objEdit.Type trim(strValue)

		End If

		Window_Screen_type = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")
	Else
			Window_Screen_type = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
	End If
    End Function
    



	Private Function Window_Screen_waitforautomatic(ByRef objEdit)
	 
	   If objEdit.Exist(4) Then
		   Dim i
		   For i = 0 to 100
			   Dim message, sometext

         			   	objEdit.Type micReturn
						message = objEdit.GetVisibleText
						sometext = mid(message,1,100)

						If instr(1,message,"AUTOMATIC",1) Then
							Window_Screen_waitforautomatic = Array (0, "Wait complete for automatic  set in the  field", "succesful completion")

							Exit function

						End If
		   Next
		Window_Screen_waitforautomatic = Array (0, "Set Value  '" & strValue & "' in  Field", "Value '" & strValue & "' set in the  field.")
	Else
			Window_Screen_waitforautomatic = Array (1, "Set Value  '" & strValue & "' in  Field", "Field not found")
	End If
    End Function




    Private Function Window_Start_Putty(sServerIP,sPort)
    Dim SettingsFile

    On Error Resume Next
    closePutty
    InfoLog "Starting Putty"
 

    SystemUtil.Run "D:\putty.exe", "", "", ""
	wait (2)
   
	Window("PuTTY Configuration").WinEdit("Host Name").Set sServerIP
	Window("PuTTY Configuration").WinEdit("Port").Set sPort
	Window("PuTTY Configuration").WinRadioButton("Telnet").Set
	


  
  '  If bWindowTitle=True Then
   '     Window("PuttyConfig").WinTreeView("Category:").Select "Window;Behaviour"
       
    'End If
    
    Window("PuTTY Configuration").WinButton("Open").Click
    Wait(5)


    If bWindowTitle=False Then
        window("PUTTY").Activate
        
    End If

    ErrorCatcher Err.Number, Err.Description
    Err.Clear

	Window_Start_Putty = Array (0, "Open the Putty", "Putty suceesfully opened")

End Function







Private Function Window_Start_Simulator()
    'This function will start the Direct Wine Simulator
    'sWindowName is the name of the window that will be changed too.

    On Error Resume Next

	  'SystemUtil.Run	sLoc
		SystemUtil.Run "D:\DirectWine4700 v0.1\DirectWine4700\DirectWine4700\DW_PRJ_4.7.0.0.exe", "", "", ""

		Window("DirectWine Main Menu").Activate

		 ErrorCatcher Err.Number, Err.Description
    Err.Clear

	Window_Start_Simulator = Array (0, "Open the Simulator", "Wine Simulator successfully opened")

End Function




End Class
 


'*********************************************************
' Volume KEYWORDS
'*********************************************************
Class VTKeyword
	
	'*********************************************************
	' Purpose:  Run the action linked to a TE Keyword
	' Inputs:   
	'           strKeyword:       the keyword linked to the function to run
	'           strBrowserID:   	 the id of the TeWindow in the ObjectRepository
	'           strPageID:         the id of the TeScreen in the ObjectRepository
	'           strObjectID:       the id of the TeField in the ObjectRepository
	'           strParam1:        first parameter to pass to the function to run (optional)
	'           strParam2:        second parameter to pass to the function to run (optional)
	'           strParam3:        third parameter to pass to the function to run (optional)
	' Returns:  The return code of the keyword function. 
	'           If the keyword hasn't been found, returns 1 and raise an error.
    	'*********************************************************


	Public Function runKeyword (ByVal strKeyword,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID,ByVal strParam1,ByVal strParam2,ByVal strParam3) ' As Integer
		On Error Resume Next
		Err.Clear
	
		Dim arrReturn ' Array containing the result of the keyword function call
		Dim objCurrent , objCurrent2
		Dim strObjectType
	
		'Retrieve Object Type
		strObjectType = getObjectTypeFromKeyword(strKeyword)
	
		'Run Keyword
		Select Case strKeyword
		Case "VT_Field_Set"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
		Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 
		arrReturn = VT_Field_Set(objCurrent,objCurrent2, strParam1,strParam2,strParam3)
		
		
		
		Case "VT_Field_SetAndGet"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
		Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 
		arrReturn = VT_Field_SetAndGet(objCurrent,objCurrent2, strParam1,strParam2,strParam3)
		
		
		
		
		Case "VT_SWFTable_SetASNValue"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
		'Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 
		arrReturn = VT_SWFTable_SetASNValue(objCurrent, strParam1,strParam2,strParam3)
		
		
		Case "VT_Screen_DataUnload"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
		'Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 
		arrReturn = VT_Screen_DataUnload(objCurrent, strParam1, strParam2, strParam3)
		
		Case "VT_Screen_Equipmentsetup"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID) 
		arrReturn = VT_Screen_Equipmentsetup(objCurrent, strParam1)
		
		
		
		Case "VT_Field_SetAPMAloc"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
		Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 		
		arrReturn = VT_Field_SetAPMAloc(objCurrent,objCurrent2, strParam1, strParam2)
		
		
		Case "VT_Field_SetValue"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
		Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 		
		arrReturn = VT_Field_SetValue(objCurrent,objCurrent2, strParam1, strParam2)
		
		
		Case "VT_Field_SetValueLAMA"
		Set objCurrent = getQTPObject(strObjectType, strBrowserID, strPageID, strObjectID)
		Set objCurrent2 = getQTPObject("Screen", strBrowserID, strPageID, strObjectID) 		
		arrReturn = VT_Field_SetValueLAMA(objCurrent,objCurrent2, strParam1, strParam2, strParam3)

			
		Case Else
			Err.Raise 1, "Keyword", strKeyword & "  keyword not found"
			arrReturn = Array(1, "", Err.Description)
		End Select
		Set objCurrent = Nothing
		
		'If excelobject <> nothing Then
			
		'excelobject.ActiveWorkbook.Close
		'excelobject.Application.Quit
			
		
		'Set excelobject =nothing
		'Set excelSheet = nothing	
		
		'End If
		runKeyword = arrReturn
		
		
		
		
		
		
		
	End Function
	
	Public Function getQTPObject(ByVal strObjectType,ByVal strBrowserID,ByVal strPageID,ByVal strObjectID) ' As Object
		On Error Resume Next
		Err.Clear
		Set getQTPObject = Nothing
		If strObjectType = "Window" Then
			Set getQTPObject  = TEWindow(strBrowserID)
		ElseIf strObjectType = "Screen" Then
			Set getQTPObject  = TEWindow(strBrowserID).TEScreen(strPageID)
		Elseif strObjectType = "Field" Then
			Set getQTPObject  = TEWindow(strBrowserID).TEScreen(strPageID).TEField(strObjectID)
		ElseIf strObjectType = "SWFTable" Then
			Set getQTPObject = SwfWindow(strBrowserID).SwfTable(strObjectID)
		End If
		On Error GoTo 0
		If getQTPObject Is Nothing Then
			Err.Raise 1, "WebKeyword", strObjectID & " Object of type " & strObjectType & " not found in the Object Repository"
		End If
	End Function
	
	
	
	Public Function VT_Field_Set (ByRef objEdit,ByRef objScreen, ByVal strValue , ByVal strValueID2, ByVal strValueID3 )
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = datavalue then
						colno = i
						
						end if
					If excelSheet.cells(1,i).value = datavalue2 then
						qcolno = i
						
						end if
						
				Next
	
				
	
				For i = 2 to Row
					
					varProduct = excelSheet.cells(i,colno).value
					varQuantity = excelSheet.cells(i,qcolno).value
					If varProduct = "" Then
						Exit for
					End If
					
					If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
					objEdit.Set trim(varProduct)
					wait 1
					'objScreen.sendkey TE_ENTER
					objScreen.settext 6,43, varQuantity
					objScreen.settext 7,43, "YES"
					wait 1
					objScreen.sendkey TE_ENTER
					wait 3	
					
					else
					VT_Field_Set = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
					End if
					
					Next	
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing				
				
				
				VT_Field_Set = Array (0, "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' set in the WebEdit field.")
			Else
				VT_Field_Set = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			
		
	End Function
	
	
	
	
	
	
	
	Public Function VT_Field_SetAndGet (ByRef objEdit,ByRef objScreen, ByVal strValue , ByVal strValueID2, ByVal strValueID3 )
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity , arrTo , occ
		arrTo = "0"
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			'datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = datavalue then
						colno = i
						
						end if
						
				Next
	
				
	
				For i = 2 to Row
					
					varProduct = excelSheet.cells(i,colno).value
					
					If varProduct = "" Then
						Exit for
					End If
					
					If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
					objEdit.Set trim(varProduct)
									
					wait 1
					objScreen.sendkey TE_ENTER
					wait 1	
					occ = objScreen.gettext (2,60,2,73)
					 
					 arrTo = arrto + "_" + cstr(occ)
					else
					excelobject.ActiveWorkbook.Close
					excelobject.Application.Quit
	 
					Set excelobject =nothing
					Set excelSheet = nothing
					VT_Field_SetAndGet = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
					End if
					
					Next	
					
					Call saveRunValue (strValueID3, arrTo)
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing				
				
				
				VT_Field_SetAndGet = Array (0, "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' set in the WebEdit field.")
			Else
				VT_Field_SetAndGet = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
	End Function
	
	
	
	
	
	
	Public Function VT_SWFTable_SetASNValue (ByRef objEdit,ByVal strValue , ByVal strValueID2, ByVal strValueID3 )
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity , arrTo , occ , mypo , asnpo, varDate, varPO
		arrTo = split(strValueID3, "_")
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			'datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = datavalue then
						colno = i
				end if
				
			If excelSheet.cells(1,i).value = "CodeDate" then
						dcolno = i
				end if
								
				
				
				If excelSheet.cells(1,i).value = "PONumber" then
						rcolno = i
				end if
								
				Next
	
				
	
				For i = 2 to Row
					
					varQuantity = excelSheet.cells(i,colno).value
					varPO = excelSheet.cells(i,rcolno).value
					varDate = excelSheet.cells(i,dcolno).value
					If varQuantity = "" Then
						Exit for
					End If
					
					next 
					
					For j = 0 To Row - 2
						
						
					
					objEdit.SetCellData j, 0, "1"
					objEdit.SetCellData j, 1, varQuantity
					objEdit.SetCellData j, 2, varQuantity			
					d = j + 1
					objEdit.SetCellData j, 4, arrTo(d)								

			
					asnpo = "LM" + cstr(varPO) + "001"
					objEdit.SetCellData j, 6, asnpo
					objEdit.SetCellData j, 9, varDate
			
					 
					 
					 
					 Next
					'else
					
			
			excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
					
					
								
				
				
				VT_SWFTable_SetASNValue = Array (0, "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' set in the WebEdit field.")
			Else
				VT_SWFTable_SetASNValue = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			End Function
			
			
	
	
	
	
	Public Function VT_Screen_DataUnload (ByRef objEdit,ByVal strValue , strValueID2, strValueID3)
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity , arrTo , occ , mypo , asnpo, varDate, varPO, palletno , remain, div, b, k, j, i	
		b = 2
		arrTo = split(strValueID3, "_")
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			'datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = "SSCC" then
						scolno = i
					end if
					
					If excelSheet.cells(1,i).value = "OCC" then
						ocolno = i
					end if
					
					If excelSheet.cells(1,i).value = "CodeDate" then
						ccolno = i
					end if
					
					If excelSheet.cells(1,i).value = "PONumber" then
						rcolno = i
					end if
					
				Next
				
				
							
				'set objScreen = TeWindow("TeWindow").TeScreen("GIGL")
				palletno = objEdit.GetText (2 ,27 ,2 ,29)
				div = palletno/8
				remain = palletno mod 8

					For i = 1 To int(div)
					For j = 1 To 8
							
					varSSCC = excelSheet.cells(b,scolno).value
					varDate = excelSheet.cells(b,ccolno).value
					varOCC = excelSheet.cells(b,ocolno).value
								
					b = b + 1
					objEdit.settext 4, 6, varSSCC
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					objEdit.sendkey TE_ENTER
					Call TESync() 
					objEdit.settext 5, 2, varOCC
					objEdit.settext 6, 2, varDate	
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					objEdit.sendkey TE_ENTER
					Call TESync() 
					objEdit.settext 8, 13, "NO"
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					objEdit.sendkey TE_ENTER	
					Call TESync()					
			 
			 
					 
					 Next
					 
					objEdit.sendkey TE_PF8	
					Call TESync() 
					objEdit.settext 13, 29, strValueID2
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					
					objEdit.sendkey TE_ENTER
					Call TESync()
					
					objEdit.settext 7, 14, strValueID3
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					
					objEdit.sendkey TE_ENTER
					Call TESync()
					 
					Next
					
					For k = 1 To remain
					
						
					varSSCC = excelSheet.cells(b,scolno).value
					varDate = excelSheet.cells(b,ccolno).value
					varOCC = excelSheet.cells(b,ocolno).value
					b = b + 1
					
					objEdit.settext 4, 6, varSSCC
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					
					objEdit.sendkey TE_ENTER
					Call TESync() 
					objEdit.settext 5, 2, varOCC
					objEdit.settext 6, 2, varDate	
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					
					objEdit.sendkey TE_ENTER
					Call TESync() 
					objEdit.settext 8, 13, "NO"
					Desktop.CaptureBitmap "ScreenShot.png",True
					reporter.ReportEvent micPass,"The status has been changed to complete","Status Complete","ScreenShot.png"
					
					objEdit.sendkey TE_ENTER	
					Call TESync() 
					
					
						
					Next
					
			
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing
					
					
								
				
				
				VT_Screen_DataUnload = Array (0, "Set Value  '" & varSSCC & "' in WebEdit Field", "Value '" & varSSCC & "' set in the WebEdit field.")
			Else
				VT_Screen_DataUnload = Array (1,  "Set Value  '" & varSSCC & "' in WebEdit Field", "Value '" & varSSCC & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			End Function
			
			Public Function TESync()
			Dim e_status
			Dim counter
			e_status = "No"
			counter = 0
'		Wait(1)
				On Error resume next
				Do Until e_status = "Ready"
				e_status = TeWindow("short name:=A" ).GetROProperty("emulator status")
			'e_status = TeWindow("short name:=*" ).GetROProperty("emulator status")
			If e_status = "Ready" Then
				Exit Do
			End If
			counter = counter + 1
			If counter = 100000 Then
				Reporter.ReportEvent micFail,"Call Sync failed", "Counter=" & counter & vbcr & "Status=" & e_status
				Exit Do
			End If
'			Wait(2)
			Loop
		If counter > 100 Then
			Reporter.ReportEvent 4, "Waiting Time : " & counter, ""
		End If
	'''On error goto 0
End Function




			
	Public Function VT_Screen_Equipmentsetup(ByRef objScreen,ByVal strValueID1)
		If objScreen.Exist(4) Then
			objScreen.settext 3,41 , "TCML"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 3,30 , "45"
			objScreen.sendkey TE_ENTER
		Call TESync()			
			objScreen.settext 2,69 , strValueID1
			objScreen.sendkey TE_ENTER
		Call TESync()
			
		If instr(1,objScreen.gettext(24,40,24,78), "FUNCTION COMPLETE", 1 )Then
								
			objScreen.settext 3,69 , "DELETE"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.sendkey TE_ENTER
		Call TESync()
			
					
		End If
			objScreen.sendkey TE_PF3
		Call TESync()
			
			objScreen.settext 3,30 , "41"
			objScreen.sendkey TE_ENTER
		Call TESync()
			
			objScreen.settext 1,73 , strValueID1
			objScreen.sendkey TE_ENTER
		Call TESync()
			
		If instr(1,objScreen.gettext(24,40,24,78), "INQUIRY COMPLETE", 1 ) Then
								
			objScreen.settext 2,70 , "DELETE"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.sendkey TE_PF4
		Call TESync()			
			
		End If
			
			objScreen.settext 2,70 , "ADD"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 7,52 , "UNLOADING"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 9,52 ,"UNLOADING"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 11,64 , "1"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 13,64 , "s"
			objScreen.sendkey TE_ENTER	
		Call TESync()
			
			objScreen.settext 15,64 , "N"
			objScreen.sendkey TE_ENTER	
		Call TESync()
			objScreen.sendkey TE_PF4
		Call TESync()
			objScreen.sendkey TE_PF3
		Call TESync()
			
			objScreen.settext 3,30 , "45"
			objScreen.sendkey TE_ENTER
		Call TESync()			
			objScreen.settext 2,69 , strValueID1
			objScreen.sendkey TE_ENTER
		Call TESync()
											
			objScreen.settext 3,69 , "ADD"
			objScreen.sendkey TE_ENTER
		Call TESync()
			
			objScreen.settext 4,44 , strValueID1
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 5,47 , "Y"
			objScreen.sendkey TE_ENTER
		Call TESync()
			objScreen.settext 6,45 , "ACT"
			objScreen.sendkey TE_ENTER
		Call TESync()
		objScreen.sendkey TE_PF3
		Call TESync()
		objScreen.sendkey TE_PF3
		Call TESync()
		objScreen.sendkey TE_PF3	
		Call TESync()
		
		
				VT_Screen_Equipmentsetup = Array (0, "Setup done for the equipment", "Equipemnt '" & strValueID1 & "' setup done.")
			Else
				VT_Screen_Equipmentsetup = Array (0, "Page Object does not exists", "Equipemnt '" & strValueID1 & "' setup cant be done.")
				
			End If
			
			
			
		End function	
			
			
			
			
			
	Public Function VT_Field_SetAPMAloc (ByRef objEdit,ByRef objScreen, ByVal strValue , ByVal strValueID2)
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity, quan , Row , Col , i
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			'datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = datavalue then
						colno = i
						
						end if
					'If excelSheet.cells(1,i).value = datavalue2 then
					'	qcolno = i
						
					'	end if
						
				Next
	
				
	
				For i = 2 to Row
					
					varProduct = excelSheet.cells(i,colno).value
					'varQuantity = excelSheet.cells(i,qcolno).value
					If varProduct = "" Then
						Exit for
					End If
					
					If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
					objEdit.Set trim(varProduct)
					wait 1
					'objScreen.sendkey TE_ENTER
					objScreen.settext 4,72, "a111111 "
					objScreen.settext 3,73, "   "
					objScreen.settext 5,78, "gd"
					wait 1
					objScreen.sendkey TE_ENTER
					wait 1
					Call TESync()
					
					quan = objScreen.gettext (11,29,11,31)
					objScreen.settext 11,34, "0"
					wait 1
					objScreen.settext 11,39, "r"
					wait 1
					objScreen.sendkey TE_ENTER
					Call TESync()
					else
					VT_Field_SetAPMAloc = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
					End if
					
					Next	
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing				
				
				
				VT_Field_SetAPMAloc = Array (0, "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' set in the WebEdit field.")
			Else
				VT_Field_SetAPMAloc = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			
		
	End Function
	
	
			
			
			
	Public Function VT_Field_SetValue (ByRef objEdit,ByRef objScreen, ByVal strValue , ByVal strValueID2)
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity, quan , Row , Col , i
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			'datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = datavalue then
						colno = i
						
						end if
					'If excelSheet.cells(1,i).value = datavalue2 then
					'	qcolno = i
						
					'	end if
						
				Next
	
				
	
				For i = 2 to Row
					
					varProduct = excelSheet.cells(i,colno).value
					'varQuantity = excelSheet.cells(i,qcolno).value
					If varProduct = "" Then
						Exit for
					End If
					
					If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
					objEdit.Set trim(varProduct)
					wait 1
					objScreen.sendkey TE_ENTER
					Call TESync()
					
					
					objScreen.settext 22 , 45 , "f"
					objScreen.sendkey TE_ENTER
					Call TESync()
					else
					VT_Field_SetValue = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
					End if
					
					Next	
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing				
				
				
				VT_Field_SetValue = Array (0, "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' set in the WebEdit field.")
			Else
				VT_Field_SetValue = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			
		
	End Function
	
	
			
	
	
			
			
			
	Public Function VT_Field_SetValueLAMA (ByRef objEdit,ByRef objScreen, ByVal strValue , ByVal strValueID2, ByVal strValueID3)
	If objEdit.Exist(4) Then
		Dim excelobject, excelSheet, datavalue, varProduct, colno, datavalue2, varQuantity, quan , Row , Col , i, qcolno, rcolno, Reserveloc
			Set excelobject = createobject( "Excel.Application")
			excelobject.Workbooks.Open(strValue)
			Set excelSheet = excelobject.ActiveWorkbook.Worksheets("VTData")
			excelSheet.Application.Visible = true
			datavalue = strValueID2
			datavalue2 = strValueID3
            Row = excelSheet.UsedRange.Rows.Count

			'If datavalue = "TD127" or datavalue = "TD128" Then

				Col = excelSheet.UsedRange.columns.count
				For i = 1 to Col
					If excelSheet.cells(1,i).value = datavalue then
						colno = i
						
						end if
					If excelSheet.cells(1,i).value = datavalue2 then
						qcolno = i
						
						end if
					If excelSheet.cells(1,i).value = "Reserve" then
						rcolno = i
						
						end if
						
				Next
	
				
	
				For i = 2 to Row
					
					varProduct = excelSheet.cells(i,colno).value
					varQuantity = excelSheet.cells(i,qcolno).value
					Reserveloc = excelSheet.cells(i,rcolno).value
					If varProduct = "" Then
						Exit for
					End If
					
					If UCase(objEdit.GetROProperty("protected")) = "FALSE" Then
					objEdit.Set trim(varProduct)
					wait 1
					objScreen.sendkey TE_ENTER
					Call TESync()
					
					
					objScreen.settext 15, 31 , varQuantity
					objScreen.settext 15, 48 , "s"
					objScreen.sendkey TE_ENTER
					Call TESync()
					
					objScreen.settext 15, 31 , Reserveloc
					objScreen.settext 15, 48 , "r"
					objScreen.sendkey TE_ENTER
					Call TESync()
					
					else
					VT_Field_SetValueLAMA = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
					End if
					
					Next	
				excelobject.ActiveWorkbook.Close
				excelobject.Application.Quit
	 
				Set excelobject =nothing
				Set excelSheet = nothing				
				
				
				VT_Field_SetValueLAMA = Array (0, "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' set in the WebEdit field.")
			Else
				VT_Field_SetValueLAMA = Array (1,  "Set Value  '" & varProduct & "' in WebEdit Field", "Value '" & varProduct & "' not set in the WebEdit field, Field is Protected.")
				
			End If
			
			
			
		
	End Function
	
	

End Class
